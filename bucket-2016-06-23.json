{
  "bucket": {
    "_id": "56edeedd694d9a5e6f000031",
    "slug": "tonyspiro",
    "title": "TonySpiro",
    "object_types": [
      {
        "title": "Pages",
        "slug": "pages",
        "singular": "Page",
        "order": 2,
        "metafields": [
          {
            "edit": 1,
            "value": "<p><br></p>",
            "key": "teaser",
            "title": "Teaser",
            "type": "html-textarea",
            "children": false
          },
          {
            "edit": 1,
            "value": "",
            "key": "thumb",
            "title": "Thumb",
            "type": "file",
            "children": false
          }
        ],
        "options": {
          "slug_field": 0,
          "content_editor": 1,
          "add_metafields": 0,
          "metafields_title": 0,
          "metafields_key": 0
        }
      },
      {
        "title": "Posts",
        "slug": "posts",
        "singular": "Post",
        "order": 3,
        "metafields": [
          {
            "edit": 1,
            "value": "",
            "key": "wp-id",
            "title": "WP ID",
            "type": "text",
            "children": false
          },
          {
            "edit": 1,
            "value": "",
            "key": "published",
            "title": "Published",
            "type": "date",
            "children": false
          },
          {
            "object_type": "authors",
            "edit": 1,
            "value": "5712bb5de9c686d006000013",
            "key": "author",
            "title": "Author",
            "type": "object",
            "children": false
          },
          {
            "edit": 1,
            "value": "",
            "key": "hero",
            "title": "Hero",
            "type": "file",
            "children": false
          },
          {
            "edit": 1,
            "value": "",
            "key": "tag",
            "title": "Tag",
            "type": "text",
            "children": false
          },
          {
            "edit": 1,
            "value": "<p><br></p>",
            "key": "teaser",
            "title": "Teaser",
            "type": "html-textarea",
            "children": false
          }
        ],
        "options": {
          "slug_field": 0,
          "content_editor": 1,
          "add_metafields": 0,
          "metafields_title": 0,
          "metafields_key": 0
        }
      },
      {
        "title": "Work",
        "slug": "work",
        "singular": "work",
        "order": 4,
        "metafields": [
          {
            "edit": 1,
            "value": "",
            "key": "thumb",
            "title": "Thumb",
            "type": "file",
            "children": false
          },
          {
            "edit": 1,
            "value": "<p><br></p>",
            "key": "excerpt",
            "title": "Excerpt",
            "type": "html-textarea",
            "children": false
          }
        ],
        "options": {
          "slug_field": 0,
          "content_editor": 1,
          "add_metafields": 0,
          "metafields_title": 0,
          "metafields_key": 0
        }
      },
      {
        "title": "Global Items",
        "slug": "global-items",
        "singular": "Global Item",
        "help_text": null,
        "metafields": [],
        "options": {
          "slug_field": 1,
          "content_editor": 1,
          "add_metafields": 1,
          "metafields_title": 1,
          "metafields_key": 1
        },
        "order": 1
      },
      {
        "title": "Authors",
        "slug": "authors",
        "singular": "Author",
        "help_text": null,
        "metafields": [
          {
            "edit": 1,
            "value": "",
            "key": "image",
            "title": "Image",
            "type": "file",
            "children": false
          }
        ],
        "options": {
          "slug_field": 1,
          "content_editor": 1,
          "add_metafields": 1,
          "metafields_title": 1,
          "metafields_key": 1
        }
      }
    ],
    "links": [
      {
        "title": "The Website",
        "link": "https://tonyspiro.com"
      }
    ],
    "objects": [
      {
        "_id": "5712bb5de9c686d006000013",
        "order": 0,
        "slug": "tony-spiro",
        "title": "Tony Spiro",
        "content": "<p>Hello, my name is Tony Spiro. &nbsp;this is my blog :)</p>",
        "metafields": [
          {
            "edit": 1,
            "value": "183fe010-0421-11e6-8e50-dd42082f9224-avatar.jpg",
            "key": "image",
            "title": "Image",
            "type": "file",
            "children": false
          }
        ],
        "bucket": "56edeedd694d9a5e6f000031",
        "type_slug": "authors",
        "created": "2016-04-16T22:23:25.522Z",
        "user_id": "5357ef811693be2118000001",
        "options": {
          "slug_field": 1,
          "content_editor": 1,
          "add_metafields": 1,
          "metafields_title": 1,
          "metafields_key": 1
        },
        "status": "published"
      },
      {
        "_id": "571436eae9c686d006000030",
        "order": 0,
        "slug": "search",
        "title": "Search",
        "content": "",
        "metafields": [
          {
            "edit": 1,
            "value": "<p><br></p>",
            "key": "teaser",
            "title": "Teaser",
            "type": "html-textarea",
            "children": false
          },
          {
            "edit": 1,
            "value": "",
            "key": "thumb",
            "title": "Thumb",
            "type": "file",
            "children": false
          }
        ],
        "bucket": "56edeedd694d9a5e6f000031",
        "type_slug": "pages",
        "created": "2016-04-18T01:22:50.474Z",
        "user_id": "5357ef811693be2118000001",
        "options": {
          "slug_field": 0,
          "content_editor": 0,
          "add_metafields": 0,
          "metafields_title": 0,
          "metafields_key": 0
        },
        "status": "published"
      },
      {
        "_id": "5713a982e9c686d00600001a",
        "order": 0,
        "slug": "contact-info",
        "title": "Contact Info",
        "content": "",
        "metafields": [
          {
            "edit": 1,
            "value": "https://twitter.com/tonyspiro",
            "key": "twitter",
            "title": "Twitter",
            "type": "text",
            "children": false
          },
          {
            "edit": 1,
            "value": "https://github.com/tonyspiro",
            "key": "github",
            "title": "GitHub",
            "type": "text",
            "children": false
          },
          {
            "edit": 1,
            "value": "tspiro@tonyspiro.com",
            "key": "email",
            "title": "Email",
            "type": "text",
            "children": false
          }
        ],
        "bucket": "56edeedd694d9a5e6f000031",
        "type_slug": "global-items",
        "created": "2016-04-17T15:19:30.638Z",
        "user_id": "5357ef811693be2118000001",
        "options": {
          "slug_field": 0,
          "content_editor": 0,
          "add_metafields": 0,
          "metafields_title": 0,
          "metafields_key": 0
        },
        "status": "published"
      },
      {
        "_id": "571408ffe9c686d00600002a",
        "order": 0,
        "slug": "cosmic-js",
        "title": "Cosmic JS",
        "content": "<p><span style=\"text-align: center;\"><a href=\"https://cosmicjs.com\" target=\"_blank\">Cosmic JS</a> is a powerful content platform that makes it easy to transform your content into a beautifully simple API which can be used in any website or internet-connected application. Developers are enabled to build freely and easily, content editors can intuitively edit content and everyone saves time in the process :)</span><br></p><p><span style=\"text-align: center;\"><a href=\"https://cosmicjs.com\" target=\"_blank\"><img src=\"https://cosmicjs.com/uploads/a5414cb0-04e9-11e6-8e50-dd42082f9224-Screen%20Shot%202016-04-17%20at%205.12.58%20PM.png\" style=\"width: 1380px;\"></a><br></span></p>",
        "metafields": [
          {
            "edit": 1,
            "value": "7e97fdc0-04e9-11e6-8e50-dd42082f9224-Screen Shot 2016-04-17 at 5.12.21 PM.png",
            "key": "thumb",
            "title": "Thumb",
            "type": "file",
            "children": false
          },
          {
            "edit": 1,
            "value": "<p><span style=\"text-align: center;\">Cosmic JS is a cloud-hosted content platform that makes it easy to add dynamic content to any website or app.</span><br></p>",
            "key": "excerpt",
            "title": "Excerpt",
            "type": "html-textarea",
            "children": false
          }
        ],
        "bucket": "56edeedd694d9a5e6f000031",
        "type_slug": "work",
        "created": "2016-04-17T22:06:55.183Z",
        "user_id": "5357ef811693be2118000001",
        "options": {
          "slug_field": 0,
          "content_editor": 1,
          "add_metafields": 0,
          "metafields_title": 0,
          "metafields_key": 0
        },
        "status": "published",
        "modified": "2016-04-17T22:14:58.986Z"
      },
      {
        "_id": "576acf43229db02131000074",
        "order": 0,
        "slug": "getting-started-with-mobx-an-easy-example",
        "title": "Getting Started With MobX: An Easy Example",
        "content": "<p>React is the new hotness in the JavaScript world and <a href=\"https://mobxjs.github.io/mobx/\" target=\"_blank\">MobX</a>&nbsp;looks to be becoming the new hotness in the React world, so I thought I would check it out and see what all the fuss is about. &nbsp;</p><p>MobX in its purest form is a state-management tool, one that is most commonly being used in conjunction with React. &nbsp;There are&nbsp;many other implementations of React state management (Flux, Redux, Reflux, etc) because application state is hard especially managing state as an application grows. Everyone has their own opinion on their preferred method, but as I looked deeper into MobX and the other options, I found MobX to be an extremely easy and intuitive way to manage state for my application. &nbsp;Forget about boilerplate, configuration and event emitters, MobX covers you with it's observed state patterns.</p><p>To dive into it further,&nbsp;I built an <a href=\"https://github.com/tonyspiro/easy-mobx-example\" target=\"_blank\">Easy MobX Example available on GitHub</a>. &nbsp;You can also <a href=\"http://easy-mobx-example.cosmicapp.co/\" target=\"_blank\">view the finished demo here</a>. &nbsp;In this article I will show you step-by-step how to build an easy MobX-powered React application. &nbsp;Let's get started.</p><p>Let's start with our index file:</p><pre class=\"  language-markup\"><code class=\"  language-markup\"><span class=\"token doctype\">&lt;!DOCTYPE html&gt;</span>\r\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span><span class=\"token punctuation\">&gt;</span></span>\r\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">&gt;</span></span>\r\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">&gt;</span></span>Easy MobX Example<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">&gt;</span></span>\r\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>link</span> <span class=\"token attr-name\">rel</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>stylesheet<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\r\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">&gt;</span></span>\r\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">&gt;</span></span>\r\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>root<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\r\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>/bundle.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token script language-javascript\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">&gt;</span></span>\r\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">&gt;</span></span>\r\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">&gt;</span></span></code></pre>\r\n\r\n<p>All you need is a div with <code class=\"  language-markup\">id=\"root\"</code> and the <code class=\"  language-markup\">bundle.js</code> file which will store all our application logic. &nbsp;We're also going to add Bootstrap to our application for a better frontend UI. &nbsp;Now let's add some packages!</p><p>Create the package.json file and add this to it:</p><pre class=\"  language-javascript\"><code class=\"  language-javascript\"><span class=\"token punctuation\">{</span>\r\n  <span class=\"token string\">\"name\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"easy-mobx-example\"</span><span class=\"token punctuation\">,</span>\r\n  <span class=\"token string\">\"version\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"1.0.0\"</span><span class=\"token punctuation\">,</span>\r\n  <span class=\"token string\">\"description\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"Easy Example for MobX + React. Includes hot code reloading in development mode and minification in production mode.  Also includes a demonstration of how to hook up a CMS API and do database calls and loading states.\"</span><span class=\"token punctuation\">,</span>\r\n  <span class=\"token string\">\"scripts\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token string\">\"development\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"NODE_ENV=development node server-dev.js\"</span><span class=\"token punctuation\">,</span>\r\n    <span class=\"token string\">\"start\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"NODE_ENV=production webpack -p; NODE_ENV=production node server.js\"</span>\r\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\r\n  <span class=\"token string\">\"devDependencies\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token string\">\"babel-core\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"^6.9.1\"</span><span class=\"token punctuation\">,</span>\r\n    <span class=\"token string\">\"babel-loader\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"^6.2.4\"</span><span class=\"token punctuation\">,</span>\r\n    <span class=\"token string\">\"babel-plugin-transform-decorators-legacy\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"^1.3.4\"</span><span class=\"token punctuation\">,</span>\r\n    <span class=\"token string\">\"babel-preset-es2015\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"^6.9.0\"</span><span class=\"token punctuation\">,</span>\r\n    <span class=\"token string\">\"babel-preset-react\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"^6.5.0\"</span><span class=\"token punctuation\">,</span>\r\n    <span class=\"token string\">\"babel-preset-stage-1\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"^6.5.0\"</span><span class=\"token punctuation\">,</span>\r\n    <span class=\"token string\">\"eslint-plugin-react\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"^5.1.1\"</span><span class=\"token punctuation\">,</span>\r\n    <span class=\"token string\">\"react-hot-loader\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"^3.0.0-beta.2\"</span><span class=\"token punctuation\">,</span>\r\n    <span class=\"token string\">\"webpack\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"^1.13.1\"</span><span class=\"token punctuation\">,</span>\r\n    <span class=\"token string\">\"webpack-dev-server\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"^1.14.1\"</span>\r\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\r\n  <span class=\"token string\">\"dependencies\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token string\">\"cosmicjs\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"^2.1.2\"</span><span class=\"token punctuation\">,</span>\r\n    <span class=\"token string\">\"express\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"^4.14.0\"</span><span class=\"token punctuation\">,</span>\r\n    <span class=\"token string\">\"hogan-express\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"^0.5.2\"</span><span class=\"token punctuation\">,</span>\r\n    <span class=\"token string\">\"mobx\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"^2.2.2\"</span><span class=\"token punctuation\">,</span>\r\n    <span class=\"token string\">\"mobx-react\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"^3.3.1\"</span><span class=\"token punctuation\">,</span>\r\n    <span class=\"token string\">\"mobx-react-devtools\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"^4.2.0\"</span><span class=\"token punctuation\">,</span>\r\n    <span class=\"token string\">\"react\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"^15.1.0\"</span><span class=\"token punctuation\">,</span>\r\n    <span class=\"token string\">\"react-bootstrap\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"^0.29.5\"</span><span class=\"token punctuation\">,</span>\r\n    <span class=\"token string\">\"react-dom\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"^15.1.0\"</span><span class=\"token punctuation\">,</span>\r\n    <span class=\"token string\">\"shorti\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"^1.1.6\"</span><span class=\"token punctuation\">,</span>\r\n    <span class=\"token string\">\"slug\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"^0.9.1\"</span>\r\n  <span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span></code></pre>\r\n\r\n<p>Now run the init script in your terminal.<br></p>\r\n<pre class=\"  language-markup\"><code class=\"  language-markup\">npm init</code></pre><p>Basically we're installing:<br><span style=\"line-height: 1.42857;\">1. Babel to compile our ES6 and React JavaScript into ES5.<br></span><span style=\"line-height: 1.42857;\">2. React Hot Loader for magic reloading when we edit any code in development.<br></span><span style=\"line-height: 1.42857;\">3. Webpack to bundle everything.<br></span><span style=\"line-height: 1.42857;\">4. <a href=\"https://cosmicjs.com\" target=\"_blank\">Cosmic JS</a> to connect to a <a href=\"https://cosmicjs.com\" target=\"_blank\">CMS API</a> that will serve as a good example of how to handle loading states during database calls.<br></span><span style=\"line-height: 1.42857;\">5. Express for our node server framework.<br></span><span style=\"line-height: 1.42857;\">6. MobX for state management.<br></span><span style=\"line-height: 1.42857;\">7. React for UI components.<br></span><span style=\"line-height: 1.42857;\">8. React Bootstrap for better UI style.<br></span><span style=\"line-height: 1.42857;\">9. Shorti for easy inline styles.<br></span><span style=\"line-height: 1.42857;\">10. Slug to slugify our titles before adding them to Cosmic JS.</span></p><p>Next let's add our server-side code!</p>\r\n<p>Create a new file titled <code class=\"  language-markup\">server.js</code> and add the following:</p><pre class=\"  language-javascript\"><code class=\"  language-javascript\"><span class=\"token keyword\">var</span> express <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'express'</span><span class=\"token punctuation\">)</span>\r\n<span class=\"token keyword\">var</span> app <span class=\"token operator\">=</span> <span class=\"token function\">express</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\r\n<span class=\"token keyword\">var</span> hogan <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'hogan-express'</span><span class=\"token punctuation\">)</span>\r\napp<span class=\"token punctuation\">.</span><span class=\"token function\">engine</span><span class=\"token punctuation\">(</span><span class=\"token string\">'html'</span><span class=\"token punctuation\">,</span> hogan<span class=\"token punctuation\">)</span>\r\napp<span class=\"token punctuation\">.</span><span class=\"token keyword\">set</span><span class=\"token punctuation\">(</span><span class=\"token string\">'views'</span><span class=\"token punctuation\">,</span> __dirname <span class=\"token operator\">+</span> <span class=\"token string\">'/'</span><span class=\"token punctuation\">)</span>\r\napp<span class=\"token punctuation\">.</span><span class=\"token keyword\">set</span><span class=\"token punctuation\">(</span><span class=\"token string\">'port'</span><span class=\"token punctuation\">,</span> process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span>PORT <span class=\"token operator\">||</span> <span class=\"token number\">3000</span><span class=\"token punctuation\">)</span>\r\napp<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span>express<span class=\"token punctuation\">.</span><span class=\"token keyword\">static</span><span class=\"token punctuation\">(</span>__dirname <span class=\"token operator\">+</span> <span class=\"token string\">'/public'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\r\napp<span class=\"token punctuation\">.</span><span class=\"token keyword\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">,</span> res<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\r\n  res<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token string\">'index.html'</span><span class=\"token punctuation\">)</span>\r\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\r\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Listening at localhost:'</span> <span class=\"token operator\">+</span> app<span class=\"token punctuation\">.</span><span class=\"token keyword\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'port'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\r\napp<span class=\"token punctuation\">.</span><span class=\"token function\">listen</span><span class=\"token punctuation\">(</span>app<span class=\"token punctuation\">.</span><span class=\"token keyword\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'port'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre>\r\n<p><span style=\"line-height: 1.42857;\">Here we are:<br></span><span style=\"line-height: 1.42857;\">1. Adding the Express node framework.<br></span><span style=\"line-height: 1.42857;\">2.&nbsp;</span><span style=\"line-height: 1.42857;\">Adding </span><span style=\"line-height: 1.42857;\">Hogan, my preferred view template engine.<br></span><span style=\"line-height: 1.42857;\">3. The only route for the app which is '/'.<br></span><span style=\"line-height: 1.42857;\">4. Listening on port 3000 on server start.</span></p><p><span style=\"line-height: 1.42857;\">Now let's add our client-side code!</span></p>\r\n<p>Create three new files titled <code class=\"  language-markup\">index.js</code>, <code class=\"  language-markup\">App.js</code> and <code class=\"  language-markup\">AppState.js</code> and put them in a directory titled <code class=\"  language-markup\">components</code>.</p><p>In&nbsp;<code class=\"  language-markup\">index.js</code>&nbsp;add the following:<br></p>\r\n<pre class=\"  language-javascript\"><code class=\"  language-javascript\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span>\r\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> render <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react-dom'</span>\r\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> AppContainer <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react-hot-loader'</span>\r\n<span class=\"token keyword\">import</span> AppState <span class=\"token keyword\">from</span> <span class=\"token string\">'./AppState'</span>\r\n<span class=\"token keyword\">import</span> App <span class=\"token keyword\">from</span> <span class=\"token string\">'./App'</span>\r\n\r\n<span class=\"token keyword\">const</span> data <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">AppState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\r\n<span class=\"token function\">render</span><span class=\"token punctuation\">(</span>\r\n  <span class=\"token operator\">&lt;</span>AppContainer<span class=\"token operator\">&gt;</span>\r\n    <span class=\"token operator\">&lt;</span>App data<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>data<span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">&gt;</span>\r\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>AppContainer<span class=\"token operator\">&gt;</span><span class=\"token punctuation\">,</span>\r\n  document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'root'</span><span class=\"token punctuation\">)</span>\r\n<span class=\"token punctuation\">)</span>\r\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span>NODE_ENV <span class=\"token operator\">!==</span> <span class=\"token string\">'production'</span> <span class=\"token operator\">&amp;&amp;</span> module<span class=\"token punctuation\">.</span>hot<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n  module<span class=\"token punctuation\">.</span>hot<span class=\"token punctuation\">.</span><span class=\"token function\">accept</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./App'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token keyword\">const</span> NextApp <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./App'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">default</span>\r\n    <span class=\"token function\">render</span><span class=\"token punctuation\">(</span>\r\n      <span class=\"token operator\">&lt;</span>AppContainer<span class=\"token operator\">&gt;</span>\r\n        <span class=\"token operator\">&lt;</span>NextApp data<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>data<span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">&gt;</span>\r\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>AppContainer<span class=\"token operator\">&gt;</span><span class=\"token punctuation\">,</span>\r\n      document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'root'</span><span class=\"token punctuation\">)</span>\r\n    <span class=\"token punctuation\">)</span>\r\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\r\n<span class=\"token punctuation\">}</span></code></pre>\r\n<p>This is the entry point of our application.  It's creating the ability for hot reloading as well as providing our lower-level App component with the data from the AppState class.</p>\r\n<p>Now let's add the following to the <code class=\"  language-markup\">App.js</code> file:</p>\r\n<pre class=\"  language-javascript\"><code class=\"  language-javascript\"><span class=\"token keyword\">import</span> React<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> Component <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span>\r\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> observer <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'mobx-react'</span>\r\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> FormGroup<span class=\"token punctuation\">,</span> FormControl<span class=\"token punctuation\">,</span> Input<span class=\"token punctuation\">,</span> Button <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react-bootstrap'</span>\r\n<span class=\"token keyword\">import</span> config <span class=\"token keyword\">from</span> <span class=\"token string\">'../config'</span>\r\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> addObject<span class=\"token punctuation\">,</span> deleteObject <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'cosmicjs'</span>\r\n<span class=\"token keyword\">import</span> slug <span class=\"token keyword\">from</span> <span class=\"token string\">'slug'</span>\r\n<span class=\"token keyword\">import</span> S <span class=\"token keyword\">from</span> <span class=\"token string\">'shorti'</span>\r\n\r\n@observer\r\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">App</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Component</span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token function\">handleInputChange</span><span class=\"token punctuation\">(</span>type<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>form_data<span class=\"token punctuation\">[</span>type<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>value\r\n  <span class=\"token punctuation\">}</span>\r\n  <span class=\"token function\">handleSubmit</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n    e<span class=\"token punctuation\">.</span><span class=\"token function\">preventDefault</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\r\n    <span class=\"token keyword\">const</span> title <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>form_data<span class=\"token punctuation\">.</span>title\r\n    <span class=\"token keyword\">const</span> content <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>form_data<span class=\"token punctuation\">.</span>content\r\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>title<span class=\"token punctuation\">)</span>\r\n      <span class=\"token keyword\">return</span>\r\n    <span class=\"token keyword\">const</span> object <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\r\n      slug<span class=\"token punctuation\">:</span> <span class=\"token function\">slug</span><span class=\"token punctuation\">(</span>title<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\r\n      type_slug<span class=\"token punctuation\">:</span> <span class=\"token string\">'posts'</span><span class=\"token punctuation\">,</span>\r\n      title<span class=\"token punctuation\">,</span>\r\n      content\r\n    <span class=\"token punctuation\">}</span>\r\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>is_saving <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span>\r\n    <span class=\"token function\">addObject</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> bucket<span class=\"token punctuation\">:</span> config<span class=\"token punctuation\">.</span>cosmicjs<span class=\"token punctuation\">.</span>bucket <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> object<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">,</span> res<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token punctuation\">{</span>\r\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>is_saving <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span>\r\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span><span class=\"token function\">addPost</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">.</span>object<span class=\"token punctuation\">)</span>\r\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>form_data <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\r\n        title<span class=\"token punctuation\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span>\r\n        content<span class=\"token punctuation\">:</span> <span class=\"token string\">''</span>\r\n      <span class=\"token punctuation\">}</span>\r\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\r\n  <span class=\"token punctuation\">}</span>\r\n  <span class=\"token function\">handleRemoveClick</span><span class=\"token punctuation\">(</span>post<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span><span class=\"token function\">removePost</span><span class=\"token punctuation\">(</span>post<span class=\"token punctuation\">.</span>_id<span class=\"token punctuation\">)</span>\r\n    <span class=\"token function\">deleteObject</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> bucket<span class=\"token punctuation\">:</span> config<span class=\"token punctuation\">.</span>cosmicjs<span class=\"token punctuation\">.</span>bucket <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> slug<span class=\"token punctuation\">:</span> post<span class=\"token punctuation\">.</span>slug <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">,</span> res<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token punctuation\">{</span>\r\n      <span class=\"token comment\" spellcheck=\"true\">// object deleted</span>\r\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\r\n  <span class=\"token punctuation\">}</span>\r\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token keyword\">const</span> data <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>data\r\n    <span class=\"token keyword\">let</span> posts_area\r\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>is_loading<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n      posts_area <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>\r\n        <span class=\"token operator\">&lt;</span>div style<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span> <span class=\"token function\">S</span><span class=\"token punctuation\">(</span><span class=\"token string\">'text-center font-30 mt-80 mb-80'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span><span class=\"token operator\">&gt;</span>Loading<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">&gt;</span>\r\n      <span class=\"token punctuation\">)</span>\r\n    <span class=\"token punctuation\">}</span>\r\n    <span class=\"token keyword\">let</span> form_area\r\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>posts <span class=\"token operator\">&amp;&amp;</span> data<span class=\"token punctuation\">.</span>posts<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n      posts_area <span class=\"token operator\">=</span> data<span class=\"token punctuation\">.</span>posts<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span>post <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token punctuation\">{</span>\r\n        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\r\n          <span class=\"token operator\">&lt;</span>div style<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span> <span class=\"token function\">S</span><span class=\"token punctuation\">(</span><span class=\"token string\">'mb-20 bg-efefef p-20 pt-15 pb-30 br-4'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span> key<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span> <span class=\"token string\">'id'</span> <span class=\"token operator\">+</span> post<span class=\"token punctuation\">.</span>_id <span class=\"token punctuation\">}</span><span class=\"token operator\">&gt;</span>\r\n            <span class=\"token operator\">&lt;</span>div onClick<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleRemoveClick<span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> post<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span> className<span class=\"token operator\">=</span><span class=\"token string\">\"close\"</span><span class=\"token operator\">&gt;</span><span class=\"token operator\">&amp;</span>times<span class=\"token punctuation\">;</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">&gt;</span>\r\n            <span class=\"token operator\">&lt;</span>div style<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span> <span class=\"token function\">S</span><span class=\"token punctuation\">(</span><span class=\"token string\">'font-20 mt-10 mb-10'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span><span class=\"token operator\">&gt;</span><span class=\"token punctuation\">{</span> post<span class=\"token punctuation\">.</span>title <span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">&gt;</span>\r\n            <span class=\"token operator\">&lt;</span>div style<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span> <span class=\"token function\">S</span><span class=\"token punctuation\">(</span><span class=\"token string\">'color-666'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span><span class=\"token operator\">&gt;</span><span class=\"token punctuation\">{</span> post<span class=\"token punctuation\">.</span>content <span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">&gt;</span>\r\n          <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">&gt;</span>\r\n        <span class=\"token punctuation\">)</span>\r\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\r\n    <span class=\"token punctuation\">}</span>\r\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\r\n      <span class=\"token operator\">&lt;</span>div style<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span> <span class=\"token function\">S</span><span class=\"token punctuation\">(</span><span class=\"token string\">'p-20'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span><span class=\"token operator\">&gt;</span>\r\n        <span class=\"token operator\">&lt;</span>h1 style<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span> <span class=\"token function\">S</span><span class=\"token punctuation\">(</span><span class=\"token string\">'mb-20'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span><span class=\"token operator\">&gt;</span>Easy MobX Example<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h1<span class=\"token operator\">&gt;</span>\r\n        <span class=\"token operator\">&lt;</span>div style<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span> <span class=\"token function\">S</span><span class=\"token punctuation\">(</span><span class=\"token string\">'mb-20'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span><span class=\"token operator\">&gt;</span>\r\n          <span class=\"token operator\">&lt;</span>form onSubmit<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleSubmit<span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span><span class=\"token operator\">&gt;</span>\r\n            <span class=\"token operator\">&lt;</span>FormGroup bsSize<span class=\"token operator\">=</span><span class=\"token string\">\"large\"</span><span class=\"token operator\">&gt;</span>\r\n              <span class=\"token operator\">&lt;</span>FormControl\r\n                onChange<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleInputChange<span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'title'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span>\r\n                placeholder<span class=\"token operator\">=</span><span class=\"token string\">\"Title\"</span>\r\n                type<span class=\"token operator\">=</span><span class=\"token string\">\"text\"</span>\r\n                value<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>form_data<span class=\"token punctuation\">.</span>title <span class=\"token punctuation\">}</span>\r\n              <span class=\"token operator\">/</span><span class=\"token operator\">&gt;</span>\r\n            <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>FormGroup<span class=\"token operator\">&gt;</span>\r\n            <span class=\"token operator\">&lt;</span>FormGroup bsSize<span class=\"token operator\">=</span><span class=\"token string\">\"large\"</span><span class=\"token operator\">&gt;</span>\r\n              <span class=\"token operator\">&lt;</span>FormControl style<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span> <span class=\"token function\">S</span><span class=\"token punctuation\">(</span><span class=\"token string\">'h-100'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span> \r\n                onChange<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleInputChange<span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'content'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span> \r\n                placeholder<span class=\"token operator\">=</span><span class=\"token string\">\"Content\"</span> \r\n                componentClass<span class=\"token operator\">=</span><span class=\"token string\">\"textarea\"</span> \r\n                value<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>form_data<span class=\"token punctuation\">.</span>content <span class=\"token punctuation\">}</span>\r\n              <span class=\"token operator\">&gt;</span>\r\n              <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>FormControl<span class=\"token operator\">&gt;</span>\r\n            <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>FormGroup<span class=\"token operator\">&gt;</span>\r\n            <span class=\"token operator\">&lt;</span>Button\r\n                bsSize<span class=\"token operator\">=</span><span class=\"token string\">\"large\"</span>\r\n                bsStyle<span class=\"token operator\">=</span><span class=\"token string\">\"primary\"</span>\r\n                type<span class=\"token operator\">=</span><span class=\"token string\">\"submit\"</span>\r\n                className<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span> data<span class=\"token punctuation\">.</span>is_saving <span class=\"token operator\">?</span> <span class=\"token string\">'disabled'</span> <span class=\"token punctuation\">:</span> <span class=\"token string\">''</span> <span class=\"token punctuation\">}</span>\r\n             <span class=\"token operator\">&gt;</span>\r\n                <span class=\"token punctuation\">{</span> data<span class=\"token punctuation\">.</span>is_saving <span class=\"token operator\">?</span> <span class=\"token string\">'Saving...'</span> <span class=\"token punctuation\">:</span> <span class=\"token string\">'Save post'</span> <span class=\"token punctuation\">}</span>\r\n             <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Button<span class=\"token operator\">&gt;</span>\r\n           <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>form<span class=\"token operator\">&gt;</span>\r\n         <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">&gt;</span>\r\n         <span class=\"token punctuation\">{</span> posts_area <span class=\"token punctuation\">}</span>\r\n       <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">&gt;</span>\r\n     <span class=\"token punctuation\">)</span>\r\n   <span class=\"token punctuation\">}</span>\r\n <span class=\"token punctuation\">}</span></code></pre><p>You'll notice there's a lot of stuff happening in this file. &nbsp;Starting from render, our app will default to its Loading state if the data has not yet come back from Cosmic JS. &nbsp;If there are posts returned, the posts array will map into it's own returned row with a <code class=\"  language-javascript\">post<span class=\"token punctuation\">.</span>title</code>, <code class=\"  language-javascript\">post<span class=\"token punctuation\">.</span>content</code> and an \"x\" to remove the post. &nbsp;In the return statement we also have a form to add more posts and a way to generate a saving state when <code class=\"  language-javascript\">data<span class=\"token punctuation\">.</span>is_saving</code>.</p><p>Also notice at the top of the component we have a decorator care of MobX that will watch over the component observing any changes in state and passing the new rendered data down. &nbsp;What the heck is that thing you ask? &nbsp;I have no idea, it just works and it's awesome.</p><p>You'll also notice that we have some actions <code class=\"  language-javascript\">handleInputChange</code> which will set our state of our input fields, so we don't have to use refs (which I recommend against whenever possible), <code class=\"  language-javascript\">handleSubmit</code> to save our post, <code class=\"  language-javascript\">handleRemoveClick</code> to remove the post. &nbsp;The last two actions use the <a href=\"https://www.npmjs.com/package/cosmicjs\" target=\"_blank\">Cosmic JS NPM package</a> to add and remove the posts to the <a href=\"https://cosmicjs.com\" target=\"_blank\">CMS API</a>. &nbsp;We're also using <a href=\"https://www.npmjs.com/package/shorti\" target=\"_blank\">Shorti</a> to easily add inline styles to our components.</p><p>Finally let's add the following to our <code class=\"  language-markup\">AppState.js</code> file:<br></p>\r\n<pre class=\"  language-javascript\"><code class=\"  language-javascript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> observable <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'mobx'</span>\r\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> getObjects <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'cosmicjs'</span>\r\n<span class=\"token keyword\">import</span> config <span class=\"token keyword\">from</span> <span class=\"token string\">'../config'</span>\r\n\r\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AppState</span> <span class=\"token punctuation\">{</span>\r\n  @observable posts <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\r\n  @observable form_data <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\r\n  @observable is_loading <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span>\r\n  @observable is_saving <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span>\r\n  <span class=\"token function\">addPost</span><span class=\"token punctuation\">(</span>post<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>posts<span class=\"token punctuation\">.</span><span class=\"token function\">unshift</span><span class=\"token punctuation\">(</span>post<span class=\"token punctuation\">)</span>\r\n  <span class=\"token punctuation\">}</span>\r\n  <span class=\"token function\">removePost</span><span class=\"token punctuation\">(</span>post_id<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>posts <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>posts<span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span>post <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token punctuation\">{</span>\r\n      <span class=\"token keyword\">return</span> post<span class=\"token punctuation\">.</span>_id <span class=\"token operator\">!==</span> post_id\r\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\r\n  <span class=\"token punctuation\">}</span>\r\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token function\">getObjects</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> bucket<span class=\"token punctuation\">:</span> config<span class=\"token punctuation\">.</span>cosmicjs<span class=\"token punctuation\">.</span>bucket <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">,</span> res<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token punctuation\">{</span>\r\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span>type<span class=\"token punctuation\">.</span>posts<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>posts <span class=\"token operator\">=</span> res<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span>type<span class=\"token punctuation\">.</span>posts\r\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>is_loading <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span>\r\n      <span class=\"token punctuation\">}</span>\r\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\r\n  <span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span></code></pre>\r\n<p>Here we tell the MobX observable decorators which state values may possibly change.  For our app this includes the posts, the form data, loading and saving states.  We also have created a couple functions to add and remove posts from our application.  The constructor fires the initial call to Cosmic JS to get our posts.</p><p><span style=\"line-height: 1.42857;\">How great is this?! &nbsp;Notice what we </span><span style=\"line-height: 1.42857; font-weight: bold;\">didn't</span><span style=\"line-height: 1.42857;\"> have to add to our app to handle state? &nbsp;We didn't create several files of boilerplate or event emitters, just simple decorators in key parts of the app to observe state changes!</span></p><p>Now let's start up our app! &nbsp;In your terminal run the following:<br>\r\n</p><pre class=\"  language-markup\"><code class=\"  language-markup\">npm start</code></pre><br>\r\n<p>Navigate to http://localhost:3000 and you should see your Easy MobX Example app in all its glory! &nbsp;I hope you enjoyed this post as much as I&nbsp;enjoyed&nbsp;building the example app. &nbsp;<a href=\"https://twitter.com/tonyspiro\" target=\"_blank\">Follow me on twitter</a> and reach out with any questions below. &nbsp;Thanks!</p>",
        "metafields": [
          {
            "value": "",
            "key": "wp-id",
            "title": "WP ID",
            "type": "text",
            "children": false
          },
          {
            "value": "2016-06-23",
            "key": "published",
            "title": "Published",
            "type": "date",
            "children": false
          },
          {
            "object_type": "authors",
            "value": "5712bb5de9c686d006000013",
            "key": "author",
            "title": "Author",
            "type": "object",
            "children": false
          },
          {
            "value": "d2f15eb0-38a2-11e6-b9c1-cd06b34cd6eb-state-of-chaos.png",
            "key": "hero",
            "title": "Hero",
            "type": "file",
            "children": false
          },
          {
            "value": "",
            "key": "tag",
            "title": "Tag",
            "type": "text",
            "children": false
          },
          {
            "value": "<p>Is your state out of control? &nbsp;Get to a better state.<br></p>",
            "key": "teaser",
            "title": "Teaser",
            "type": "html-textarea",
            "children": false
          }
        ],
        "bucket": "56edeedd694d9a5e6f000031",
        "type_slug": "posts",
        "created": "2016-06-22T17:47:47.732Z",
        "user_id": "5357ef811693be2118000001",
        "options": {
          "slug_field": 0,
          "content_editor": 1,
          "add_metafields": 0,
          "metafields_title": 0,
          "metafields_key": 0
        },
        "status": "published",
        "modified": "2016-06-23T17:38:08.155Z"
      },
      {
        "_id": "5712b6c5e9c686d006000011",
        "order": 1,
        "slug": "nav",
        "title": "Nav",
        "content": "",
        "metafields": [
          {
            "edit": 0,
            "value": "Tony Spiro",
            "key": "site-title",
            "title": "Site Title",
            "type": "text",
            "children": false
          },
          {
            "edit": 0,
            "value": "",
            "key": "links",
            "title": "Links",
            "type": "text",
            "children": [
              {
                "edit": 1,
                "value": "Home",
                "key": "/",
                "title": "Home",
                "type": "text",
                "children": false
              },
              {
                "edit": 0,
                "value": "Work",
                "key": "work",
                "title": "Work",
                "type": "text",
                "children": false
              },
              {
                "edit": 0,
                "value": "About",
                "key": "about",
                "title": "About",
                "type": "text",
                "children": false
              },
              {
                "edit": 0,
                "value": "Contact",
                "key": "contact",
                "title": "Contact",
                "type": "text",
                "children": false
              }
            ]
          }
        ],
        "bucket": "56edeedd694d9a5e6f000031",
        "type_slug": "global-items",
        "created": "2016-04-16T22:03:49.651Z",
        "user_id": "5357ef811693be2118000001",
        "options": {
          "slug_field": 1,
          "content_editor": 1,
          "add_metafields": 1,
          "metafields_title": 1,
          "metafields_key": 1
        },
        "status": "published",
        "modified": "2016-04-16T22:15:28.541Z"
      },
      {
        "_id": "57139176e9c686d006000016",
        "order": 1,
        "slug": "work",
        "title": "Work",
        "content": "",
        "metafields": [],
        "bucket": "56edeedd694d9a5e6f000031",
        "type_slug": "pages",
        "created": "2016-04-17T13:36:54.120Z",
        "user_id": "5357ef811693be2118000001",
        "options": null,
        "status": "published",
        "modified": "2016-04-17T13:53:51.483Z"
      },
      {
        "_id": "57202412303fc3c437000001",
        "order": 1,
        "slug": "how-i-moved-my-blog-from-wordpress-to-cosmic-js",
        "title": "How I Moved My Blog From WordPress to Cosmic JS",
        "content": "<p>In this post I will tell you how I migrated my blog content from WordPress to its new happy cloud-content-powered home on <a href=\"https://cosmicjs.com\" target=\"_blank\">Cosmic JS</a>.</p><h4>Export from WordPress</h4><p>The first step I had to take was to export the data out of my old blog. &nbsp;Since Cosmic JS makes it super easy to import data into a bucket, all I had to do was find a WordPress plugin that exports WordPress data into a JSON file that is properly formatted to import into a Cosmic JS bucket. &nbsp;Luckily such a plugin exists :) <a href=\"https://github.com/cosmicjs/cosmicjs-wp-export\" target=\"_blank\">https://github.com/cosmicjs/cosmicjs-wp-export</a>. &nbsp;After installing the plugin, all I had to do was select which post types I wanted to export then click export. &nbsp;This gave me one JSON file with all of the data I needed to perform the migration into Cosmic JS.</p><h4>Import into Cosmic JS</h4><p>The next step was importing the data into Cosmic JS. &nbsp;To import into a new bucket, I created a new bucket and navigated to Bucket &gt; Settings &gt; Import / Export Data. &nbsp;Then I just dragged the JSON file that I exported from WP onto the page and within seconds my data (AND FILES!) were imported into my bucket. &nbsp;(Plugins are not imported)</p><h4>Build the new blog app</h4><p><span style=\"line-height: 1.42857;\">My next task was to build a new blog app. &nbsp;The app I chose was the Future Imperfect app available on the <a href=\"https://cosmicjs.com/apps\" target=\"_blank\">Cosmic JS Apps page</a>. &nbsp;It has a sleek, modern front end (designed by <a href=\"https://twitter.com/n33co\" target=\"_blank\">@n33co</a> at <a href=\"http://html5up.net\" target=\"_blank\">HTML5UP.net</a>) and is built on top of a light-weight Node.js server (goodbye PHP!). &nbsp;I forked the Future Imperfect app from <a href=\"https://github.com/cosmicjs/cosmicapp-future-imperfect\" target=\"_blank\">the GitHub repo</a> and edited it to suite my needs. &nbsp;<a href=\"https://www.npmjs.com/package/cosmicjs\" target=\"_blank\">The Cosmic JS NPM module </a>made it easy to pull the content in from the Cosmic JS API into its new JavaScript backend. &nbsp;The mustache templates (Hogan) became the perfect compliment with the name-spaced object properties provided by the Cosmic JS JavaScript client, for example: &nbsp;{{ cosmic.object.nav.metafield.site-title.value }}, how easy is that?!?</span><br></p><h4><span style=\"line-height: 1.42857;\">Deploy!</span></h4><p><span style=\"line-height: 1.42857;\">The next and final step was to deploy the application for the world to see and marvel! &nbsp;I decided to deploy my new blog app using the deploy feature in my Cosmic JS bucket. &nbsp;The path to do so is Bucket &gt; Settings &gt; Deploy Web App. &nbsp;It was really easy to add <a href=\"https://github.com/tonyspiro/tonyspiro.com\" target=\"_blank\">the public GitHub url for my new blog</a> and click Deploy! &nbsp;Within a few minutes my new blog was deployed and out in the world.</span></p><p><span style=\"line-height: 1.42857;\">I'm happy to say that the blog you are reading right now is built on this new easy-to-manage, fast Node.js / Cosmic JS application stack! &nbsp;With this new setup my blog is now much faster and performs much better on page speed tests. &nbsp;This is because my blog now runs on a light server / <a href=\"https://cosmicjs.com\" target=\"_blank\">CMS API</a> stack rather than a heavy stack of installed applications and plugins.</span><br></p><p><span style=\"line-height: 1.42857;\">I hope you've enjoyed my story of how I freed my content from the confines of an installed CMS. &nbsp;<a href=\"https://cosmicjs.com/signup\" target=\"_blank\">Create a free Cosmic JS account</a> today and see how easy it is to free <span style=\"font-weight: bold;\">your</span> content! &nbsp;Let me know if you have any questions or comments in the comment section below. &nbsp;You can also <a href=\"https://twitter.com/tonyspiro\" target=\"_blank\">reach out to me on Twitter</a>.</span><br></p>",
        "metafields": [
          {
            "edit": 1,
            "value": "",
            "key": "wp-id",
            "title": "WP ID",
            "type": "text",
            "children": false
          },
          {
            "edit": 1,
            "value": "2016-04-27",
            "key": "published",
            "title": "Published",
            "type": "date",
            "children": false
          },
          {
            "object_type": "authors",
            "edit": 1,
            "value": "5712bb5de9c686d006000013",
            "key": "author",
            "title": "Author",
            "type": "object",
            "children": false
          },
          {
            "edit": 1,
            "value": "cdd0c5f0-0c2a-11e6-8b51-a94dba6d5176-freedom.png",
            "key": "hero",
            "title": "Hero",
            "type": "file",
            "children": false
          },
          {
            "edit": 1,
            "value": "Free your content and build a better tomorrow, today!",
            "key": "tag",
            "title": "Tag",
            "type": "text",
            "children": false
          },
          {
            "edit": 1,
            "value": "<p><br></p>",
            "key": "teaser",
            "title": "Teaser",
            "type": "html-textarea",
            "children": false
          }
        ],
        "bucket": "56edeedd694d9a5e6f000031",
        "type_slug": "posts",
        "created": "2016-04-27T02:29:38.348Z",
        "user_id": "5357ef811693be2118000001",
        "options": {
          "slug_field": 0,
          "content_editor": 1,
          "add_metafields": 0,
          "metafields_title": 0,
          "metafields_key": 0
        },
        "status": "published",
        "modified": "2016-04-27T17:16:32.658Z"
      },
      {
        "_id": "5712b63fe9c686d006000010",
        "order": 2,
        "slug": "header",
        "title": "Header",
        "content": "",
        "metafields": [
          {
            "edit": 1,
            "value": "183fe010-0421-11e6-8e50-dd42082f9224-avatar.jpg",
            "key": "logo",
            "title": "logo",
            "type": "file",
            "children": false
          },
          {
            "edit": 1,
            "value": "http://tonyspiro.com",
            "key": "logo-link",
            "title": "Logo Link",
            "type": "text",
            "children": false
          },
          {
            "edit": 1,
            "value": "Tony Spiro",
            "key": "site-title",
            "title": "Site Title",
            "type": "text",
            "children": false
          },
          {
            "edit": 1,
            "value": "Adventures of a Software Engineer",
            "key": "site-tag",
            "title": "Site Tag",
            "type": "textarea",
            "children": false
          }
        ],
        "bucket": "56edeedd694d9a5e6f000031",
        "type_slug": "global-items",
        "created": "2016-04-16T22:01:35.730Z",
        "user_id": "5357ef811693be2118000001",
        "options": {
          "slug_field": 1,
          "content_editor": 0,
          "add_metafields": 1,
          "metafields_title": 1,
          "metafields_key": 1
        },
        "status": "published",
        "modified": "2016-04-18T01:21:25.570Z"
      },
      {
        "_id": "56edefbee6dcdbb570000030",
        "old_id": "56edefbe952f68b570a025e3",
        "bucket": "56edeedd694d9a5e6f000031",
        "slug": "tri-delta",
        "title": "Tri Delta",
        "content": "<a href=\"http://tridelta.org\" target=\"_blank\"><img src=\"https://cosmicjs.com/uploads/9363a8b0-04e6-11e6-8e50-dd42082f9224-Screen-Shot-2015-08-29-at-5.37.52-PM1.png\"></a>&nbsp;<div><br></div><div>&nbsp;The new <a href=\"http://tridelta.org\" target=\"_blank\">Tri Delta national sorority website</a> was a massive undertaking for myself and the rest of the brilliant team at <a href=\"http://www.brandhatchery.com\" target=\"_blank\">The Brand Hatchery</a>. We took this project on in early 2015 and the challenge was to have the new site completed by the start of the new school year.  We had eight months from design to launch to have everything ready, without the possibility of pushing back on the deadline.  I'm happy to say that we met the deadline and all 300,000+ active and alumnae members now have a beautiful new website that loads fast and is much easier to use.\r\n\r\nThe new site consists of three main parts: 1. The public-facing marketing and story-telling pages 2. A private, login-only social network and 3. An e-commerce shop for picking up all sorts of Tri Delta swag and chapter essentials. \r\n\r\nFor the backend we used WordPress for the CMS, Woocommerce for the shop and a Node.js / MongoDB API for the user system. The front end uses Twitter Bootstrap and is fully responsive down to mobile.  All of the search functionality on the site (Global, Sister Search and Chapter Search) uses my React typeahead search which <a href=\"https://github.com/tonyspiro/react-typeahead-search\" target=\"_blank\">is available on GitHub</a>.\r\n\r\nAnother huge piece of the website is the Resources area.  To accommodate all of the files, links and custom documents necessary to communicate between the executive office, chapter members and officers, I built a React application that functions like a Google Drive for uploading chapter documents and linking to important off-site resources.  This all involved complex roles and permissions, tagging as well as drag and drop sorting.\r\n\r\nI'm very proud of the hard work that everyone at The Brand Hatchery and Tri Delta put in.  Now Tri Delta has something uniquely theres that uses the latest and best technology to connect all of their members and tell their story.\r\n\r\nYou can view the shiny new website at the following link:\r\n<a href=\"http://www.tridelta.org\" target=\"_blank\">http://www.tridelta.org</a>\r\n\r\nSome screenshots:\r\n<a href=\"http://tridelta.org\" target=\"_blank\"><img src=\"http://tonyspiro.com/wp-content/uploads/2015/08/Screen-Shot-2015-08-29-at-5.50.18-PM.png\"></a>\r\n<a href=\"http://tridelta.org/shop\" target=\"_blank\"><img src=\"http://tonyspiro.com/wp-content/uploads/2015/08/Screen-Shot-2015-08-30-at-1.05.30-AM.png\"></a>\r\n<a href=\"http://tridelta.org/shop\" target=\"_blank\"><img src=\"http://tonyspiro.com/wp-content/uploads/2015/08/Screen-Shot-2015-08-30-at-1.02.03-AM.png\"></a></div>",
        "metafields": [
          {
            "edit": 1,
            "value": "f249d6f0-04a1-11e6-8e50-dd42082f9224-Screen Shot 2016-04-17 at 8.40.13 AM.png",
            "key": "thumb",
            "title": "Thumb",
            "type": "file",
            "children": false
          },
          {
            "edit": 1,
            "value": "<p>Rebuilt a website for a national brand for Greek life.<br></p>",
            "key": "excerpt",
            "title": "Excerpt",
            "type": "html-textarea",
            "children": false
          }
        ],
        "type_slug": "work",
        "created": "2016-03-20T00:33:02.461Z",
        "user_id": "5357ef811693be2118000001",
        "options": null,
        "order": 2,
        "modified": "2016-04-17T21:57:18.894Z",
        "status": "published"
      },
      {
        "_id": "56edefbee6dcdbb57000002f",
        "old_id": "56edefbe952f68b570a025e2",
        "bucket": "56edeedd694d9a5e6f000031",
        "slug": "onec1ty-nashville",
        "title": "OneC1TY Nashville",
        "content": "This was a really fun site built on the WordPress platform over at <a href=\"http://brandhatchery.com\" target=\"_blank\">The Brand Hatchery</a>. I'm proud of this custom theme built using Bootstrap because we used different development and production environments that made it easy to debug in development and easy to deploy to production. We included Gulp into our workflow to manage our LESS, JS minification and other processes. It uses a <a href=\"https://github.com/tonyspiro/react-typeahead-search\" target=\"\">React JS auto-complete search</a> feature to search all of the site's content in an Apple Spotlight way, which I think turned out pretty cool.\r\n\r\nCheck it out:\r\n\r\n<a href=\"http://www.onec1tynashville.com\" target=\"_blank\">http://www.onec1tynashville.com</a>\r\n<a href=\"http://www.onec1tynashville.com\" target=\"_blank\"><img class=\"alignnone size-full wp-image-766\" src=\"https://cosmicjs.com/uploads/4f8076b0-ee33-11e5-9838-d35c110ee128.png\" alt=\"onec1ty\"></a>",
        "metafields": [
          {
            "edit": 1,
            "value": "362f74d0-04aa-11e6-8e50-dd42082f9224-Screen Shot 2016-04-17 at 9.39.19 AM.png",
            "key": "thumb",
            "title": "Thumb",
            "type": "file",
            "children": false
          },
          {
            "edit": 1,
            "value": "<p>A new website for a new health-minded community in Nashville.</p>",
            "key": "excerpt",
            "title": "Excerpt",
            "type": "html-textarea",
            "children": false
          }
        ],
        "type_slug": "work",
        "created": "2016-03-20T00:33:02.461Z",
        "user_id": "5357ef811693be2118000001",
        "options": null,
        "order": 3,
        "modified": "2016-04-17T21:52:42.189Z",
        "status": "published"
      },
      {
        "_id": "56edefbee6dcdbb570000002",
        "old_id": "56edefbe952f68b570a025b5",
        "bucket": "56edeedd694d9a5e6f000031",
        "slug": "about",
        "title": "About",
        "content": "Hello I'm Tony Spiro, a software engineer specializing in front end and back end JavaScript. I am currently the Senior Interactive Developer at <a href=\"https://rechat.com\" target=\"_blank\">Rechat</a>, in charge of building out the web platform. &nbsp;I'm also the creator of <a href=\"https://cosmicjs.com\" target=\"_blank\">Cosmic JS</a> a CMS API that is used to manage content for websites and native applications. &nbsp;This website is powered by Cosmic JS and you can view the <a href=\"https://github.com/tonyspiro/tonyspiro.com\" target=\"_blank\">full source code on GitHub</a>.<div><br></div><div>I have previously worked at digital agencies building websites and apps using JavaScript and the LAMP stack. &nbsp;I am highly skilled in PHP, MySQL, JavaScript,&nbsp;JQuery, AJAX, HTML5, CSS3 as well as MongoDB and Twitter Bootstrap. I also have a lot of experience with open source CMS frameworks, database architecture, e-commerce solutions, connecting API services, responsive design and Git for version control.&nbsp;<div><br></div><div><a href=\"/work\">Click here to check out some of my work</a>.&nbsp;</div><div><a href=\"https://github.com/tonyspiro\" target=\"_blank\">And click here to check out my GitHub for more code examples.</a>&nbsp;<div><br></div><div>I'm also a drummer with a passion for music. I began my career building websites and apps for my local music scene.\r\n\r\nI live in Dallas, TX with my beautiful wife Jena and our adopted dog, Buddy. When I'm not coding projects or spending time with my loving family, I will spend time sharing some things I've picked up along the way on this blog. Hopefully my posts will help you in your journey like many great blogs / developers / authors have helped me in mine.&nbsp;</div><div><br></div><div>Cheers!</div><div>Tony</div></div></div>",
        "metafields": [
          {
            "value": "Welcome to my blog! &nbsp;I'm Tony Spiro, a software engineer specializing in front end and back end JavaScript using React and Node.js. &nbsp;<a href=\"/about\" target=\"\">Read more...</a>",
            "key": "excerpt",
            "title": "Excerpt",
            "type": "html-textarea",
            "children": false
          },
          {
            "value": "<p><br></p>",
            "key": "teaser",
            "title": "Teaser",
            "type": "html-textarea",
            "children": false
          },
          {
            "value": "",
            "key": "thumb",
            "title": "Thumb",
            "type": "file",
            "children": false
          }
        ],
        "type_slug": "pages",
        "created": "2016-03-20T00:33:02.354Z",
        "user_id": "5357ef811693be2118000001",
        "options": null,
        "order": 3,
        "modified": "2016-06-23T14:05:29.631Z",
        "status": "published"
      },
      {
        "_id": "56edefbee6dcdbb570000004",
        "old_id": "56edefbe952f68b570a025b7",
        "bucket": "56edeedd694d9a5e6f000031",
        "slug": "contact",
        "title": "Contact",
        "content": "Do you have any questions or want me to help you with a project?&nbsp; Hit me up at <a href=\"mailto:tspiro@tonyspiro.com\">tspiro@tonyspiro.com</a>",
        "metafields": [
          {
            "edit": 1,
            "value": "<p><br></p>",
            "key": "teaser",
            "title": "Teaser",
            "type": "html-textarea",
            "children": false
          },
          {
            "edit": 1,
            "value": "",
            "key": "thumb",
            "title": "Thumb",
            "type": "file",
            "children": false
          }
        ],
        "type_slug": "pages",
        "created": "2016-03-20T00:33:02.357Z",
        "user_id": "5357ef811693be2118000001",
        "options": null,
        "order": 4,
        "modified": "2016-04-18T04:17:34.033Z",
        "status": "published"
      },
      {
        "_id": "56edefbee6dcdbb570000028",
        "old_id": "56edefbe952f68b570a025db",
        "bucket": "56edeedd694d9a5e6f000031",
        "slug": "install-deploy-content-ready-apps-cosmic-js",
        "title": "Install and Deploy Content-Ready Apps on Cosmic JS",
        "content": "I'm super happy to announce that you can now deploy content-ready applications on Cosmic JS. &nbsp;Here is the post originally published on the <a href=\"https://cosmicjs.com/blog/install-and-deploy-content-ready-apps\" target=\"_blank\">Cosmic JS blog</a>:&nbsp;<div><br></div><div>In an effort to make it easier to&nbsp;create <a href=\"https://cosmicjs.com/apps\" target=\"\">content-ready applications</a> as well as&nbsp;manage content, you can now install and deploy applications using Cosmic JS. &nbsp;It's the fastest and easiest way to go from 0 to content-ready web app (about 2 minutes!) without any server or configuration hassle.</div><div><br></div><div>It's really cool and only requires a few steps:&nbsp;</div><div><br></div><div>1.&nbsp;<a href=\"https://cosmicjs.com/login\" target=\"\">Sign in to your Cosmic JS account</a></div><div>2. Choose a bucket then navigate on the left sidenav to Settings &gt; Apps</div><div>3. Select your app and click \"Install\"</div><div>4. Go to Settings &gt; Deploy Web App and click \"Deploy Web App\"<div><br></div><div><span style=\"line-height: 1.42857;\">&nbsp; &nbsp;</span><img src=\"https://cosmicjs.com/uploads/fffcf1c0-d97b-11e5-b608-d73fce26bef8-apps.png\" alt=\"\" style=\"line-height: 1.42857;\"><span style=\"line-height: 1.42857;\">&nbsp;</span></div><div><span style=\"line-height: 1.42857;\"><br></span></div><div>In about 2 minutes your application will be deployed and connected to your Cosmic JS bucket. &nbsp;Add and edit content easily and review from the deployed location.&nbsp;<a href=\"https://cosmicjs.com/apps\" target=\"\">&nbsp;Choose from one of the provided apps</a>&nbsp;or add the link to the public git repo to clone your own app into deployment.\r\n\r\nYou can deploy your applications from any GitHub, BitBucket or any other public repo. Your application will be deployed to it's own isolated Docker container using&nbsp;<a href=\"http://dokku.viewdocs.io/dokku/\" target=\"_blank\">Dokku</a>, a Docker-powered mini-Heroku.&nbsp;This means that you can build your app in any language and easily deploy it from Cosmic JS! &nbsp;You can find out more about how to make apps Dokku compatible by reading&nbsp;<a href=\"https://devcenter.heroku.com/start\" target=\"_blank\">Heroku documentation</a>.\r\n\r\nIf you would like to contribute apps to be available on Cosmic JS, please contact <a href=\"http://mailto:support@cosmicjs.com/\" target=\"_blank\">support@cosmicjs.com</a>.</div><div><br></div><div>Happy building!<br></div></div>",
        "metafields": [
          {
            "object_type": "authors",
            "edit": 1,
            "value": "5712bb5de9c686d006000013",
            "key": "author",
            "title": "Author",
            "type": "object",
            "children": false
          },
          {
            "edit": 1,
            "value": "1c3f8170-0444-11e6-8e50-dd42082f9224-space-buddy.jpg",
            "key": "hero",
            "title": "Hero",
            "type": "file",
            "children": false
          },
          {
            "edit": 1,
            "value": "Cosmic JS Apps Deployed in 2 minutes.",
            "key": "tag",
            "title": "Tag",
            "type": "text",
            "children": false
          },
          {
            "edit": 1,
            "value": "<p>No animals were harmed in making of this awesome feature.</p>",
            "key": "teaser",
            "title": "Teaser",
            "type": "html-textarea",
            "children": false
          },
          {
            "edit": 1,
            "value": "2016-02-23",
            "key": "published",
            "title": "Published",
            "type": "date",
            "children": false
          }
        ],
        "type_slug": "posts",
        "created": "2016-03-20T00:33:02.455Z",
        "user_id": "5357ef811693be2118000001",
        "options": null,
        "order": 4,
        "modified": "2016-04-17T18:47:57.067Z",
        "status": "published"
      },
      {
        "_id": "56edefbee6dcdbb57000002e",
        "old_id": "56edefbe952f68b570a025e1",
        "bucket": "56edeedd694d9a5e6f000031",
        "slug": "barnes-roberts",
        "title": "Barnes and Roberts",
        "content": "This is another website that was built on the WordPress platform over at <a href=\"http://brandhatchery.com\" target=\"_blank\">The Brand Hatchery</a>. &nbsp;This one really came together nicely: It's responsive across all devices, cross-browser compatible and has some challenging&nbsp;functionality that was executed well&nbsp;(see the people page).\r\n\r\nCheck it out (warning:&nbsp;audio plays automatically (client request :)))\r\n<a href=\"http://www.brtrial.com/\" target=\"_blank\">\r\nhttp://www.brtrial.com</a><div><br><div><a href=\"http://www.brtrial.com/\" target=\"_blank\"></a><a href=\"http://www.brtrial.com/\" target=\"_blank\"><img class=\"alignnone size-full wp-image-763\" src=\"https://cosmicjs.com/uploads/8f5413e0-04e6-11e6-8e50-dd42082f9224-Screen-Shot-2014-08-11-at-9.51.15-PM.png\" alt=\"Screen Shot 2015-06-16 at 7.39.11 PM\"></a></div></div>",
        "metafields": [
          {
            "edit": 1,
            "value": "e97e4a40-04ad-11e6-8e50-dd42082f9224-Screen Shot 2016-04-17 at 10.05.41 AM.png",
            "key": "thumb",
            "title": "Thumb",
            "type": "file",
            "children": false
          },
          {
            "edit": 1,
            "value": "<p>A new website for a leading provider of trial services.</p>",
            "key": "excerpt",
            "title": "Excerpt",
            "type": "html-textarea",
            "children": false
          }
        ],
        "type_slug": "work",
        "created": "2016-03-20T00:33:02.460Z",
        "user_id": "5357ef811693be2118000001",
        "options": null,
        "order": 4,
        "modified": "2016-04-17T21:53:02.628Z",
        "status": "published"
      },
      {
        "_id": "56edefbee6dcdbb57000002d",
        "old_id": "56edefbe952f68b570a025e0",
        "bucket": "56edeedd694d9a5e6f000031",
        "slug": "cambridge",
        "title": "Cambridge",
        "content": "This is another custom WordPress site that was built by myself and the development team at The Brand Hatchery. The challenge was to build this really cool long scrolly page and have it load fast. I think we achieved this and it turned out to be a really good project.  <a href=\"http://cambridgeinc.com\" target=\"_blank\">http://cambridgeinc.com</a>\r\n<a href=\"http://cambridgeinc.com\" target=\"_blank\"><img src=\"https://cosmicjs.com/uploads/929f9560-04e6-11e6-8e50-dd42082f9224-Screen-Shot-2015-04-12-at-9.19.49-AM.png\" alt=\"Screen Shot 2015-04-12 at 9.19.49 AM\"></a>",
        "metafields": [
          {
            "edit": 1,
            "value": "eb87ca80-04dc-11e6-8e50-dd42082f9224-Screen Shot 2016-04-17 at 3.42.12 PM.png",
            "key": "thumb",
            "title": "Thumb",
            "type": "file",
            "children": false
          },
          {
            "edit": 1,
            "value": "<p><br></p>",
            "key": "excerpt",
            "title": "Excerpt",
            "type": "html-textarea",
            "children": false
          }
        ],
        "type_slug": "work",
        "created": "2016-03-20T00:33:02.459Z",
        "user_id": "5357ef811693be2118000001",
        "options": null,
        "order": 5,
        "modified": "2016-04-17T21:53:28.720Z",
        "status": "published"
      },
      {
        "_id": "56edefbee6dcdbb570000027",
        "old_id": "56edefbe952f68b570a025da",
        "bucket": "56edeedd694d9a5e6f000031",
        "slug": "how-to-keep-session-data-after-fetch-post-with-express",
        "title": "How to Keep Session Data After Fetch POST with Express",
        "content": "Fetch is the new hotness right now when it comes to building out API-driven JavaScript applications. But I recently got tripped up trying to do a fetch POST call to create a login session for a user. I had to dig around the web to find the answer which I found in a few different places, so I thought I would share the full example of how this should work.\r\n\r\nHere's the situation:\r\n\r\nLet's say you are using an Express backend with <a href=\"https://github.com/expressjs/session\" target=\"_blank\">express-session</a> and want to send a fetch POST request to the server with the login data to authenticate the user. Seems like a piece of cake right? Well there are a couple things required to perform this magic. For this to work properly, it needs the session to be set and not be dropped after refreshing / going to a new page.\r\n<h6>TL;DR</h6>\r\nMake sure on your fetch request you have:\r\n<pre class=\" language-javascript\"><code class=\" language-javascript\">credentials<span class=\"token punctuation\">:</span> <span class=\"token string\">'include'</span></code></pre>\r\nand on your endpoint you have:\r\n<pre class=\" language-javascript\"><code class=\" language-javascript\">res<span class=\"token punctuation\">.</span><span class=\"token function\">setHeader</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Access-Control-Allow-Credentials'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'true'</span><span class=\"token punctuation\">)</span></code></pre>\r\n<h6>Here's the full solution</h6>\r\nFrontend:\r\n<pre class=\" language-javascript\"><code class=\" language-javascript\"><span class=\"token keyword\">let</span> request_object <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\r\n  email<span class=\"token punctuation\">:</span> <span class=\"token string\">'testemail@user.com'</span><span class=\"token punctuation\">,</span>\r\n  password<span class=\"token punctuation\">:</span> <span class=\"token string\">'mycatsname'</span>\r\n<span class=\"token punctuation\">}</span>\r\n\r\n<span class=\"token keyword\">let</span> signin_url <span class=\"token operator\">=</span> <span class=\"token string\">'/signin'</span>\r\n\r\n<span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span>signin_url<span class=\"token punctuation\">,</span><span class=\"token punctuation\">{</span>\r\n  method<span class=\"token punctuation\">:</span> <span class=\"token string\">'post'</span><span class=\"token punctuation\">,</span>\r\n  credentials<span class=\"token punctuation\">:</span> <span class=\"token string\">'include'</span><span class=\"token punctuation\">,</span>\r\n  headers<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>  \r\n    <span class=\"token string\">'Content-Type'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'application/json'</span>\r\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\r\n  body<span class=\"token punctuation\">:</span> JSON<span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>request_object<span class=\"token punctuation\">)</span>\r\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\r\n</code></pre>\r\nAnd then on the backend side:\r\n<pre class=\" language-javascript\"><code class=\" language-javascript\"><span class=\"token comment\" spellcheck=\"true\">// Import stuff</span>\r\n<span class=\"token keyword\">import</span> express <span class=\"token keyword\">from</span> <span class=\"token string\">'express'</span>\r\n<span class=\"token keyword\">import</span> bodyParser <span class=\"token keyword\">from</span> <span class=\"token string\">'body-parser'</span>\r\n<span class=\"token keyword\">import</span> session <span class=\"token keyword\">from</span> <span class=\"token string\">'express-session'</span>\r\n\r\n<span class=\"token comment\" spellcheck=\"true\">// Express</span>\r\n<span class=\"token keyword\">const</span> app <span class=\"token operator\">=</span> <span class=\"token function\">express</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\r\napp<span class=\"token punctuation\">.</span><span class=\"token keyword\">set</span><span class=\"token punctuation\">(</span><span class=\"token string\">'port'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span>PORT <span class=\"token operator\">||</span> <span class=\"token number\">3000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\r\napp<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span><span class=\"token function\">session</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\r\n  secret<span class=\"token punctuation\">:</span> <span class=\"token string\">'my cats name again'</span><span class=\"token punctuation\">,</span>\r\n  resave<span class=\"token punctuation\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\r\n  saveUninitialized<span class=\"token punctuation\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\r\n  cookie<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> \r\n    httpOnly<span class=\"token punctuation\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token comment\" spellcheck=\"true\">// key</span>\r\n    maxAge<span class=\"token punctuation\">:</span> <span class=\"token keyword\">null</span>\r\n  <span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\r\napp<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span>bodyParser<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token comment\" spellcheck=\"true\">// Set up data</span>\r\n<span class=\"token keyword\">const</span> email <span class=\"token operator\">=</span> req<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>email\r\n<span class=\"token keyword\">const</span> password <span class=\"token operator\">=</span> req<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>password\r\napp<span class=\"token punctuation\">.</span><span class=\"token function\">post</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/signin'</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">,</span> res<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token punctuation\">{</span>\r\n \r\n  res<span class=\"token punctuation\">.</span><span class=\"token function\">setHeader</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Access-Control-Allow-Credentials'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'true'</span><span class=\"token punctuation\">)</span>\r\n  <span class=\"token comment\" spellcheck=\"true\">// then validate the response from a database or external api (contrived example below)</span>\r\n  <span class=\"token function\">getUserFromDB</span><span class=\"token punctuation\">(</span>email<span class=\"token punctuation\">,</span> password<span class=\"token punctuation\">,</span> response <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\r\n      <span class=\"token comment\" spellcheck=\"true\">// This will save the session between pages</span>\r\n      req<span class=\"token punctuation\">.</span>session<span class=\"token punctuation\">.</span>user <span class=\"token operator\">=</span> user\r\n    <span class=\"token punctuation\">}</span>\r\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\r\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\r\napp<span class=\"token punctuation\">.</span><span class=\"token function\">listen</span><span class=\"token punctuation\">(</span>app<span class=\"token punctuation\">.</span><span class=\"token keyword\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'port'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\r\n</code></pre>\r\nReference:\r\n<a href=\"https://developers.google.com/web/updates/2015/03/introduction-to-fetch?hl=en\" target=\"_blank\">https://developers.google.com/web/updates/2015/03/introduction-to-fetch?hl=en</a>\r\n\r\nLet me know if you have any questions in the comments section below. Or <a href=\"http://twitter.com/tonyspiro\" target=\"_blank\">hit me up on twitter</a>.",
        "metafields": [
          {
            "object_type": "authors",
            "edit": 1,
            "value": "5712bb5de9c686d006000013",
            "key": "author",
            "title": "Author",
            "type": "object",
            "children": false
          },
          {
            "edit": 1,
            "value": "",
            "key": "hero",
            "title": "Hero",
            "type": "file",
            "children": false
          },
          {
            "edit": 1,
            "value": "",
            "key": "tag",
            "title": "Tag",
            "type": "text",
            "children": false
          },
          {
            "edit": 1,
            "value": "<p><br></p>",
            "key": "teaser",
            "title": "Teaser",
            "type": "html-textarea",
            "children": false
          },
          {
            "edit": 1,
            "value": "2015-11-30",
            "key": "published",
            "title": "Published",
            "type": "date",
            "children": false
          },
          {
            "edit": 1,
            "value": 1228,
            "key": "wp-id",
            "title": "WP ID",
            "type": "text",
            "children": false
          }
        ],
        "type_slug": "posts",
        "created": "2016-03-20T00:33:02.448Z",
        "user_id": "5357ef811693be2118000001",
        "options": null,
        "order": 5,
        "modified": "2016-04-18T01:07:35.114Z",
        "status": "published"
      },
      {
        "_id": "56edefbee6dcdbb57000002a",
        "old_id": "56edefbe952f68b570a025dd",
        "bucket": "56edeedd694d9a5e6f000031",
        "slug": "corgan",
        "title": "Corgan",
        "content": "<a href=\"http://www.corgan.com/\" target=\"_blank\"><img src=\"https://cosmicjs.com/uploads/94a1ce00-04e6-11e6-8e50-dd42082f9224-Screen-Shot-2014-04-22-at-6.48.27-PM.png\"></a>&nbsp;<div><br></div><div>&nbsp;This is another site designed and built at <a href=\"http://brandhatchery.com\" target=\"_blank\">The Brand Hatchery</a>. &nbsp;It is built on the Wordpress CMS using a custom responsive theme. &nbsp;I have to say this is one of the best sites we've done so far. &nbsp;The responsive elements came together very nicely and all of the backend management was done to make it really easy for the client to edit whatever they needed to.\r\n\r\nI'm also pretty proud of the \"What's My Day Like?\" animation sequences we were able to pull off in the Carrers sections. &nbsp;Take a look (near the bottom of the page):\r\n\r\n<a href=\"http://www.corgan.com/careers/experience/\" target=\"_blank\">&nbsp;http://www.corgan.com/careers/experience/</a>\r\n\r\nAlso since the hero images on each page were so large, I made use of a <a href=\"http://tonyspiro.com/dynamic-image-a-jquery-plugin-that-progressively-resizes-your-images-based-on-browser-size/\">responsive image JQuery plugin</a> I built to handle dynamic images for different device sizes to maximize loading time.</div>",
        "metafields": [
          {
            "edit": 1,
            "value": "b0783410-04dd-11e6-8e50-dd42082f9224-logo1_new.png",
            "key": "thumb",
            "title": "Thumb",
            "type": "file",
            "children": false
          },
          {
            "edit": 1,
            "value": "<p><br></p>",
            "key": "excerpt",
            "title": "Excerpt",
            "type": "html-textarea",
            "children": false
          }
        ],
        "type_slug": "work",
        "created": "2016-03-20T00:33:02.456Z",
        "user_id": "5357ef811693be2118000001",
        "options": null,
        "order": 6,
        "modified": "2016-04-17T21:54:21.020Z",
        "status": "published"
      },
      {
        "_id": "56edefbee6dcdbb570000026",
        "old_id": "56edefbe952f68b570a025d9",
        "bucket": "56edeedd694d9a5e6f000031",
        "slug": "cosmic-js-a-better-way-to-manage-content",
        "title": "Cosmic JS: A Better Way to Manage Content",
        "content": "<div style=\"text-align: center;\"><a href=\"https://cosmicjs.com\" target=\"_blank\" style=\"border-bottom: 0\"><img src=\"https://cosmicjs.com/uploads/c381d720-04ef-11e6-8e50-dd42082f9224-cosmicjs.png\"></a><span style=\"line-height: 1.42857;\">&nbsp;</span></div><div style=\"text-align: center;\"><span style=\"line-height: 1.42857;\"><br></span></div><div><a href=\"https://cosmicjs.com\">Cosmic JS</a>&nbsp;is&nbsp;a cloud-hosted content&nbsp;platform that makes it easy&nbsp;to manage content for&nbsp;websites and applications.\r\n\r\nI built Cosmic JS because I saw a problem with scaling content&nbsp;across platforms and devices. &nbsp;After years of building applications using&nbsp;installed content management systems, I became tired of rebuilding APIs to handle content distribution&nbsp;from a website to microsites, landing pages and applications. &nbsp;I decided to build one API to handle all content outlets for easier and faster distribution, and Cosmic JS was born.\r\n\r\nCosmic JS allows for easy content management and distribution&nbsp;by giving you&nbsp;the power to store content as JSON objects in an API that can be delivered anywhere.</div><div><br>&nbsp;\r\n<h4 style=\"text-align: center; \"><a href=\"https://cosmicjs.com\" target=\"_blank\"><img src=\"https://cosmicjs.com/uploads/4ff69110-ee33-11e5-9838-d35c110ee128.png\" alt=\"download\" width=\"392\" height=\"332\"></a></h4><div><br></div>\r\nCosmic JS&nbsp;is API-first, meaning&nbsp;your content can be&nbsp;distributed across all devices and platforms from your&nbsp;website, to microsites&nbsp;and&nbsp;landing pages, to native mobile applications&nbsp;which&nbsp;allows for faster development cycles. &nbsp; And when you use Cosmic JS to serve data and files, application&nbsp;servers can be kept light-weight which saves on server costs.\r\n<h4></h4>\r\n<h4><br></h4><h4>Get started</h4>\r\n<a href=\"https://cosmicjs.com/\" target=\"_blank\">Click here to sign up for a Cosmic JS account, it's completely free to sign up</a>.\r\n\r\nCosmic JS is currently in private beta but&nbsp;you&nbsp;will be notified when your account has been activated.\r\n<h4><br></h4><h4>Start building</h4>\r\n<a href=\"https://github.com/cosmicjs\" target=\"_blank\">Click here to check out the available clients for JavaScript and PHP&nbsp;on GitHub</a>.\r\n\r\nCurrently there are available clients for JavaScript and PHP to help you get started building scalable, content-ready applications.\r\n<h4><br></h4><h4>View examples</h4>\r\n<a href=\"https://github.com/cosmicjs/cosmicjs-examples\" target=\"_blank\">Click here to view code for websites built using Cosmic JS</a>.\r\n\r\nI'll post&nbsp;some tutorials on this blog soon to show you how easy it is to use Cosmic JS to manage content for your next project, so stay tuned. &nbsp;If you have any questions, please post them&nbsp;below, or reach out to me on <a href=\"http://twitter.com/tonyspiro\" target=\"_blank\">twitter</a> or <a href=\"mailto:tspiro@tonyspiro.com\">email me</a>.\r\n\r\nThanks,\r\nTony Spiro\r\n\r\n<a href=\"https://cosmicjs.com\" target=\"_blank\">Click here to go to&nbsp;Cosmic JS\r\n</a><a href=\"https://github.com/cosmicjs\" target=\"_blank\">Click here to go to&nbsp;Cosmic JS on GitHub</a></div>",
        "metafields": [
          {
            "object_type": "authors",
            "edit": 1,
            "value": "5712bb5de9c686d006000013",
            "key": "author",
            "title": "Author",
            "type": "object",
            "children": false
          },
          {
            "edit": 1,
            "value": "",
            "key": "hero",
            "title": "Hero",
            "type": "file",
            "children": false
          },
          {
            "edit": 1,
            "value": "",
            "key": "tag",
            "title": "Tag",
            "type": "text",
            "children": false
          },
          {
            "edit": 1,
            "value": "<p><br></p>",
            "key": "teaser",
            "title": "Teaser",
            "type": "html-textarea",
            "children": false
          },
          {
            "edit": 1,
            "value": "2015-09-23",
            "key": "published",
            "title": "Published",
            "type": "date",
            "children": false
          },
          {
            "edit": 1,
            "value": 773,
            "key": "wp-id",
            "title": "WP ID",
            "type": "text",
            "children": false
          }
        ],
        "type_slug": "posts",
        "created": "2016-03-20T00:33:02.447Z",
        "user_id": "5357ef811693be2118000001",
        "options": null,
        "order": 6,
        "modified": "2016-04-18T01:19:23.862Z",
        "status": "published"
      },
      {
        "_id": "56edefbee6dcdbb57000002b",
        "old_id": "56edefbe952f68b570a025de",
        "bucket": "56edeedd694d9a5e6f000031",
        "slug": "deep-ellum-search-company",
        "title": "Deep Ellum Search Company",
        "content": "This was another site that I helped hand-craft at <a href=\"http://brandhatchery.com\" target=\"_blank\">The Brand Hatchery</a>. Using a custom Wordpress theme that we (The Brand Hatchery dev team) built from scratch, this single page site features a nice scrolling nav, custom google map skin and is fully responsive. Check it out:&nbsp;<div><br></div><div>&nbsp;\r\n<a href=\"http://www.deepellumsearch.com/\" target=\"_blank\"><img src=\"https://cosmicjs.com/uploads/8f5413e0-04e6-11e6-8e50-dd42082f9224-Screen-Shot-2014-08-11-at-9.51.15-PM.png\" alt=\"Screen Shot 2014-08-11 at 9.51.15 PM\"></a></div>",
        "metafields": [
          {
            "edit": 1,
            "value": "cb06c1c0-04dd-11e6-8e50-dd42082f9224-Screen Shot 2016-04-17 at 3.48.31 PM.png",
            "key": "thumb",
            "title": "Thumb",
            "type": "file",
            "children": false
          },
          {
            "edit": 1,
            "value": "<p><br></p>",
            "key": "excerpt",
            "title": "Excerpt",
            "type": "html-textarea",
            "children": false
          }
        ],
        "type_slug": "work",
        "created": "2016-03-20T00:33:02.458Z",
        "user_id": "5357ef811693be2118000001",
        "options": null,
        "order": 7,
        "modified": "2016-04-17T21:55:00.100Z",
        "status": "published"
      },
      {
        "_id": "56edefbee6dcdbb570000025",
        "old_id": "56edefbe952f68b570a025d8",
        "bucket": "56edeedd694d9a5e6f000031",
        "slug": "building-a-simple-react-application-using-the-flux-pattern",
        "title": "Building A Simple React Application Using The Flux Pattern: A Step-By-Step Guide",
        "content": "React is a very powerful library for building&nbsp;interactive JavaScript applications. &nbsp;One of its strongest qualities is that it forces you to build your app in a uni-directional data flow. &nbsp;This is much different from other frameworks' two-way data binding. With <a href=\"http://facebook.github.io/react/\" target=\"_blank\">React</a>, every piece of your application is controlled from a single source, it's owner. &nbsp;The owner is defined by the Component that is passing \"props\" to its owned component.\r\n\r\nAs more nested components are added, this logic can grow out of hand and can make it difficult to keep track of events passed through the component hierarchy. &nbsp;This is where <a href=\"https://facebook.github.io/flux/\" target=\"_blank\">Flux</a>&nbsp;steps in to provide an outlet from the hierarchy to handle dispatched events and altered data within our application.\r\n\r\nRather than going into graphs and models to describe what Flux does, lets build an easy Flux example application. &nbsp;We'll be building our application with the help of&nbsp;ES6 and Babel. &nbsp;If you're unfamiliar with these, you can <a href=\"https://babeljs.io/\" target=\"_blank\">find out more about ES6 and Babel here</a>. Babel allows us to use both ES6 JavaScript and JSX which will both compile to ES5 JavaScript which is compatible across all modern and legacy browsers. Now let's get started...\r\n<h6>TL;DR</h6>\r\n<a href=\"https://github.com/tonyspiro/easy-flux-example\" target=\"_blank\">Click here to download the full source code for this tutorial on GitHub</a>. Or keep reading if you want to follow along step-by-step.\r\n<h4>Getting started</h4>\r\nGet started by running the following commands in your preferred location:\r\n<pre class=\"  language-javascript\"><code class=\"  language-javascript\">mkdir easy<span class=\"token operator\">-</span>flux<span class=\"token operator\">-</span>example\r\ncd easy<span class=\"token operator\">-</span>flux<span class=\"token operator\">-</span>example\r\n</code></pre>\r\nNow we need to add our dependencies. Normally you may just get a package.json file and hit npm install, but it's good for educational purposes to know exactly what you're adding to your project and why:\r\n(run these with one command):\r\n<pre class=\"  language-javascript\"><code class=\"  language-javascript\">npm install react babelify browserify flux lodash vinyl<span class=\"token operator\">-</span>source<span class=\"token operator\">-</span>stream events gulp gulp<span class=\"token operator\">-</span>uglify gulp<span class=\"token operator\">-</span>rename run<span class=\"token operator\">-</span>sequence\r\n</code></pre>\r\n(or one at a time):\r\n<pre class=\"  language-javascript\"><code class=\"  language-javascript\">npm install react <span class=\"token comment\" spellcheck=\"true\">// for react</span>\r\nnpm install babelify <span class=\"token comment\" spellcheck=\"true\">// babel compiler</span>\r\nnpm install browserify <span class=\"token comment\" spellcheck=\"true\">// node module loader</span>\r\nnpm install flux <span class=\"token comment\" spellcheck=\"true\">// adds flux into the mix</span>\r\nnpm install lodash <span class=\"token comment\" spellcheck=\"true\">// a great JS utility</span>\r\nnpm install vinyl<span class=\"token operator\">-</span>source<span class=\"token operator\">-</span>stream <span class=\"token comment\" spellcheck=\"true\">// helps source our files for easy gulping</span>\r\nnpm install events <span class=\"token comment\" spellcheck=\"true\">// node's event emitter</span>\r\nnpm install gulp <span class=\"token comment\" spellcheck=\"true\">// our taskrunner to run compile / build processes</span>\r\nnpm install gulp<span class=\"token operator\">-</span>uglify <span class=\"token comment\" spellcheck=\"true\">// compresses our bundle.js (2.7MB) to bundle.min.js (251K) a must!</span>\r\nnpm install gulp<span class=\"token operator\">-</span>rename <span class=\"token comment\" spellcheck=\"true\">// renames our bundle.js file to bundle.min.js</span>\r\nnpm install run<span class=\"token operator\">-</span>sequence <span class=\"token comment\" spellcheck=\"true\">// keeps our gulp processes in order</span>\r\n</code></pre>\r\nNow that we've stocked our toolkit, let's build out our task runner. My preference is <a href=\"http://gulpjs.com/\" target=\"_blank\">Gulp</a>, but you could just as easily use <a href=\"http://gruntjs.com/\" target=\"_blank\">Grunt</a> (though there are <a href=\"http://sixrevisions.com/web-development/grunt-vs-gulp/\" target=\"_blank\">legions of developers who would tell you Gulp is the better way</a>, myself included).\r\n<pre class=\"  language-javascript\"><code class=\"  language-javascript\">vim gulpfile<span class=\"token punctuation\">.</span>js\r\n</code></pre>\r\nAnd add the following:\r\n<pre class=\"  language-javascript\"><code class=\"  language-javascript\"><span class=\"token comment\" spellcheck=\"true\">// gulpfile.js</span>\r\n<span class=\"token keyword\">var</span> gulp <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'gulp'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">var</span> browserify <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'browserify'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">var</span> babelify <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'babelify'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">var</span> source <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'vinyl-source-stream'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">var</span> uglify <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'gulp-uglify'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">var</span> rename <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'gulp-rename'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">var</span> runSequence <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'run-sequence'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n \r\ngulp<span class=\"token punctuation\">.</span><span class=\"token function\">task</span><span class=\"token punctuation\">(</span><span class=\"token string\">'build'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token keyword\">return</span> <span class=\"token function\">browserify</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\r\n    entries<span class=\"token punctuation\">:</span> <span class=\"token string\">'app.js'</span><span class=\"token punctuation\">,</span>\r\n    extensions<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'.jsx'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\r\n    debug<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span>\r\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\r\n  <span class=\"token punctuation\">.</span><span class=\"token function\">transform</span><span class=\"token punctuation\">(</span>babelify<span class=\"token punctuation\">)</span>\r\n  <span class=\"token punctuation\">.</span><span class=\"token function\">bundle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\r\n  <span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span><span class=\"token function\">source</span><span class=\"token punctuation\">(</span><span class=\"token string\">'bundle.js'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\r\n  <span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span>gulp<span class=\"token punctuation\">.</span><span class=\"token function\">dest</span><span class=\"token punctuation\">(</span><span class=\"token string\">'dist'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\ngulp<span class=\"token punctuation\">.</span><span class=\"token function\">task</span><span class=\"token punctuation\">(</span><span class=\"token string\">'compress'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token keyword\">return</span> gulp<span class=\"token punctuation\">.</span><span class=\"token function\">src</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./dist/bundle.js'</span><span class=\"token punctuation\">)</span>\r\n    <span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span><span class=\"token function\">uglify</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\r\n    <span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span><span class=\"token function\">rename</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>suffix<span class=\"token punctuation\">:</span> <span class=\"token string\">'.min'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\r\n    <span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span>gulp<span class=\"token punctuation\">.</span><span class=\"token function\">dest</span><span class=\"token punctuation\">(</span><span class=\"token string\">'dist'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\ngulp<span class=\"token punctuation\">.</span><span class=\"token function\">task</span><span class=\"token punctuation\">(</span><span class=\"token string\">'default'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>cb<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token function\">runSequence</span><span class=\"token punctuation\">(</span><span class=\"token string\">'build'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'compress'</span><span class=\"token punctuation\">,</span> cb<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n</code></pre>\r\nSo looking at this file you can see that the default build will use Browserify to grab all of our required modules and pipe them to Babel to be transformed into a bundle.js file and will end up in a folder called \"dist\". Pretty simple and straight-forward.\r\n\r\nNow that we have all of our processes ready to go, let's build our application (finally!).\r\n\r\nLet's start by creating index.html\r\n<pre class=\"  language-javascript\"><code class=\"  language-javascript\">vim index<span class=\"token punctuation\">.</span>html\r\n</code></pre>\r\nAdd the following to index.html:\r\n<pre class=\"  language-markup\"><code class=\"  language-markup\"><span class=\"token doctype\">&lt;!DOCTYPE html&gt;</span>\r\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span> <span class=\"token attr-name\">lang</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>en<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\r\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">&gt;</span></span>\r\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">charset</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>UTF-8<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\r\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">&gt;</span></span>Easy Flux Example<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">&gt;</span></span>\r\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">&gt;</span></span>\r\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">&gt;</span></span>\r\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">&gt;</span></span>Easy Flux Example<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span>\r\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>app-root<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\r\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>dist/bundle.min.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token script language-javascript\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">&gt;</span></span>\r\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">&gt;</span></span>\r\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">&gt;</span></span></code></pre>\r\nAnd that's all we need for our frontend, everything else will be handled by React and Flux.\r\n\r\nLet's get started with our application logic by adding our main app file.\r\n<pre class=\"  language-javascript\"><code class=\"  language-javascript\">vim app<span class=\"token punctuation\">.</span>js\r\n</code></pre>\r\nAdd the following to app.js\r\n<pre class=\"  language-javascript\"><code class=\"  language-javascript\"><span class=\"token comment\" spellcheck=\"true\">// app.js</span>\r\n<span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">import</span> AppRoot <span class=\"token keyword\">from</span> <span class=\"token string\">'./components/AppRoot'</span><span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">// we'll create this next</span>\r\n\r\nReact<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&lt;</span>AppRoot <span class=\"token operator\">/</span><span class=\"token operator\">&gt;</span><span class=\"token punctuation\">,</span>\r\n  document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'app-root'</span><span class=\"token punctuation\">)</span>\r\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n</code></pre>\r\nNotice all of the ES6 syntax which Babel will sort out into cross-compatible ES5 JavaScript. Also notice the importing of node modules, which Browserify will handle.\r\n\r\nNext, let's start building our Components, starting with AppRoot.\r\n<pre class=\"  language-javascript\"><code class=\"  language-javascript\">mkdir components\r\ncd components\r\nvim AppRoot<span class=\"token punctuation\">.</span>jsx\r\n</code></pre>\r\nAnd add the following:\r\n<pre class=\"  language-javascript\"><code class=\"  language-javascript\"><span class=\"token comment\" spellcheck=\"true\">// AppRoot.jsx</span>\r\n<span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">AppRoot</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\r\n        <span class=\"token keyword\">let</span> itemHtml <span class=\"token operator\">=</span> <span class=\"token operator\">&lt;</span>li<span class=\"token operator\">&gt;</span>Hello React<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>li<span class=\"token operator\">&gt;</span><span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">// we will map a list here later</span>\r\n        <span class=\"token keyword\">return</span> <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">&gt;</span>\r\n            <span class=\"token operator\">&lt;</span>ul<span class=\"token operator\">&gt;</span>\r\n                <span class=\"token punctuation\">{</span> itemHtml <span class=\"token punctuation\">}</span>\r\n            <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>ul<span class=\"token operator\">&gt;</span>\r\n         <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">&gt;</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> AppRoot<span class=\"token punctuation\">;</span>\r\n</code></pre>\r\nNow let's take a step back and make sure all of this is working properly.\r\n<pre class=\"  language-javascript\"><code class=\"  language-javascript\">cd <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token operator\">/</span></code></pre>\r\nRun our gulp command which will convert our ES6 and JSX into ES5 (Babelify) and load everything into bundle.js (Browserify). If you haven't already, install gulp globally to use the CLI.\r\n<pre class=\"  language-javascript\"><code class=\"  language-javascript\">sudo npm install gulp <span class=\"token operator\">-</span>g</code></pre>\r\nThen run our build:\r\n<pre class=\"  language-javascript\"><code class=\"  language-javascript\">gulp</code></pre>\r\nLet's check out what we have so far. You could easily just view index.html in your browser, but I like to view my apps on localhost. If you don't have http-server installed, run the following:\r\n<pre class=\"  language-javascript\"><code class=\"  language-javascript\">sudo npm install http<span class=\"token operator\">-</span>server <span class=\"token operator\">-</span>g\r\nhttp<span class=\"token operator\">-</span>server</code></pre>\r\nNow go to <a href=\"http://localhost:8080\" target=\"_blank\">http://localhost:8080</a>. You should see a message which means that your React application is working.\r\n\r\nNow that React is working, let's add some interactivity, which is where Flux will work its magic.\r\n<h4>Adding Flux</h4>\r\nThe main pieces of the Flux architecture are the Components, Store and Dispatcher. Since we have our first Component set up, lets get started with our Store. Our Store will satisfy three pieces of our application. It will:\r\n\r\n1. Get initial data for our application.\r\n2. Store the functions for our application processes.\r\n3. Emit events that will tell our application to re-render our application.\r\n<h4>Reading data from the Store</h4>\r\nTo get our Store set up run the following commands:\r\n<pre class=\"  language-javascript\"><code class=\"  language-javascript\">mkdir stores\r\ncd stores\r\nvim ListStore<span class=\"token punctuation\">.</span>js\r\n</code></pre>\r\nIn ListStore.js add the following:\r\n<pre class=\"  language-javascript\"><code class=\"  language-javascript\"><span class=\"token comment\" spellcheck=\"true\">// ListStore.js</span>\r\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>EventEmitter<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'events'</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">import</span> _ <span class=\"token keyword\">from</span> <span class=\"token string\">'lodash'</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token keyword\">let</span> ListStore <span class=\"token operator\">=</span> _<span class=\"token punctuation\">.</span><span class=\"token function\">extend</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> EventEmitter<span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\r\n\r\n  <span class=\"token comment\" spellcheck=\"true\">// Mock default data</span>\r\n  items<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\r\n    <span class=\"token punctuation\">{</span>\r\n      name<span class=\"token punctuation\">:</span> <span class=\"token string\">'Item 1'</span><span class=\"token punctuation\">,</span>\r\n      id<span class=\"token punctuation\">:</span> <span class=\"token number\">0</span>\r\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\r\n    <span class=\"token punctuation\">{</span>\r\n      name<span class=\"token punctuation\">:</span> <span class=\"token string\">'Item 2'</span><span class=\"token punctuation\">,</span>\r\n      id<span class=\"token punctuation\">:</span> <span class=\"token number\">1</span>\r\n    <span class=\"token punctuation\">}</span>\r\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\r\n\r\n  getItems<span class=\"token punctuation\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\r\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>items<span class=\"token punctuation\">;</span>\r\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\r\n\r\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> ListStore<span class=\"token punctuation\">;</span></code></pre>\r\nHere, we've added Node's EventEmmiter so our Store can emit events to trigger our UI changes. Lodash helps us bind the EventEmmiter to our ListStore object (you could also use other methods for this). And our mock data will be the default data visible on render. <code>getItems</code> is the obvious function that will get items from our Store.\r\n\r\nNext, let's add the new ListStore to our AppRoot Component so we can render our default Store data. Run the following commands:\r\n<pre class=\"  language-javascript\"><code class=\"  language-javascript\">cd <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token operator\">/</span>\r\ncd components\r\nvim AppRoot<span class=\"token punctuation\">.</span>jsx\r\n</code></pre>\r\nReplace the contents of AppRoot.jsx with the following:\r\n<pre class=\"  language-javascript\"><code class=\"  language-javascript\"><span class=\"token comment\" spellcheck=\"true\">// AppRoot.jsx</span>\r\n<span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">import</span> ListStore <span class=\"token keyword\">from</span> <span class=\"token string\">'../stores/ListStore'</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token comment\" spellcheck=\"true\">// Method to retrieve state from Stores</span>\r\n<span class=\"token keyword\">let</span> getListState <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\r\n    items<span class=\"token punctuation\">:</span> ListStore<span class=\"token punctuation\">.</span><span class=\"token function\">getItems</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\r\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span>\r\n\r\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">AppRoot</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token function\">getListState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n  <span class=\"token punctuation\">}</span>\r\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\r\n    <span class=\"token keyword\">let</span> items <span class=\"token operator\">=</span> ListStore<span class=\"token punctuation\">.</span><span class=\"token function\">getItems</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token keyword\">let</span> itemHtml <span class=\"token operator\">=</span> items<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span> listItem <span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token punctuation\">{</span>\r\n      <span class=\"token keyword\">return</span> <span class=\"token operator\">&lt;</span>li key<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span> listItem<span class=\"token punctuation\">.</span>id <span class=\"token punctuation\">}</span><span class=\"token operator\">&gt;</span>\r\n          <span class=\"token punctuation\">{</span> listItem<span class=\"token punctuation\">.</span>name <span class=\"token punctuation\">}</span>\r\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>li<span class=\"token operator\">&gt;</span><span class=\"token punctuation\">;</span>\r\n\r\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\r\n      <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">&gt;</span>\r\n        <span class=\"token operator\">&lt;</span>ul<span class=\"token operator\">&gt;</span>\r\n          <span class=\"token punctuation\">{</span> itemHtml <span class=\"token punctuation\">}</span>\r\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>ul<span class=\"token operator\">&gt;</span>\r\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">&gt;</span>\r\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n  <span class=\"token punctuation\">}</span>\r\n\r\n<span class=\"token punctuation\">}</span>\r\n\r\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> AppRoot<span class=\"token punctuation\">;</span>\r\n</code></pre>\r\nNow run the following commands to rebuild our bundle.js:\r\n<pre class=\"  language-javascript\"><code class=\"  language-javascript\">cd <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token operator\">/</span>\r\ngulp\r\n</code></pre>\r\nNow run the following command:\r\n<pre class=\"  language-javascript\"><code class=\"  language-javascript\">http<span class=\"token operator\">-</span>server\r\n</code></pre>\r\nAnd check out the changes at <a href=\"http://localhost:8080\" target=\"_blank\">http://localhost:8080</a>\r\n<h4>Adding / removing items in the Store</h4>\r\nNow let's add the ability to write new items to our Store. Let's create a new component that will handle this new functionality. Run the following commands:\r\n<pre class=\"  language-javascript\"><code class=\"  language-javascript\">cd components\r\nvim NewItemForm<span class=\"token punctuation\">.</span>jsx\r\n</code></pre>\r\nAnd now add the following to NewItemForm.jsx:\r\n<pre class=\"  language-javascript\"><code class=\"  language-javascript\"><span class=\"token comment\" spellcheck=\"true\">// NewItemForm.jsx</span>\r\n<span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">import</span> AppDispatcher <span class=\"token keyword\">from</span> <span class=\"token string\">'../dispatcher/AppDispatcher'</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">NewItemForm</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\r\n\r\n  <span class=\"token function\">createItem</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\r\n    \r\n    <span class=\"token comment\" spellcheck=\"true\">// so we don't reload the page</span>\r\n    e<span class=\"token punctuation\">.</span><span class=\"token function\">preventDefault</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    \r\n    <span class=\"token comment\" spellcheck=\"true\">// create ID</span>\r\n    <span class=\"token keyword\">let</span> id <span class=\"token operator\">=</span> <span class=\"token function\">guid</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    \r\n    <span class=\"token comment\" spellcheck=\"true\">// this gets the value from the input</span>\r\n    <span class=\"token keyword\">let</span> item_title <span class=\"token operator\">=</span> React<span class=\"token punctuation\">.</span><span class=\"token function\">findDOMNode</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>refs<span class=\"token punctuation\">.</span>item_title<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">.</span><span class=\"token function\">trim</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    \r\n    <span class=\"token comment\" spellcheck=\"true\">// this removes the value from the input</span>\r\n    React<span class=\"token punctuation\">.</span><span class=\"token function\">findDOMNode</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>refs<span class=\"token punctuation\">.</span>item_title<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> <span class=\"token string\">''</span><span class=\"token punctuation\">;</span>\r\n    \r\n    <span class=\"token comment\" spellcheck=\"true\">// This is where the magic happens, </span>\r\n    <span class=\"token comment\" spellcheck=\"true\">// no need to shoot this action all the way to the root of your application to edit state.</span>\r\n    <span class=\"token comment\" spellcheck=\"true\">// AppDispatcher does this for you.</span>\r\n    AppDispatcher<span class=\"token punctuation\">.</span><span class=\"token function\">dispatch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\r\n      action<span class=\"token punctuation\">:</span> <span class=\"token string\">'add-item'</span><span class=\"token punctuation\">,</span>\r\n      new_item<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\r\n        id<span class=\"token punctuation\">:</span> id<span class=\"token punctuation\">,</span>\r\n        name<span class=\"token punctuation\">:</span> item_title\r\n      <span class=\"token punctuation\">}</span>\r\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n  <span class=\"token punctuation\">}</span>\r\n\r\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\r\n\r\n    <span class=\"token keyword\">return</span> <span class=\"token operator\">&lt;</span>form onSubmit<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>createItem<span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span><span class=\"token operator\">&gt;</span>\r\n        <span class=\"token operator\">&lt;</span>input type<span class=\"token operator\">=</span><span class=\"token string\">\"text\"</span> ref<span class=\"token operator\">=</span><span class=\"token string\">\"item_title\"</span><span class=\"token operator\">/</span><span class=\"token operator\">&gt;</span>\r\n        <span class=\"token operator\">&lt;</span>button<span class=\"token operator\">&gt;</span>Add <span class=\"token keyword\">new</span> <span class=\"token class-name\">item</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">&gt;</span>\r\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>form<span class=\"token operator\">&gt;</span><span class=\"token punctuation\">;</span>\r\n  <span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span>\r\n\r\n<span class=\"token keyword\">function</span> <span class=\"token function\">guid</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token keyword\">function</span> <span class=\"token function\">s4</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token keyword\">return</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">floor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span> <span class=\"token operator\">+</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">0x10000</span><span class=\"token punctuation\">)</span>\r\n      <span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span>\r\n      <span class=\"token punctuation\">.</span><span class=\"token function\">substring</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n  <span class=\"token punctuation\">}</span>\r\n  <span class=\"token keyword\">return</span> <span class=\"token function\">s4</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token function\">s4</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">'-'</span> <span class=\"token operator\">+</span> <span class=\"token function\">s4</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">'-'</span> <span class=\"token operator\">+</span> <span class=\"token function\">s4</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">'-'</span> <span class=\"token operator\">+</span>\r\n    <span class=\"token function\">s4</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">'-'</span> <span class=\"token operator\">+</span> <span class=\"token function\">s4</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token function\">s4</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token function\">s4</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span>\r\n\r\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> NewItemForm<span class=\"token punctuation\">;</span>\r\n</code></pre>\r\nSo to give you a brief idea of what's happening here, from the render up: We're showing a text input that has the function <code>createItem</code> bound to it on submit. When the form is submitted, <code>createItem</code> will create the new id, clear the input, then pass the action ('add-item') and the <code>new_item</code> data to the AppDispatcher.\r\n\r\nNow we need to create our AppDispatcher to receive this data. Run the following commands:\r\n<pre class=\"  language-javascript\"><code class=\"  language-javascript\">cd <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token operator\">/</span>\r\nmkdir dispatcher\r\ncd dispatcher\r\nvim AppDispatcher<span class=\"token punctuation\">.</span>js\r\n</code></pre>\r\nAdd the following to AppDispatcher.js:\r\n<pre class=\"  language-javascript\"><code class=\"  language-javascript\"><span class=\"token comment\" spellcheck=\"true\">// AppDispatcher.js </span>\r\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>Dispatcher<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'flux'</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">let</span> AppDispatcher <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Dispatcher</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token keyword\">import</span> ListStore <span class=\"token keyword\">from</span> <span class=\"token string\">'../stores/ListStore'</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token comment\" spellcheck=\"true\">// Register callback with AppDispatcher</span>\r\nAppDispatcher<span class=\"token punctuation\">.</span><span class=\"token function\">register</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token punctuation\">{</span>\r\n\r\n  <span class=\"token keyword\">let</span> action <span class=\"token operator\">=</span> payload<span class=\"token punctuation\">.</span>action<span class=\"token punctuation\">;</span>\r\n  <span class=\"token keyword\">let</span> new_item <span class=\"token operator\">=</span> payload<span class=\"token punctuation\">.</span>new_item<span class=\"token punctuation\">;</span>\r\n  <span class=\"token keyword\">let</span> id <span class=\"token operator\">=</span> payload<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">;</span>\r\n\r\n  <span class=\"token keyword\">switch</span><span class=\"token punctuation\">(</span>action<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n\r\n    <span class=\"token comment\" spellcheck=\"true\">// Respond to add-item action</span>\r\n    <span class=\"token keyword\">case</span> <span class=\"token string\">'add-item'</span><span class=\"token punctuation\">:</span>\r\n      ListStore<span class=\"token punctuation\">.</span><span class=\"token function\">addItem</span><span class=\"token punctuation\">(</span>new_item<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n      <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\r\n    \r\n    <span class=\"token comment\" spellcheck=\"true\">// Respond to remove-item action</span>\r\n    <span class=\"token keyword\">case</span> <span class=\"token string\">'remove-item'</span><span class=\"token punctuation\">:</span>\r\n      ListStore<span class=\"token punctuation\">.</span><span class=\"token function\">removeItem</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n      <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\r\n\r\n    <span class=\"token keyword\">default</span><span class=\"token punctuation\">:</span>\r\n      <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\r\n  <span class=\"token punctuation\">}</span>\r\n\r\n  <span class=\"token comment\" spellcheck=\"true\">// If action was responded to, emit change event</span>\r\n  ListStore<span class=\"token punctuation\">.</span><span class=\"token function\">emitChange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n  <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> AppDispatcher<span class=\"token punctuation\">;</span>\r\n</code></pre>\r\nThis is where Flux can get confusing, but with this simple example, I think it's pretty clear that when AppDispatcher is called we can perform our logic on its payload to determine what actions to take and what data to transmit. If the action is 'add-item' <code>ListStore.addItem</code> is triggered. If the action is 'remove-item' then <code>ListStore.removeItem</code> is triggered. Since these two functions don't exist in our Store yet, let's add them to our ListStore.\r\n\r\nRun the following commands:\r\n<pre class=\"  language-javascript\"><code class=\"  language-javascript\">cd <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token operator\">/</span>stores\r\nvim ListStore<span class=\"token punctuation\">.</span>js\r\n</code></pre>\r\nReplace the contents of ListStore.js with the following:\r\n<pre class=\"  language-javascript\"><code class=\"  language-javascript\"><span class=\"token comment\" spellcheck=\"true\">// ListStore.js</span>\r\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>EventEmitter<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'events'</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">import</span> _ <span class=\"token keyword\">from</span> <span class=\"token string\">'lodash'</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token keyword\">let</span> ListStore <span class=\"token operator\">=</span> _<span class=\"token punctuation\">.</span><span class=\"token function\">extend</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> EventEmitter<span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\r\n\r\n  <span class=\"token comment\" spellcheck=\"true\">// Mock default data</span>\r\n  items<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\r\n    <span class=\"token punctuation\">{</span>\r\n      name<span class=\"token punctuation\">:</span> <span class=\"token string\">'Item 1'</span><span class=\"token punctuation\">,</span>\r\n      id<span class=\"token punctuation\">:</span> <span class=\"token number\">0</span>\r\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\r\n    <span class=\"token punctuation\">{</span>\r\n      name<span class=\"token punctuation\">:</span> <span class=\"token string\">'Item 2'</span><span class=\"token punctuation\">,</span>\r\n      id<span class=\"token punctuation\">:</span> <span class=\"token number\">1</span>\r\n    <span class=\"token punctuation\">}</span>\r\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\r\n\r\n  <span class=\"token comment\" spellcheck=\"true\">// Get all items</span>\r\n  getItems<span class=\"token punctuation\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\r\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>items<span class=\"token punctuation\">;</span>\r\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\r\n\r\n  <span class=\"token comment\" spellcheck=\"true\">// Add item</span>\r\n  addItem<span class=\"token punctuation\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>new_item<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\r\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>items<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>new_item<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\r\n\r\n  <span class=\"token comment\" spellcheck=\"true\">// Remove item</span>\r\n  removeItem<span class=\"token punctuation\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>item_id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\r\n    \r\n    <span class=\"token keyword\">let</span> items <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>items<span class=\"token punctuation\">;</span>\r\n    \r\n    _<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span>items<span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token punctuation\">{</span>\r\n      <span class=\"token keyword\">return</span> item_id <span class=\"token operator\">==</span> item<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    \r\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>items <span class=\"token operator\">=</span> items<span class=\"token punctuation\">;</span>\r\n\r\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\r\n\r\n  <span class=\"token comment\" spellcheck=\"true\">// Emit Change event</span>\r\n  emitChange<span class=\"token punctuation\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\r\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">emit</span><span class=\"token punctuation\">(</span><span class=\"token string\">'change'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\r\n\r\n  <span class=\"token comment\" spellcheck=\"true\">// Add change listener</span>\r\n  addChangeListener<span class=\"token punctuation\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>callback<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\r\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'change'</span><span class=\"token punctuation\">,</span> callback<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\r\n\r\n  <span class=\"token comment\" spellcheck=\"true\">// Remove change listener</span>\r\n  removeChangeListener<span class=\"token punctuation\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>callback<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\r\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">removeListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'change'</span><span class=\"token punctuation\">,</span> callback<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n  <span class=\"token punctuation\">}</span>\r\n\r\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> ListStore<span class=\"token punctuation\">;</span>\r\n</code></pre>\r\nNotice what we've added here: functions <code>addItem</code> and <code>deleteItem</code> add or remove items to <code>this.items</code>. <code>emitChange</code> causes an event to be emitted to our AppRoot Component with <code>_onChange</code> which will then render the new state from the ListStore.\r\n\r\nNow we need to edit our AppRoot Component to listen for the new events being triggered by the ListStore.\r\n\r\nRun the following commands:\r\n<pre class=\"  language-javascript\"><code class=\"  language-javascript\">cd <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token operator\">/</span>components\r\nvim AppRoot<span class=\"token punctuation\">.</span>jsx\r\n</code></pre>\r\nAnd now we'll replace the contents of AppRoot with the following:\r\n<pre class=\"  language-javascript\"><code class=\"  language-javascript\"><span class=\"token comment\" spellcheck=\"true\">// AppRoot.jsx</span>\r\n<span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">import</span> ListStore <span class=\"token keyword\">from</span> <span class=\"token string\">'../stores/ListStore'</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">import</span> AppDispatcher <span class=\"token keyword\">from</span> <span class=\"token string\">'../dispatcher/AppDispatcher'</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token comment\" spellcheck=\"true\">// Sub components</span>\r\n<span class=\"token keyword\">import</span> NewItemForm <span class=\"token keyword\">from</span> <span class=\"token string\">'./NewItemForm'</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token comment\" spellcheck=\"true\">// Method to retrieve state from Stores</span>\r\n<span class=\"token keyword\">let</span> getListState <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\r\n    items<span class=\"token punctuation\">:</span> ListStore<span class=\"token punctuation\">.</span><span class=\"token function\">getItems</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\r\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span>\r\n\r\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">AppRoot</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\r\n  \r\n  <span class=\"token comment\" spellcheck=\"true\">// Method to setState based upon Store changes</span>\r\n  <span class=\"token function\">_onChange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token function\">getListState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n  <span class=\"token punctuation\">}</span>\r\n\r\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token function\">getListState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n  <span class=\"token punctuation\">}</span>\r\n\r\n  <span class=\"token comment\" spellcheck=\"true\">// Add change listeners to stores</span>\r\n  <span class=\"token function\">componentDidMount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n    ListStore<span class=\"token punctuation\">.</span><span class=\"token function\">addChangeListener</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_onChange<span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n  <span class=\"token punctuation\">}</span>\r\n\r\n  <span class=\"token comment\" spellcheck=\"true\">// Remove change listeners from stores</span>\r\n  <span class=\"token function\">componentWillUnmount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n    ListStore<span class=\"token punctuation\">.</span><span class=\"token function\">removeChangeListener</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_onChange<span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n  <span class=\"token punctuation\">}</span>\r\n\r\n  <span class=\"token function\">removeItem</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\r\n\r\n    <span class=\"token keyword\">let</span> id <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>dataset<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">;</span>\r\n    \r\n    AppDispatcher<span class=\"token punctuation\">.</span><span class=\"token function\">dispatch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\r\n      action<span class=\"token punctuation\">:</span> <span class=\"token string\">'remove-item'</span><span class=\"token punctuation\">,</span>\r\n      id<span class=\"token punctuation\">:</span> id\r\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n  <span class=\"token punctuation\">}</span>\r\n\r\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\r\n      \r\n    <span class=\"token keyword\">let</span> _this <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token keyword\">let</span> items <span class=\"token operator\">=</span> ListStore<span class=\"token punctuation\">.</span><span class=\"token function\">getItems</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token keyword\">let</span> itemHtml <span class=\"token operator\">=</span> items<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span> listItem <span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token punctuation\">{</span>\r\n      <span class=\"token keyword\">return</span> <span class=\"token operator\">&lt;</span>li key<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span> listItem<span class=\"token punctuation\">.</span>id <span class=\"token punctuation\">}</span><span class=\"token operator\">&gt;</span>\r\n          <span class=\"token punctuation\">{</span> listItem<span class=\"token punctuation\">.</span>name <span class=\"token punctuation\">}</span> <span class=\"token operator\">&lt;</span>button onClick<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span> _this<span class=\"token punctuation\">.</span>removeItem <span class=\"token punctuation\">}</span> data<span class=\"token operator\">-</span>id<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span> listItem<span class=\"token punctuation\">.</span>id <span class=\"token punctuation\">}</span><span class=\"token operator\">&gt;</span>×<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">&gt;</span>\r\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>li<span class=\"token operator\">&gt;</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n    <span class=\"token keyword\">return</span> <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">&gt;</span>\r\n        <span class=\"token operator\">&lt;</span>ul<span class=\"token operator\">&gt;</span>\r\n            <span class=\"token punctuation\">{</span> itemHtml <span class=\"token punctuation\">}</span>\r\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>ul<span class=\"token operator\">&gt;</span>\r\n        <span class=\"token operator\">&lt;</span>NewItemForm <span class=\"token operator\">/</span><span class=\"token operator\">&gt;</span>\r\n\r\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">&gt;</span><span class=\"token punctuation\">;</span>\r\n  <span class=\"token punctuation\">}</span>\r\n\r\n<span class=\"token punctuation\">}</span>\r\n\r\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> AppRoot<span class=\"token punctuation\">;</span>\r\n</code></pre>\r\nNotice what we've added here: <code>_onChange</code> handles all state changes within our Flux app. And notice that we have the function <code>removeItem</code> which calls the AppDispatcher with the \"remove-item\" action.\r\n\r\nNow let's see if it's working as it should. Run the following commands to build the bundle.js with our updates.\r\n<pre class=\"  language-javascript\"><code class=\"  language-javascript\">cd <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token operator\">/</span>\r\ngulp\r\n</code></pre>\r\nAnd when gulp is done, run:\r\n<pre class=\"  language-javascript\"><code class=\"  language-javascript\">http<span class=\"token operator\">-</span>server\r\n</code></pre>\r\nNow go to <a href=\"http://localhost:8080\" target=\"_blank\">http://localhost:8080</a> and you should be able to add and remove items from our easy Flux example application.\r\n\r\nI hope you found this tutorial helpful in understanding the powerful concepts behind building interactive apps with React and Flux. If you would like to download the whole thing, you can <a href=\"https://github.com/tonyspiro/easy-flux-example\" target=\"_blank\">download the easy Flux example application here</a>.\r\n\r\nIf you have any questions, comments, suggestions, feel free to leave them in the comments section below or <a href=\"http://twitter.com/tonyspiro\" target=\"_blank\">reach out to me on twitter</a>.\r\n\r\n- Tony Spiro",
        "metafields": [
          {
            "object_type": "authors",
            "edit": 1,
            "value": "5712bb5de9c686d006000013",
            "key": "author",
            "title": "Author",
            "type": "object",
            "children": false
          },
          {
            "edit": 1,
            "value": "",
            "key": "hero",
            "title": "Hero",
            "type": "file",
            "children": false
          },
          {
            "edit": 1,
            "value": "",
            "key": "tag",
            "title": "Tag",
            "type": "text",
            "children": false
          },
          {
            "edit": 1,
            "value": "<p><br></p>",
            "key": "teaser",
            "title": "Teaser",
            "type": "html-textarea",
            "children": false
          },
          {
            "edit": 1,
            "value": "2015-08-12",
            "key": "published",
            "title": "Published",
            "type": "date",
            "children": false
          },
          {
            "edit": 1,
            "value": 933,
            "key": "wp-id",
            "title": "WP ID",
            "type": "text",
            "children": false
          }
        ],
        "type_slug": "posts",
        "created": "2016-03-20T00:33:02.440Z",
        "user_id": "5357ef811693be2118000001",
        "options": null,
        "order": 7,
        "modified": "2016-04-17T23:18:26.571Z",
        "status": "published"
      },
      {
        "_id": "56edefbee6dcdbb570000029",
        "old_id": "56edefbe952f68b570a025dc",
        "bucket": "56edeedd694d9a5e6f000031",
        "slug": "brand-hatchery-holiday-card",
        "title": "The Brand Hatchery Holiday Card",
        "content": "<a href=\"http://brandhatchery.com/hohoho/2013/\" target=\"_blank\"><img src=\"https://cosmicjs.com/uploads/91f87ff0-04e6-11e6-8e50-dd42082f9224-Screen-Shot-2014-02-12-at-9.27.57-PM.png\"></a>This was a really fun project that lets the user whack a moving pinata to get the goodies inside. It is built from scratch with HTML5, JQuery and is responsive down to mobile. Check it out!\r\n\r\n<a href=\"http://brandhatchery.com/hohoho/2013/\">http://brandhatchery.com/hohoho/2013/</a>.",
        "metafields": [
          {
            "edit": 1,
            "value": "41aa00d0-04de-11e6-8e50-dd42082f9224-ball.png",
            "key": "thumb",
            "title": "Thumb",
            "type": "file",
            "children": false
          },
          {
            "edit": 1,
            "value": "<p><br></p>",
            "key": "excerpt",
            "title": "Excerpt",
            "type": "html-textarea",
            "children": false
          }
        ],
        "type_slug": "work",
        "created": "2016-03-20T00:33:02.456Z",
        "user_id": "5357ef811693be2118000001",
        "options": null,
        "order": 8,
        "modified": "2016-04-17T21:55:25.862Z",
        "status": "published"
      },
      {
        "_id": "56edefbee6dcdbb570000024",
        "old_id": "56edefbe952f68b570a025d7",
        "bucket": "56edeedd694d9a5e6f000031",
        "slug": "easiest-way-install-latest-node-js-npm-amazon-linux-one-command",
        "title": "Easiest Way to Install Latest Node.js and NPM on Amazon Linux (with one command)",
        "content": "Here it is like magic:\r\n<pre><code class=\"language-javascript\">sudo yum install nodejs npm --enablerepo=epel</code></pre>",
        "metafields": [
          {
            "object_type": "authors",
            "edit": 1,
            "value": "5712bb5de9c686d006000013",
            "key": "author",
            "title": "Author",
            "type": "object",
            "children": false
          },
          {
            "edit": 1,
            "value": "",
            "key": "hero",
            "title": "Hero",
            "type": "file",
            "children": false
          },
          {
            "edit": 1,
            "value": "",
            "key": "tag",
            "title": "Tag",
            "type": "text",
            "children": false
          },
          {
            "edit": 1,
            "value": "<p><br></p>",
            "key": "teaser",
            "title": "Teaser",
            "type": "html-textarea",
            "children": false
          },
          {
            "edit": 1,
            "value": "2015-06-12",
            "key": "published",
            "title": "Published",
            "type": "date",
            "children": false
          }
        ],
        "type_slug": "posts",
        "created": "2016-03-20T00:33:02.415Z",
        "user_id": "5357ef811693be2118000001",
        "options": null,
        "order": 8,
        "modified": "2016-04-17T22:58:56.960Z",
        "status": "published"
      },
      {
        "_id": "56edefbee6dcdbb570000023",
        "old_id": "56edefbe952f68b570a025d6",
        "bucket": "56edeedd694d9a5e6f000031",
        "slug": "optimize-dev-workflow-gulp-mamp",
        "title": "Optimize Your Dev Workflow With Gulp MAMP",
        "content": "I've decided that I'm going to use Gulp to run tasks for all future projects.  Now I like Grunt, but I've realized I like writing code better than configuring processes and with Gulp, I have more freedom to write processes easily.  \r\n\r\nOther reasons why I choose Gulp over Grunt: I prefer the concept of streaming the files through alterations instead of writing a new file every time I need to complete a specific task, <a href=\"http://jaysoo.ca/2014/01/27/gruntjs-vs-gulpjs/\" target=\"_blank\">it's more concise and I've found it easier and faster to do the job</a>. Which brings me to my new workflow tool: Gulp MAMP.\r\n\r\nI've found that when developing PHP applications locally, and having a few projects going at once, I need to be able to switch quickly between projects and switching out MAMP configurations has always taken a minute to reconfigure and been a real speed bump.  And we know as developers, every minute counts in the course of our day. So I built a gulp plugin that will configure, start and stop MAMP from a few gulp commands.\r\n\r\nIn your project location, just run the following command to install gulp-mamp:\r\n\r\n<pre class=\"prettyprint prettyprinted\"><span class=\"pln\">npm install gulp</span><span class=\"pun\">-</span><span class=\"pln\">mamp</span></pre>\r\n\r\nOnce this is in your node_modules folder, you can configure your dev environment and add the gulp-mamp tasks to your gulpfile.js:\r\n\r\n<pre class=\"prettyprint prettyprinted\"><span class=\"kwd\">var</span><span class=\"pln\"> options </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"pun\">{};</span><span class=\"pln\">\r\noptions</span><span class=\"pun\">.</span><span class=\"pln\">user </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"str\">'yourusername'</span><span class=\"pun\">;</span><span class=\"pln\">\r\noptions</span><span class=\"pun\">.</span><span class=\"pln\">port </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"lit\">8888</span><span class=\"pun\">;</span><span class=\"pln\">\r\noptions</span><span class=\"pun\">.</span><span class=\"pln\">site_path </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"str\">'/your/full/site/path'</span><span class=\"pun\">;</span><span class=\"pln\"> </span><span class=\"com\">// something like /Users/username/sites/mymampsite  </span><span class=\"pln\">\r\n \r\n</span><span class=\"com\">// Modules </span><span class=\"pln\">\r\n</span><span class=\"kwd\">var</span><span class=\"pln\"> gulp </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"kwd\">require</span><span class=\"pun\">(</span><span class=\"str\">'gulp'</span><span class=\"pun\">);</span><span class=\"pln\">\r\n</span><span class=\"kwd\">var</span><span class=\"pln\"> mamp </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"kwd\">require</span><span class=\"pun\">(</span><span class=\"str\">'gulp-mamp'</span><span class=\"pun\">);</span><span class=\"pln\">\r\n \r\ngulp</span><span class=\"pun\">.</span><span class=\"pln\">task</span><span class=\"pun\">(</span><span class=\"str\">'config'</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"kwd\">function</span><span class=\"pun\">(</span><span class=\"pln\">cb</span><span class=\"pun\">){</span><span class=\"pln\">\r\n    mamp</span><span class=\"pun\">(</span><span class=\"pln\">options</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"str\">'config'</span><span class=\"pun\">,</span><span class=\"pln\"> cb</span><span class=\"pun\">);</span><span class=\"pln\">\r\n</span><span class=\"pun\">});</span><span class=\"pln\">\r\n \r\ngulp</span><span class=\"pun\">.</span><span class=\"pln\">task</span><span class=\"pun\">(</span><span class=\"str\">'start'</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"kwd\">function</span><span class=\"pun\">(</span><span class=\"pln\">cb</span><span class=\"pun\">){</span><span class=\"pln\">\r\n    mamp</span><span class=\"pun\">(</span><span class=\"pln\">options</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"str\">'start'</span><span class=\"pun\">,</span><span class=\"pln\"> cb</span><span class=\"pun\">);</span><span class=\"pln\">\r\n</span><span class=\"pun\">});</span><span class=\"pln\">\r\n \r\ngulp</span><span class=\"pun\">.</span><span class=\"pln\">task</span><span class=\"pun\">(</span><span class=\"str\">'stop'</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"kwd\">function</span><span class=\"pun\">(</span><span class=\"pln\">cb</span><span class=\"pun\">){</span><span class=\"pln\">\r\n    mamp</span><span class=\"pun\">(</span><span class=\"pln\">options</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"str\">'stop'</span><span class=\"pun\">,</span><span class=\"pln\"> cb</span><span class=\"pun\">);</span><span class=\"pln\">\r\n</span><span class=\"pun\">});</span><span class=\"pln\">\r\n \r\ngulp</span><span class=\"pun\">.</span><span class=\"pln\">task</span><span class=\"pun\">(</span><span class=\"str\">'mamp'</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"pun\">[</span><span class=\"str\">'config'</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"str\">'start'</span><span class=\"pun\">]);</span></pre>\r\n\r\nAfter these have been added, you can now run the following commands to configure, start and stop MAMP from your gulpfile.\r\n\r\n<pre class=\"prettyprint prettyprinted\"><span class=\"pln\">gulp mamp\r\ngulp stop</span></pre>\r\n\r\nWatch this repo on github:\r\n<a href=\"https://github.com/tonyspiro/gulp-mamp\" target=\"_blank\">https://github.com/tonyspiro/gulp-mamp</a>\r\n\r\nAnd npm:\r\n<a href=\"https://www.npmjs.com/package/gulp-mamp/\" target=\"_blank\">https://www.npmjs.com/package/gulp-mamp/</a>\r\n\r\nLet me know if you have any questions in the comments below.",
        "metafields": [
          {
            "object_type": "authors",
            "edit": 1,
            "value": "5712bb5de9c686d006000013",
            "key": "author",
            "title": "Author",
            "type": "object",
            "children": false
          },
          {
            "edit": 1,
            "value": "",
            "key": "hero",
            "title": "Hero",
            "type": "file",
            "children": false
          },
          {
            "edit": 1,
            "value": "",
            "key": "tag",
            "title": "Tag",
            "type": "text",
            "children": false
          },
          {
            "edit": 1,
            "value": "<p><br></p>",
            "key": "teaser",
            "title": "Teaser",
            "type": "html-textarea",
            "children": false
          },
          {
            "edit": 1,
            "value": "2015-03-05",
            "key": "published",
            "title": "Published",
            "type": "date",
            "children": false
          },
          {
            "edit": 1,
            "value": 719,
            "key": "wp-id",
            "title": "WP ID",
            "type": "text",
            "children": false
          }
        ],
        "type_slug": "posts",
        "created": "2016-03-20T00:33:02.414Z",
        "user_id": "5357ef811693be2118000001",
        "options": null,
        "order": 9,
        "modified": "2016-04-18T01:08:47.290Z",
        "status": "published"
      },
      {
        "_id": "56edefbee6dcdbb57000002c",
        "old_id": "56edefbe952f68b570a025df",
        "bucket": "56edeedd694d9a5e6f000031",
        "slug": "nimbix",
        "title": "Nimbix",
        "content": "This responsive website built for <a href=\"http://nimbix.net\" target=\"_blank\">Nimbix</a>, a cloud computing company, was built using a modified theme on the WordPress CMS. It turned out to be pretty cool and allows for some easy content population on the backend using totally customizable content spans.  Check it out at <a href=\"http://nimbix.net\" target=\"_blank\">Nimbix.net</a>.\r\n\r\n<a href=\"http://nimbix.net\" target=\"_blank\"><img src=\"https://cosmicjs.com/uploads/3c2ae760-04e7-11e6-8e50-dd42082f9224-Screen-Shot-2014-10-15-at-9.52.59-PM.jpg\" alt=\"Screen-Shot-2014-10-15-at-9.52.59-PM\" class=\"alignnone size-full wp-image-686\"></a>",
        "metafields": [
          {
            "edit": 1,
            "value": "32d01500-04dd-11e6-8e50-dd42082f9224-Screen Shot 2016-04-17 at 3.44.14 PM.png",
            "key": "thumb",
            "title": "Thumb",
            "type": "file",
            "children": false
          },
          {
            "edit": 1,
            "value": "<p><br></p>",
            "key": "excerpt",
            "title": "Excerpt",
            "type": "html-textarea",
            "children": false
          }
        ],
        "type_slug": "work",
        "created": "2016-03-20T00:33:02.459Z",
        "user_id": "5357ef811693be2118000001",
        "options": null,
        "order": 9,
        "modified": "2016-04-17T21:56:37.267Z",
        "status": "published"
      },
      {
        "_id": "56edefbee6dcdbb570000022",
        "old_id": "56edefbe952f68b570a025d5",
        "bucket": "56edeedd694d9a5e6f000031",
        "slug": "start-stop-configure-mamp-grunt",
        "title": "Start, Stop and Configure MAMP With Grunt",
        "content": "If you're like me, you like simplifying your workflow (and your life!).  I love using <a href=\"http://gruntjs.com/\" target=\"_blank\">Grunt</a> to streamline and organize my development workflow.  I use it to Uglify my JS, modularize my LESS files, preprocess my CSS and more. I thought why not cut out that extra task of configuring and restarting MAMP?  So I looked around for a way to easily do this and couldn't find one.  So what does a resourceful developer do?\r\n\r\nSo I decided to build it myself and here's what I've come up with: a node module called <a href=\"https://github.com/tonyspiro/grunt-mamp\">Grunt MAMP</a>.\r\n\r\nHere's how it works:\r\n\r\ncd into your project root and run:\r\n<pre class=\"prettyprint prettyprinted\"><span class=\"pln\">npm install grunt\r\nnpm install grunt</span><span class=\"pun\">-</span><span class=\"pln\">mamp</span></pre>\r\nCreate your Gruntfile.js from the example shown on the <a href=\"https://www.npmjs.com/package/grunt-mamp\" target=\"_blank\">Grunt MAMP npmjs.org page</a>:\r\n<pre class=\"prettyprint prettyprinted\"><span class=\"str\">\"use strict\"</span><span class=\"pun\">;</span><span class=\"pln\">\r\n \r\n</span><span class=\"kwd\">module</span><span class=\"pun\">.</span><span class=\"pln\">exports </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"kwd\">function</span><span class=\"pun\">(</span><span class=\"pln\">grunt</span><span class=\"pun\">){</span><span class=\"pln\">\r\n \r\n  </span><span class=\"com\">/* !!!! CONFIGURE !!!!\r\n  ====================================================  */</span><span class=\"pln\">\r\n  </span><span class=\"kwd\">var</span><span class=\"pln\"> site_full_path </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"str\">'/your/full/site/path'</span><span class=\"pun\">;</span><span class=\"pln\"> </span><span class=\"com\">// something like /Users/username/sites/mymampsite </span><span class=\"pln\">\r\n  </span><span class=\"kwd\">var</span><span class=\"pln\"> port </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"lit\">8888</span><span class=\"pun\">;</span><span class=\"pln\">\r\n \r\n  </span><span class=\"com\">/* Init\r\n  ====================================================  */</span><span class=\"pln\">\r\n  grunt</span><span class=\"pun\">.</span><span class=\"pln\">initConfig</span><span class=\"pun\">({</span><span class=\"pln\">\r\n \r\n    mamp </span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\r\n      \r\n      configserver </span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\r\n        options </span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\r\n          site_full_path </span><span class=\"pun\">:</span><span class=\"pln\"> site_full_path</span><span class=\"pun\">,</span><span class=\"pln\">\r\n          port </span><span class=\"pun\">:</span><span class=\"pln\"> port\r\n        </span><span class=\"pun\">}</span><span class=\"pln\">\r\n      </span><span class=\"pun\">},</span><span class=\"pln\">\r\n \r\n      startserver </span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\r\n        options </span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\r\n          site_full_path </span><span class=\"pun\">:</span><span class=\"pln\"> site_full_path</span><span class=\"pun\">,</span><span class=\"pln\">\r\n          port </span><span class=\"pun\">:</span><span class=\"pln\"> port\r\n        </span><span class=\"pun\">}</span><span class=\"pln\">\r\n      </span><span class=\"pun\">},</span><span class=\"pln\">\r\n      \r\n      stopserver </span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\r\n      </span><span class=\"pun\">}</span><span class=\"pln\">\r\n    </span><span class=\"pun\">}</span><span class=\"pln\">\r\n \r\n  </span><span class=\"pun\">});</span><span class=\"pln\">\r\n \r\n  grunt</span><span class=\"pun\">.</span><span class=\"pln\">loadNpmTasks</span><span class=\"pun\">(</span><span class=\"str\">'grunt-mamp'</span><span class=\"pun\">);</span><span class=\"pln\">\r\n \r\n  </span><span class=\"com\">// Register tasks  </span><span class=\"pln\">\r\n  grunt</span><span class=\"pun\">.</span><span class=\"pln\">registerTask</span><span class=\"pun\">(</span><span class=\"str\">\"start\"</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"pun\">[</span><span class=\"str\">\"mamp:startserver\"</span><span class=\"pun\">]);</span><span class=\"pln\">\r\n  grunt</span><span class=\"pun\">.</span><span class=\"pln\">registerTask</span><span class=\"pun\">(</span><span class=\"str\">\"stop\"</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"pun\">[</span><span class=\"str\">\"mamp:stopserver\"</span><span class=\"pun\">]);</span><span class=\"pln\">\r\n  grunt</span><span class=\"pun\">.</span><span class=\"pln\">registerTask</span><span class=\"pun\">(</span><span class=\"str\">\"config\"</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"pun\">[</span><span class=\"str\">\"mamp:configserver\"</span><span class=\"pun\">]);</span><span class=\"pln\">\r\n \r\n</span><span class=\"pun\">};</span></pre>\r\nNext, configure your settings to point to your desired path and port.  Then run the following commands:\r\n<pre class=\"prettyprint prettyprinted\"><span class=\"pln\">grunt configure\r\ngrunt start</span></pre>\r\n\r\nWhen you want to shutdown MAMP, just run:\r\n<pre class=\"prettyprint prettyprinted\"><span class=\"pln\">grunt stop</span></pre>\r\n\r\nNow you can configure, start and stop from the terminal!  This makes it so you don't have to go back to your MAMP Application and reconfigure when switching between projects and it's one less thing you have to do in your workflow.\r\n\r\nFind the source code on <a href=\"https://github.com/tonyspiro/grunt-mamp\" target=\"_blank\">github</a> or <a href=\"https://www.npmjs.com/package/grunt-mamp\" target=\"_blank\">npm</a>.\r\n\r\n<strong>One important note</strong>: The config command will replace your MAMP httpd.conf file with the template provided in Grunt MAMP (which is the latest httpd.conf file that ships with MAMP 3.0.6).  If you have any custom configurations for this file, make sure to create a backup and add the appropriate variables to this file to create your own custom Grunt MAMP httpd.conf template.\r\n\r\nIf you have any question or comments, use the comment form below or you can find me on twitter:\r\n<a href=\"http://twitter.com/tonyspiro\" target=\"_blank\">@tonyspiro</a>.",
        "metafields": [
          {
            "object_type": "authors",
            "edit": 1,
            "value": "5712bb5de9c686d006000013",
            "key": "author",
            "title": "Author",
            "type": "object",
            "children": false
          },
          {
            "edit": 1,
            "value": "",
            "key": "hero",
            "title": "Hero",
            "type": "file",
            "children": false
          },
          {
            "edit": 1,
            "value": "",
            "key": "tag",
            "title": "Tag",
            "type": "text",
            "children": false
          },
          {
            "edit": 1,
            "value": "<p><br></p>",
            "key": "teaser",
            "title": "Teaser",
            "type": "html-textarea",
            "children": false
          },
          {
            "edit": 1,
            "value": "2015-02-17",
            "key": "published",
            "title": "Published",
            "type": "date",
            "children": false
          }
        ],
        "type_slug": "posts",
        "created": "2016-03-20T00:33:02.413Z",
        "user_id": "5357ef811693be2118000001",
        "options": null,
        "order": 10,
        "modified": "2016-04-17T17:51:01.471Z",
        "status": "published"
      },
      {
        "_id": "56edefbee6dcdbb570000020",
        "old_id": "56edefbe952f68b570a025d3",
        "bucket": "56edeedd694d9a5e6f000031",
        "slug": "curl-get-post-put-and-delete-using-php",
        "title": "Curl Get, Post, Put and Delete using PHP",
        "content": "I find myself using PHP's curl function a lot especially when woking with APIs and database-driven applications.  Get started by grabbing the PHP class below and adding it to your application.  Find instructions on how to implement the class below the code.\r\n\r\n<pre class=\"prettyprint prettyprinted\"><span class=\"pun\">&lt;?</span><span class=\"pln\">php\r\n\r\n</span><span class=\"kwd\">class</span><span class=\"pln\"> </span><span class=\"typ\">Curl</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\r\n\t\r\n\t</span><span class=\"kwd\">public</span><span class=\"pln\"> </span><span class=\"kwd\">function</span><span class=\"pln\"> </span><span class=\"kwd\">get</span><span class=\"pun\">(</span><span class=\"pln\">$url</span><span class=\"pun\">){</span><span class=\"pln\">\r\n\r\n\t\t$ch </span><span class=\"pun\">=</span><span class=\"pln\"> curl_init</span><span class=\"pun\">(</span><span class=\"pln\">$url</span><span class=\"pun\">);</span><span class=\"pln\">                                                                      \r\n\t\tcurl_setopt</span><span class=\"pun\">(</span><span class=\"pln\">$ch</span><span class=\"pun\">,</span><span class=\"pln\"> CURLOPT_CUSTOMREQUEST</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"str\">\"GET\"</span><span class=\"pun\">);</span><span class=\"pln\">                                                                 \r\n\t\tcurl_setopt</span><span class=\"pun\">(</span><span class=\"pln\">$ch</span><span class=\"pun\">,</span><span class=\"pln\"> CURLOPT_RETURNTRANSFER</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"kwd\">true</span><span class=\"pun\">);</span><span class=\"pln\">                                                                                                                    \r\n\t\t$result </span><span class=\"pun\">=</span><span class=\"pln\"> curl_exec</span><span class=\"pun\">(</span><span class=\"pln\">$ch</span><span class=\"pun\">);</span><span class=\"pln\">\r\n\t\t</span><span class=\"kwd\">return</span><span class=\"pln\"> $result</span><span class=\"pun\">;</span><span class=\"pln\">\r\n\t</span><span class=\"pun\">}</span><span class=\"pln\">\r\n\r\n\t</span><span class=\"kwd\">public</span><span class=\"pln\"> </span><span class=\"kwd\">function</span><span class=\"pln\"> post</span><span class=\"pun\">(</span><span class=\"pln\">$url</span><span class=\"pun\">,</span><span class=\"pln\"> $data_string</span><span class=\"pun\">){</span><span class=\"pln\">\r\n\r\n\t\t$ch </span><span class=\"pun\">=</span><span class=\"pln\"> curl_init</span><span class=\"pun\">(</span><span class=\"pln\">$url</span><span class=\"pun\">);</span><span class=\"pln\">                                                                      \r\n\t\tcurl_setopt</span><span class=\"pun\">(</span><span class=\"pln\">$ch</span><span class=\"pun\">,</span><span class=\"pln\"> CURLOPT_CUSTOMREQUEST</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"str\">\"POST\"</span><span class=\"pun\">);</span><span class=\"pln\"> \r\n\t\tcurl_setopt</span><span class=\"pun\">(</span><span class=\"pln\">$ch</span><span class=\"pun\">,</span><span class=\"pln\"> CURLOPT_FAILONERROR</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"kwd\">true</span><span class=\"pun\">);</span><span class=\"pln\">                                                                    \r\n\t\tcurl_setopt</span><span class=\"pun\">(</span><span class=\"pln\">$ch</span><span class=\"pun\">,</span><span class=\"pln\"> CURLOPT_POSTFIELDS</span><span class=\"pun\">,</span><span class=\"pln\"> $data_string</span><span class=\"pun\">);</span><span class=\"pln\">                                                                  \r\n\t\tcurl_setopt</span><span class=\"pun\">(</span><span class=\"pln\">$ch</span><span class=\"pun\">,</span><span class=\"pln\"> CURLOPT_RETURNTRANSFER</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"kwd\">true</span><span class=\"pun\">);</span><span class=\"pln\"> \r\n\t\tcurl_setopt</span><span class=\"pun\">(</span><span class=\"pln\">$ch</span><span class=\"pun\">,</span><span class=\"pln\"> CURLOPT_HTTPHEADER</span><span class=\"pun\">,</span><span class=\"pln\"> array</span><span class=\"pun\">(</span><span class=\"pln\">                                                                          \r\n\t\t    </span><span class=\"str\">'Content-Type: application/json'</span><span class=\"pun\">,</span><span class=\"pln\">                                                                                \r\n\t\t    </span><span class=\"str\">'Content-Length: '</span><span class=\"pln\"> </span><span class=\"pun\">.</span><span class=\"pln\"> strlen</span><span class=\"pun\">(</span><span class=\"pln\">$data_string</span><span class=\"pun\">))</span><span class=\"pln\">                                                                       \r\n\t\t</span><span class=\"pun\">);</span><span class=\"pln\">                                                                                                                   \r\n\t\t \r\n\t\t$result </span><span class=\"pun\">=</span><span class=\"pln\"> curl_exec</span><span class=\"pun\">(</span><span class=\"pln\">$ch</span><span class=\"pun\">);</span><span class=\"pln\">\r\n\t\t</span><span class=\"kwd\">return</span><span class=\"pln\"> $result</span><span class=\"pun\">;</span><span class=\"pln\">\r\n\t</span><span class=\"pun\">}</span><span class=\"pln\">\r\n\r\n\t</span><span class=\"kwd\">public</span><span class=\"pln\"> </span><span class=\"kwd\">function</span><span class=\"pln\"> put</span><span class=\"pun\">(</span><span class=\"pln\">$url</span><span class=\"pun\">,</span><span class=\"pln\"> $data_string</span><span class=\"pun\">){</span><span class=\"pln\">\r\n\r\n\t\t$ch </span><span class=\"pun\">=</span><span class=\"pln\"> curl_init</span><span class=\"pun\">(</span><span class=\"pln\">$url</span><span class=\"pun\">);</span><span class=\"pln\">                                                                      \r\n\t\tcurl_setopt</span><span class=\"pun\">(</span><span class=\"pln\">$ch</span><span class=\"pun\">,</span><span class=\"pln\"> CURLOPT_CUSTOMREQUEST</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"str\">\"PUT\"</span><span class=\"pun\">);</span><span class=\"pln\"> \r\n\t\tcurl_setopt</span><span class=\"pun\">(</span><span class=\"pln\">$ch</span><span class=\"pun\">,</span><span class=\"pln\"> CURLOPT_FAILONERROR</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"kwd\">true</span><span class=\"pun\">);</span><span class=\"pln\">                                                                    \r\n\t\tcurl_setopt</span><span class=\"pun\">(</span><span class=\"pln\">$ch</span><span class=\"pun\">,</span><span class=\"pln\"> CURLOPT_POSTFIELDS</span><span class=\"pun\">,</span><span class=\"pln\"> $data_string</span><span class=\"pun\">);</span><span class=\"pln\">                                                                  \r\n\t\tcurl_setopt</span><span class=\"pun\">(</span><span class=\"pln\">$ch</span><span class=\"pun\">,</span><span class=\"pln\"> CURLOPT_RETURNTRANSFER</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"kwd\">true</span><span class=\"pun\">);</span><span class=\"pln\"> \r\n\t\tcurl_setopt</span><span class=\"pun\">(</span><span class=\"pln\">$ch</span><span class=\"pun\">,</span><span class=\"pln\"> CURLOPT_HTTPHEADER</span><span class=\"pun\">,</span><span class=\"pln\"> array</span><span class=\"pun\">(</span><span class=\"pln\">                                                                          \r\n\t\t    </span><span class=\"str\">'Content-Type: application/json'</span><span class=\"pun\">,</span><span class=\"pln\">                                                                                \r\n\t\t    </span><span class=\"str\">'Content-Length: '</span><span class=\"pln\"> </span><span class=\"pun\">.</span><span class=\"pln\"> strlen</span><span class=\"pun\">(</span><span class=\"pln\">$data_string</span><span class=\"pun\">))</span><span class=\"pln\">                                                                       \r\n\t\t</span><span class=\"pun\">);</span><span class=\"pln\">                                                                                                                   \r\n\t\t \r\n\t\t$result </span><span class=\"pun\">=</span><span class=\"pln\"> curl_exec</span><span class=\"pun\">(</span><span class=\"pln\">$ch</span><span class=\"pun\">);</span><span class=\"pln\">\r\n\t\t</span><span class=\"kwd\">return</span><span class=\"pln\"> $result</span><span class=\"pun\">;</span><span class=\"pln\">\r\n\t</span><span class=\"pun\">}</span><span class=\"pln\">\r\n\r\n\t</span><span class=\"kwd\">public</span><span class=\"pln\"> </span><span class=\"kwd\">function</span><span class=\"pln\"> </span><span class=\"kwd\">delete</span><span class=\"pun\">(</span><span class=\"pln\">$url</span><span class=\"pun\">,</span><span class=\"pln\"> $data_string</span><span class=\"pun\">){</span><span class=\"pln\">\r\n\r\n\t\t$ch </span><span class=\"pun\">=</span><span class=\"pln\"> curl_init</span><span class=\"pun\">(</span><span class=\"pln\">$url</span><span class=\"pun\">);</span><span class=\"pln\">                                                                      \r\n\t\tcurl_setopt</span><span class=\"pun\">(</span><span class=\"pln\">$ch</span><span class=\"pun\">,</span><span class=\"pln\"> CURLOPT_CUSTOMREQUEST</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"str\">\"DELETE\"</span><span class=\"pun\">);</span><span class=\"pln\"> \r\n\t\tcurl_setopt</span><span class=\"pun\">(</span><span class=\"pln\">$ch</span><span class=\"pun\">,</span><span class=\"pln\"> CURLOPT_FAILONERROR</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"kwd\">true</span><span class=\"pun\">);</span><span class=\"pln\">                                                                    \r\n\t\tcurl_setopt</span><span class=\"pun\">(</span><span class=\"pln\">$ch</span><span class=\"pun\">,</span><span class=\"pln\"> CURLOPT_POSTFIELDS</span><span class=\"pun\">,</span><span class=\"pln\"> $data_string</span><span class=\"pun\">);</span><span class=\"pln\">                                                                  \r\n\t\tcurl_setopt</span><span class=\"pun\">(</span><span class=\"pln\">$ch</span><span class=\"pun\">,</span><span class=\"pln\"> CURLOPT_RETURNTRANSFER</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"kwd\">true</span><span class=\"pun\">);</span><span class=\"pln\"> \r\n\t\tcurl_setopt</span><span class=\"pun\">(</span><span class=\"pln\">$ch</span><span class=\"pun\">,</span><span class=\"pln\"> CURLOPT_HTTPHEADER</span><span class=\"pun\">,</span><span class=\"pln\"> array</span><span class=\"pun\">(</span><span class=\"pln\">                                                                          \r\n\t\t    </span><span class=\"str\">'Content-Type: application/json'</span><span class=\"pun\">,</span><span class=\"pln\">                                                                                \r\n\t\t    </span><span class=\"str\">'Content-Length: '</span><span class=\"pln\"> </span><span class=\"pun\">.</span><span class=\"pln\"> strlen</span><span class=\"pun\">(</span><span class=\"pln\">$data_string</span><span class=\"pun\">))</span><span class=\"pln\">                                                                       \r\n\t\t</span><span class=\"pun\">);</span><span class=\"pln\">                                                                                                                   \r\n\t\t \r\n\t\t$result </span><span class=\"pun\">=</span><span class=\"pln\"> curl_exec</span><span class=\"pun\">(</span><span class=\"pln\">$ch</span><span class=\"pun\">);</span><span class=\"pln\">\r\n\t\t</span><span class=\"kwd\">return</span><span class=\"pln\"> $result</span><span class=\"pun\">;</span><span class=\"pln\">\r\n\t</span><span class=\"pun\">}</span><span class=\"pln\">\r\n\r\n</span><span class=\"pun\">}</span><span class=\"pln\">\r\n\r\n$curl </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"kwd\">new</span><span class=\"pln\"> </span><span class=\"typ\">Curl</span><span class=\"pun\">;</span><span class=\"pln\">\r\n\r\n</span><span class=\"pun\">?&gt;</span></pre>\r\n\r\nTo get Techcrunch from the comfort of your own server just run the following:\r\n<pre class=\"prettyprint prettyprinted\"><span class=\"pun\">&lt;?</span><span class=\"pln\">php\r\n\r\n$url </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"str\">\"http://techcrunch.com/\"</span><span class=\"pun\">;</span><span class=\"pln\">\r\necho $curl</span><span class=\"pun\">-&gt;</span><span class=\"kwd\">get</span><span class=\"pun\">(</span><span class=\"pln\">$url</span><span class=\"pun\">);</span><span class=\"pln\">\r\n\r\n</span><span class=\"pun\">?&gt;</span></pre>\r\n\r\nFor posting to an api, it's as simple as forming a JSON object and posting it to the destination url:\r\n<pre class=\"prettyprint prettyprinted\"><span class=\"pun\">&lt;?</span><span class=\"pln\">php\r\n\r\n$data_string </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"str\">'{\"title\" : \"New App That Lets You Read Techcrunch Articles From A Different Server\", \"content\" : \"This is the content area... you still get a page view in analytics... blah blah blah\"}'</span><span class=\"pun\">;</span><span class=\"pln\">\r\n$url </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"str\">\"http://api.techcrunch.com/\"</span><span class=\"pun\">;</span><span class=\"pln\">\r\necho $curl</span><span class=\"pun\">-&gt;</span><span class=\"pln\">post</span><span class=\"pun\">(</span><span class=\"pln\">$url</span><span class=\"pun\">,</span><span class=\"pln\"> $data_string</span><span class=\"pun\">);</span><span class=\"pln\">\r\n\r\n</span><span class=\"pun\">?&gt;</span></pre>\r\n\r\nHopefully this will return a success response, although it is a fake url, so it probably won't.  But you get the idea.  Let me know in the comments if you have any questions.",
        "metafields": [
          {
            "object_type": "authors",
            "edit": 1,
            "value": "5712bb5de9c686d006000013",
            "key": "author",
            "title": "Author",
            "type": "object",
            "children": false
          },
          {
            "edit": 1,
            "value": "",
            "key": "hero",
            "title": "Hero",
            "type": "file",
            "children": false
          },
          {
            "edit": 1,
            "value": "",
            "key": "tag",
            "title": "Tag",
            "type": "text",
            "children": false
          },
          {
            "edit": 1,
            "value": "<p><br></p>",
            "key": "teaser",
            "title": "Teaser",
            "type": "html-textarea",
            "children": false
          },
          {
            "edit": 1,
            "value": "2014-07-28",
            "key": "published",
            "title": "Published",
            "type": "date",
            "children": false
          }
        ],
        "type_slug": "posts",
        "created": "2016-03-20T00:33:02.411Z",
        "user_id": "5357ef811693be2118000001",
        "options": null,
        "order": 11,
        "modified": "2016-04-17T18:26:34.043Z",
        "status": "published"
      },
      {
        "_id": "56edefbee6dcdbb57000001f",
        "old_id": "56edefbe952f68b570a025d2",
        "bucket": "56edeedd694d9a5e6f000031",
        "slug": "uploading-resizing-images-fly-node-js-express",
        "title": "Uploading and Resizing Images (on the fly) With Node.js and Express",
        "content": "Since I wrote <a href=\"http://tonyspiro.com/uploading-and-resizing-an-image-using-node-js/\">my first post on uploading images with Node.js</a>, a couple things have changed. Express no longer supports the bodyParser method, and I've found a new way to resize images on the fly with the Quickthumb node module. Using this package for image resizing is super easy and useful. To upload images using Node.js and Express, I've enlisted the help of the Formidable module.\r\n\r\nSo lets get started in creating our image upload application using Node.js, Express, Formidable and Quickthumb.\r\n\r\nFirst, make sure you have Node.js installed. Visit the <a href=\"http://nodejs.org\" target=\"_blank\">node.js</a> website for instructions on how to do this.\r\n\r\nUsing your preferred terminal application, cd to the preferred location of your application and create your application folder:\r\n<pre class=\" language-javascript\"><code class=\" language-javascript\">mkdir uploadapp</code></pre>\r\nThen navigate into this folder:\r\n<pre class=\" language-javascript\"><code class=\" language-javascript\">cd uploadapp</code></pre>\r\nNext let's install all of our dependent packages. We'll be installing the Express.js framework, Formidable, Quickthumb and Fs-extra. Run the following commands:\r\n<pre class=\" language-javascript\"><code class=\" language-javascript\">npm install express\r\nnpm install formidable\r\nnpm install quickthumb\r\nnpm install fs<span class=\"token operator\">-</span>extra\r\n</code></pre>\r\nNow that we have our webframework and dependencies, lets setup our server.\r\n<pre class=\" language-javascript\"><code class=\" language-javascript\">vim app<span class=\"token punctuation\">.</span>js</code></pre>\r\nAdd the following to app.js:\r\n<pre class=\" language-javascript\"><code class=\" language-javascript\"><span class=\"token keyword\">var</span> express <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"express\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\r\n    app <span class=\"token operator\">=</span> <span class=\"token function\">express</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\r\n    formidable <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'formidable'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\r\n    util <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'util'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\r\n    fs   <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'fs-extra'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\r\n    qt   <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'quickthumb'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token comment\" spellcheck=\"true\">// Use quickthumb</span>\r\napp<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span>qt<span class=\"token punctuation\">.</span><span class=\"token keyword\">static</span><span class=\"token punctuation\">(</span>__dirname <span class=\"token operator\">+</span> <span class=\"token string\">'/'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\napp<span class=\"token punctuation\">.</span><span class=\"token function\">post</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/upload'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">,</span> res<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\r\n  <span class=\"token keyword\">var</span> form <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">formidable<span class=\"token punctuation\">.</span>IncomingForm</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n  form<span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">,</span> fields<span class=\"token punctuation\">,</span> files<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n    res<span class=\"token punctuation\">.</span><span class=\"token function\">writeHead</span><span class=\"token punctuation\">(</span><span class=\"token number\">200</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token string\">'content-type'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'text/plain'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    res<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token string\">'received upload:\\n\\n'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    res<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span>util<span class=\"token punctuation\">.</span><span class=\"token function\">inspect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>fields<span class=\"token punctuation\">:</span> fields<span class=\"token punctuation\">,</span> files<span class=\"token punctuation\">:</span> files<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n  form<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'end'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>fields<span class=\"token punctuation\">,</span> files<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token comment\" spellcheck=\"true\">/* Temporary location of our uploaded file */</span>\r\n    <span class=\"token keyword\">var</span> temp_path <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>openedFiles<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">;</span>\r\n    <span class=\"token comment\" spellcheck=\"true\">/* The file name of the uploaded file */</span>\r\n    <span class=\"token keyword\">var</span> file_name <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>openedFiles<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">;</span>\r\n    <span class=\"token comment\" spellcheck=\"true\">/* Location where we want to copy the uploaded file */</span>\r\n    <span class=\"token keyword\">var</span> new_location <span class=\"token operator\">=</span> <span class=\"token string\">'uploads/'</span><span class=\"token punctuation\">;</span>\r\n\r\n    fs<span class=\"token punctuation\">.</span><span class=\"token function\">copy</span><span class=\"token punctuation\">(</span>temp_path<span class=\"token punctuation\">,</span> new_location <span class=\"token operator\">+</span> file_name<span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>  \r\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n      <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\r\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"success!\"</span><span class=\"token punctuation\">)</span>\r\n      <span class=\"token punctuation\">}</span>\r\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token comment\" spellcheck=\"true\">// Show the upload form </span>\r\napp<span class=\"token punctuation\">.</span><span class=\"token keyword\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">,</span> res<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\r\n  res<span class=\"token punctuation\">.</span><span class=\"token function\">writeHead</span><span class=\"token punctuation\">(</span><span class=\"token number\">200</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token string\">'Content-Type'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'text/html'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n  <span class=\"token keyword\">var</span> form <span class=\"token operator\">=</span> <span class=\"token string\">'&lt;form action=\"/upload\" enctype=\"multipart/form-data\" method=\"post\"&gt;Add a title: &lt;input name=\"title\" type=\"text\" /&gt;&lt;br&gt;&lt;br&gt;&lt;input multiple=\"multiple\" name=\"upload\" type=\"file\" /&gt;&lt;br&gt;&lt;br&gt;&lt;input type=\"submit\" value=\"Upload\" /&gt;&lt;/form&gt;'</span><span class=\"token punctuation\">;</span>\r\n  res<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span>form<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \r\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \r\napp<span class=\"token punctuation\">.</span><span class=\"token function\">listen</span><span class=\"token punctuation\">(</span><span class=\"token number\">8080</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n</code></pre>\r\nNext inside your terminal start node on the app.js file:\r\n<pre class=\" language-javascript\"><code class=\" language-javascript\">node app<span class=\"token punctuation\">.</span>js</code></pre>\r\nNext, go to http://localhost:8080 and you should now see your form with an input field, a title field and a browse file field. With this, you can pass whatever data you want along with your file, such as a new title, user info, etc. Upload a file and notice it takes you to http://localhost:8080/upload where all of your upload information is available. You would probably want to setup a redirect or upload the file / data through ajax, but this shows you what data is being passed.\r\n\r\nNext go to:\r\n\r\nhttp://localhost:8080/uploads/your-uploaded-file-name\r\n\r\nYou should now see your fullsize uploaded file. Now here comes the fun part. To resize your image on the fly, just add the paramater 'dim' at the end of your url:\r\n\r\nhttp://localhost:8080/uploads/your-uploaded-file-name?dim=200\r\n\r\nYour image will now display at 200 pixels wide and adjust the height proportionately. You can also customize the dim value to reflect the desired width and height of your image. For more options, check out the <a href=\"https://github.com/zivester/node-quickthumb\" target=\"_blank\">quickthumb node module on github</a>.\r\n\r\nNote: Quick Thumb requires Image Magick. If you get an error trying to upload the image, Image Magick may need to be installed on your machine. On a mac you can run the following command to install via brew:\r\n<pre class=\" language-javascript\"><code class=\" language-javascript\">brew install imagemagick</code></pre>\r\nI hope you found this helpful. Hit me up on twitter if you have any questions/comments: <a href=\"http://twitter.com/tonyspiro\" target=\"_blank\">@tonyspiro</a>.",
        "metafields": [
          {
            "object_type": "authors",
            "edit": 1,
            "value": "5712bb5de9c686d006000013",
            "key": "author",
            "title": "Author",
            "type": "object",
            "children": false
          },
          {
            "edit": 1,
            "value": "",
            "key": "hero",
            "title": "Hero",
            "type": "file",
            "children": false
          },
          {
            "edit": 1,
            "value": "",
            "key": "tag",
            "title": "Tag",
            "type": "text",
            "children": false
          },
          {
            "edit": 1,
            "value": "<p><br></p>",
            "key": "teaser",
            "title": "Teaser",
            "type": "html-textarea",
            "children": false
          },
          {
            "edit": 1,
            "value": "2014-06-29",
            "key": "published",
            "title": "Published",
            "type": "date",
            "children": false
          },
          {
            "edit": 1,
            "value": 612,
            "key": "wp-id",
            "title": "WP ID",
            "type": "text",
            "children": false
          }
        ],
        "type_slug": "posts",
        "created": "2016-03-20T00:33:02.411Z",
        "user_id": "5357ef811693be2118000001",
        "options": null,
        "order": 12,
        "modified": "2016-04-17T23:19:05.595Z",
        "status": "published"
      },
      {
        "_id": "56edefbee6dcdbb57000001e",
        "old_id": "56edefbe952f68b570a025d1",
        "bucket": "56edeedd694d9a5e6f000031",
        "slug": "sublime-text-key-binding-to-move-multiple-lines",
        "title": "Sublime Text Key Binding to Move Multiple Lines",
        "content": "I love of Sublime Text 3 because of how easy it is to customize it to your specific needs.  With key-bindings and plugins, I got to a point where it was almost exactly what I wanted out of my text editor.  Almost. \r\n\r\nThe one feature that I really wanted to use was to move multiple lines by pressing arrow up or down and a specific key.  We'll I found it and here it is.  Add the following to your User Key Bindings file array:\r\n\r\n<pre><code class=\"language-json\">{ \"keys\": [\"alt+up\"], \"command\": \"move\", \"args\": {\"by\": \"stops\", \"empty_line\": true, \"forward\": false} },\r\n{ \"keys\": [\"alt+down\"], \"command\": \"move\", \"args\": {\"by\": \"stops\", \"empty_line\": true, \"forward\": true} }\r\n</code></pre>",
        "metafields": [
          {
            "object_type": "authors",
            "edit": 1,
            "value": "5712bb5de9c686d006000013",
            "key": "author",
            "title": "Author",
            "type": "object",
            "children": false
          },
          {
            "edit": 1,
            "value": "",
            "key": "hero",
            "title": "Hero",
            "type": "file",
            "children": false
          },
          {
            "edit": 1,
            "value": "",
            "key": "tag",
            "title": "Tag",
            "type": "text",
            "children": false
          },
          {
            "edit": 1,
            "value": "<p><br></p>",
            "key": "teaser",
            "title": "Teaser",
            "type": "html-textarea",
            "children": false
          },
          {
            "edit": 1,
            "value": "2014-05-29",
            "key": "published",
            "title": "Published",
            "type": "date",
            "children": false
          }
        ],
        "type_slug": "posts",
        "created": "2016-03-20T00:33:02.410Z",
        "user_id": "5357ef811693be2118000001",
        "options": null,
        "order": 13,
        "modified": "2016-04-17T22:47:32.607Z",
        "status": "published"
      },
      {
        "_id": "56edefbee6dcdbb57000001d",
        "old_id": "56edefbe952f68b570a025d0",
        "bucket": "56edeedd694d9a5e6f000031",
        "slug": "video-js-wait-video-load-playing",
        "title": "Video JS: Wait For Video To Load Before Playing",
        "content": "Just because I've used this code a lot and find myself going back to research it often, here's a snippet of Javascript that helps you to load your video to a certain point before playing your video using the Video JS javascript player:\r\n\r\n<pre class=\"prettyprint prettyprinted\"><span class=\"com\">&lt;!-- include your dependencies --&gt;</span><span class=\"pln\">\r\n</span><span class=\"tag\">&lt;link</span><span class=\"pln\"> </span><span class=\"atn\">href</span><span class=\"pun\">=</span><span class=\"atv\">\"//vjs.zencdn.net/4.5/video-js.css\"</span><span class=\"pln\"> </span><span class=\"atn\">rel</span><span class=\"pun\">=</span><span class=\"atv\">\"stylesheet\"</span><span class=\"tag\">&gt;</span><span class=\"pln\">\r\n</span><span class=\"tag\">&lt;script</span><span class=\"pln\"> </span><span class=\"atn\">src</span><span class=\"pun\">=</span><span class=\"atv\">\"//vjs.zencdn.net/4.5/video.js\"</span><span class=\"tag\">&gt;&lt;/script&gt;</span><span class=\"pln\">\r\n</span><span class=\"tag\">&lt;video</span><span class=\"pln\"> </span><span class=\"atn\">id</span><span class=\"pun\">=</span><span class=\"atv\">\"video_id\"</span><span class=\"pln\"> </span><span class=\"atn\">class</span><span class=\"pun\">=</span><span class=\"atv\">\"hidden video-js vjs-default-skin\"</span><span class=\"pln\"> </span><span class=\"atn\">width</span><span class=\"pun\">=</span><span class=\"atv\">\"100%\"</span><span class=\"pln\"> </span><span class=\"atn\">height</span><span class=\"pun\">=</span><span class=\"atv\">\"600\"</span><span class=\"tag\">&gt;</span><span class=\"pln\">\r\n</span><span class=\"tag\">&lt;source</span><span class=\"pln\"> </span><span class=\"atn\">src</span><span class=\"pun\">=</span><span class=\"atv\">\"http://my-video-file-path.com/video.mp4\"</span><span class=\"pln\"> </span><span class=\"atn\">type</span><span class=\"pun\">=</span><span class=\"atv\">'video/mp4'</span><span class=\"pln\"> </span><span class=\"tag\">/&gt;</span><span class=\"pln\">\r\n</span><span class=\"tag\">&lt;source</span><span class=\"pln\"> </span><span class=\"atn\">src</span><span class=\"pun\">=</span><span class=\"atv\">\"http://my-video-file-path.com/video.webm\"</span><span class=\"pln\"> </span><span class=\"atn\">type</span><span class=\"pun\">=</span><span class=\"atv\">'video/webm'</span><span class=\"pln\"> </span><span class=\"tag\">/&gt;</span><span class=\"pln\">\r\n</span><span class=\"tag\">&lt;/video&gt;</span><span class=\"pln\">\r\n</span><span class=\"tag\">&lt;script&gt;</span><span class=\"pln\">\r\nvideojs(\"video_id\").ready(function(){\r\n  var myPlayer = this;\r\n  /// Wait until player half way thru load progress then play\r\n  myPlayer.on(\"progress\", function() {\r\n    if(myPlayer.bufferedPercent()&gt;.5){\r\n      myPlayer.play();\r\n    }\r\n  }, false);\r\n});\r\n</span><span class=\"tag\">&lt;script&gt;</span></pre>",
        "metafields": [
          {
            "object_type": "authors",
            "edit": 1,
            "value": "5712bb5de9c686d006000013",
            "key": "author",
            "title": "Author",
            "type": "object",
            "children": false
          },
          {
            "edit": 1,
            "value": "",
            "key": "hero",
            "title": "Hero",
            "type": "file",
            "children": false
          },
          {
            "edit": 1,
            "value": "",
            "key": "tag",
            "title": "Tag",
            "type": "text",
            "children": false
          },
          {
            "edit": 1,
            "value": "<p><br></p>",
            "key": "teaser",
            "title": "Teaser",
            "type": "html-textarea",
            "children": false
          },
          {
            "edit": 1,
            "value": "2014-05-07",
            "key": "published",
            "title": "Published",
            "type": "date",
            "children": false
          }
        ],
        "type_slug": "posts",
        "created": "2016-03-20T00:33:02.409Z",
        "user_id": "5357ef811693be2118000001",
        "options": null,
        "order": 14,
        "modified": "2016-04-17T18:28:08.704Z",
        "status": "published"
      },
      {
        "_id": "56edefbee6dcdbb57000001c",
        "old_id": "56edefbe952f68b570a025cf",
        "bucket": "56edeedd694d9a5e6f000031",
        "slug": "new-gravatar",
        "title": "New Gravatar",
        "content": "I've recently updated my gravatar / avatar with an illustrated version of myself. &nbsp;It was done by the awesome illustrator and web designer at <a href=\"http://brandhatchery.com\" target=\"_blank\">The Brand Hatchery</a>&nbsp;<a href=\"http://theblakewright.com\" target=\"_blank\">Blake Wright</a>&nbsp;and&nbsp;is based on&nbsp;a photograph taken in San Francisco.&nbsp;The sleeveless shirt is&nbsp;actually&nbsp;my beautiful(ly Bonnie looking) fiance's hand on my shoulder. &nbsp;You can see how this avatar took shape&nbsp;below.\r\n\r\n<a href=\"http://tonyspiro.com/wp-content/uploads/2014/05/Screen-Shot-2014-04-30-at-10.59.59-AM.png\"><img class=\"alignnone size-full wp-image-574\" src=\"http://tonyspiro.com/wp-content/uploads/2014/05/495919c4c91711e3babf0002c9d41d12_8-1.jpg\" alt=\"495919c4c91711e3babf0002c9d41d12_8 (1)\" width=\"640\" height=\"640\"></a>\r\n\r\n<a href=\"http://tonyspiro.com/wp-content/uploads/2014/05/Screen-Shot-2014-04-30-at-10.59.59-AM.png\"><img class=\"alignnone size-full wp-image-570\" src=\"http://tonyspiro.com/wp-content/uploads/2014/05/Screen-Shot-2014-04-30-at-10.59.59-AM.png\" alt=\"Screen Shot 2014-04-30 at 10.59.59 AM\" width=\"597\" height=\"710\"></a>\r\n\r\nThe (somewhat made up) code reflected in my glasses:\r\n\r\n<a href=\"http://tonyspiro.com/wp-content/uploads/2014/05/Screen-Shot-2014-04-30-at-11.18.22-AM.png\"><img class=\"alignnone size-full wp-image-571\" src=\"http://tonyspiro.com/wp-content/uploads/2014/05/Screen-Shot-2014-04-30-at-11.18.22-AM.png\" alt=\"Screen Shot 2014-04-30 at 11.18.22 AM\" width=\"653\" height=\"389\"></a>\r\n\r\n<a href=\"http://tonyspiro.com/wp-content/uploads/2014/05/TONY.gif\"><img class=\"alignnone size-full wp-image-572\" src=\"http://tonyspiro.com/wp-content/uploads/2014/05/TONY.gif\" alt=\"TONY\" width=\"450\" height=\"529\"></a>",
        "metafields": [
          {
            "object_type": "authors",
            "edit": 1,
            "value": "5712bb5de9c686d006000013",
            "key": "author",
            "title": "Author",
            "type": "object",
            "children": false
          },
          {
            "edit": 1,
            "value": "",
            "key": "hero",
            "title": "Hero",
            "type": "file",
            "children": false
          },
          {
            "edit": 1,
            "value": "",
            "key": "tag",
            "title": "Tag",
            "type": "text",
            "children": false
          },
          {
            "edit": 1,
            "value": "<p><br></p>",
            "key": "teaser",
            "title": "Teaser",
            "type": "html-textarea",
            "children": false
          },
          {
            "edit": 1,
            "value": "2014-05-03",
            "key": "published",
            "title": "Published",
            "type": "date",
            "children": false
          }
        ],
        "type_slug": "posts",
        "created": "2016-03-20T00:33:02.408Z",
        "user_id": "5357ef811693be2118000001",
        "options": null,
        "order": 15,
        "modified": "2016-04-17T18:28:45.621Z",
        "status": "published"
      },
      {
        "_id": "56edefbee6dcdbb57000001b",
        "old_id": "56edefbe952f68b570a025ce",
        "bucket": "56edeedd694d9a5e6f000031",
        "slug": "links-auditor-a-wordpress-plugin-that-helps-you-manage-htaccess-redirects-for-your-site",
        "title": "Links Auditor: A WordPress Plugin That Helps You Manage .htaccess Redirects For Your Site",
        "content": "<strong>UPDATE: This now automatically redirects your old links to new links, no .htaccess editing necessary.</strong>\r\n\r\nCheck out this WordPress plugin I put together to help manage .htaccess redirects. &nbsp;<span style=\"color: #444444;\">Links Auditor is a great solution&nbsp;for when you are creating a new site for a client and need to manage all of the redirects from the old site to the new one.</span>\r\n\r\nCheck out the github repo (fork it!):\r\n\r\n<a href=\"https://github.com/tonyspiro/links-auditor\" target=\"_blank\">https://github.com/tonyspiro/links-auditor</a>\r\n\r\nOr download from the WP plugins page:\r\n\r\n<a href=\"http://wordpress.org/plugins/links-auditor/\" target=\"_blank\">http://wordpress.org/plugins/links-auditor/</a>",
        "metafields": [
          {
            "object_type": "authors",
            "edit": 1,
            "value": "5712bb5de9c686d006000013",
            "key": "author",
            "title": "Author",
            "type": "object",
            "children": false
          },
          {
            "edit": 1,
            "value": "",
            "key": "hero",
            "title": "Hero",
            "type": "file",
            "children": false
          },
          {
            "edit": 1,
            "value": "",
            "key": "tag",
            "title": "Tag",
            "type": "text",
            "children": false
          },
          {
            "edit": 1,
            "value": "<p><br></p>",
            "key": "teaser",
            "title": "Teaser",
            "type": "html-textarea",
            "children": false
          },
          {
            "edit": 1,
            "value": "2014-05-03",
            "key": "published",
            "title": "Published",
            "type": "date",
            "children": false
          }
        ],
        "type_slug": "posts",
        "created": "2016-03-20T00:33:02.408Z",
        "user_id": "5357ef811693be2118000001",
        "options": null,
        "order": 16,
        "modified": "2016-04-17T18:29:31.539Z",
        "status": "published"
      },
      {
        "_id": "56edefbee6dcdbb57000001a",
        "old_id": "56edefbe952f68b570a025cd",
        "bucket": "56edeedd694d9a5e6f000031",
        "slug": "dynamic-image-a-jquery-plugin-that-progressively-resizes-your-images-based-on-browser-size",
        "title": "Dynamic Image: A Jquery Plugin that Progressively Resizes Your Images Based on Browser Size",
        "content": "You can <a href=\"https://github.com/tonyspiro/dynamic-image\">view this plugin on github</a>.\r\n\r\nYou can <a href=\"http://tonyspiro.com/dev/dynamic-image/\">view a demo here</a>.\r\n\r\nDynamic Image is a JQuery plugin that dynamically adjusts the source of images for different browser widths and progressively adds them into the page. Just start with three image sizes and it loads the images in order of size (small to large) when they are fully loaded into the page:\r\n\r\n1. Src Version\r\n2. Mobile Version\r\n3. Tablet Version\r\n4. Full Version\r\n\r\nThis creates a \"blurr\" to \"in focus\" effect which is a better alternative than longer loading times and visually loading down a large image.\r\n\r\nPlus, it will serve the correct image size to the user based on their browser size, thus eliminating unnecessarily large images and slow loading for mobile devices.\r\n\r\nEasy to use:\r\n<pre class=\"prettyprint prettyprinted\"><span class=\"tag\">&lt;html&gt;</span><span class=\"pln\">\r\n</span><span class=\"tag\">&lt;head&gt;</span><span class=\"pln\">\r\n</span><span class=\"tag\">&lt;/head&gt;</span><span class=\"pln\">\r\n</span><span class=\"tag\">&lt;body&gt;</span><span class=\"pln\">\r\n</span><span class=\"tag\">&lt;img</span><span class=\"pln\"> </span><span class=\"atn\">class</span><span class=\"pun\">=</span><span class=\"atv\">\"dynamic-image\"</span><span class=\"pln\"> </span><span class=\"atn\">src</span><span class=\"pun\">=</span><span class=\"atv\">\"http://tonyspiro.com/wp-content/uploads/2014/02/gretch-500x500.jpg\"</span><span class=\"pln\"> </span><span class=\"atn\">img-mobile</span><span class=\"pun\">=</span><span class=\"atv\">\"http://tonyspiro.com/wp-content/uploads/2014/02/gretch-500x500.jpg\"</span><span class=\"pln\"> </span><span class=\"atn\">img-tablet</span><span class=\"pun\">=</span><span class=\"atv\">\"http://tonyspiro.com/wp-content/uploads/2014/02/gretch-1000x1000.jpg\"</span><span class=\"pln\"> </span><span class=\"atn\">img-full</span><span class=\"pun\">=</span><span class=\"atv\">\"http://tonyspiro.com/wp-content/uploads/2014/02/gretch.jpg\"</span><span class=\"pln\"> </span><span class=\"tag\">/&gt;</span><span class=\"pln\">\r\n</span><span class=\"tag\">&lt;script</span><span class=\"pln\"> </span><span class=\"atn\">src</span><span class=\"pun\">=</span><span class=\"atv\">'//ajax.googleapis.com/ajax/libs/jquery/1.10.2/jquery.min.js'</span><span class=\"tag\">&gt;&lt;/script&gt;</span><span class=\"pln\">\r\n</span><span class=\"tag\">&lt;script</span><span class=\"pln\"> </span><span class=\"atn\">src</span><span class=\"pun\">=</span><span class=\"atv\">'dynamic-image.js'</span><span class=\"tag\">&gt;&lt;/script&gt;</span><span class=\"pln\">\r\n</span><span class=\"tag\">&lt;script&gt;</span><span class=\"pln\">\r\n$</span><span class=\"pun\">(</span><span class=\"kwd\">function</span><span class=\"pun\">(){</span><span class=\"pln\">\r\n$</span><span class=\"pun\">(</span><span class=\"str\">\".dynamic-image\"</span><span class=\"pun\">).</span><span class=\"pln\">dynamicImage</span><span class=\"pun\">();</span><span class=\"pln\">\r\n</span><span class=\"pun\">});</span><span class=\"pln\">\r\n</span><span class=\"tag\">&lt;/script&gt;</span><span class=\"pln\">\r\n</span><span class=\"tag\">&lt;/body&gt;</span><span class=\"pln\">\r\n</span><span class=\"tag\">&lt;/html&gt;</span></pre>\r\nUnder the hood of dynamic-image.js:\r\n<pre class=\"prettyprint prettyprinted\"><span class=\"pun\">(</span><span class=\"kwd\">function</span><span class=\"pun\">(</span><span class=\"pln\"> $ </span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\r\n\r\n    $</span><span class=\"pun\">.</span><span class=\"pln\">fn</span><span class=\"pun\">.</span><span class=\"pln\">dynamicImage </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"kwd\">function</span><span class=\"pun\">()</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\r\n\r\n\t\t</span><span class=\"kwd\">var</span><span class=\"pln\"> num </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"lit\">0</span><span class=\"pun\">;</span><span class=\"pln\">\r\n\r\n        </span><span class=\"kwd\">return</span><span class=\"pln\"> </span><span class=\"kwd\">this</span><span class=\"pun\">.</span><span class=\"pln\">each</span><span class=\"pun\">(</span><span class=\"kwd\">function</span><span class=\"pun\">(){</span><span class=\"pln\">\r\n\r\n            </span><span class=\"kwd\">var</span><span class=\"pln\"> windowWidth </span><span class=\"pun\">=</span><span class=\"pln\"> $</span><span class=\"pun\">(</span><span class=\"pln\">window</span><span class=\"pun\">).</span><span class=\"pln\">width</span><span class=\"pun\">();</span><span class=\"pln\">\r\n\r\n\t\t\t</span><span class=\"kwd\">var</span><span class=\"pln\"> imgFull </span><span class=\"pun\">=</span><span class=\"pln\"> $</span><span class=\"pun\">(</span><span class=\"kwd\">this</span><span class=\"pun\">).</span><span class=\"pln\">attr</span><span class=\"pun\">(</span><span class=\"str\">\"img-full\"</span><span class=\"pun\">);</span><span class=\"pln\">\r\n\t\t\t</span><span class=\"kwd\">var</span><span class=\"pln\"> imgTablet </span><span class=\"pun\">=</span><span class=\"pln\"> $</span><span class=\"pun\">(</span><span class=\"kwd\">this</span><span class=\"pun\">).</span><span class=\"pln\">attr</span><span class=\"pun\">(</span><span class=\"str\">\"img-tablet\"</span><span class=\"pun\">);</span><span class=\"pln\">\r\n\t\t\t</span><span class=\"kwd\">var</span><span class=\"pln\"> imgMobile </span><span class=\"pun\">=</span><span class=\"pln\"> $</span><span class=\"pun\">(</span><span class=\"kwd\">this</span><span class=\"pun\">).</span><span class=\"pln\">attr</span><span class=\"pun\">(</span><span class=\"str\">\"img-mobile\"</span><span class=\"pun\">);</span><span class=\"pln\">\r\n\t\t\t</span><span class=\"kwd\">var</span><span class=\"pln\"> type </span><span class=\"pun\">=</span><span class=\"pln\"> $</span><span class=\"pun\">(</span><span class=\"kwd\">this</span><span class=\"pun\">).</span><span class=\"pln\">attr</span><span class=\"pun\">(</span><span class=\"str\">\"img-type\"</span><span class=\"pun\">);</span><span class=\"pln\">\r\n\r\n\t\t\t$</span><span class=\"pun\">(</span><span class=\"kwd\">this</span><span class=\"pun\">).</span><span class=\"pln\">addClass</span><span class=\"pun\">(</span><span class=\"str\">\"dynamic-image-\"</span><span class=\"pln\"> </span><span class=\"pun\">+</span><span class=\"pln\"> num</span><span class=\"pun\">);</span><span class=\"pln\">\r\n\r\n\t\t\t</span><span class=\"kwd\">var</span><span class=\"pln\"> id </span><span class=\"pun\">=</span><span class=\"pln\"> num</span><span class=\"pun\">;</span><span class=\"pln\">\r\n\r\n\t\t\t</span><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"pln\">type</span><span class=\"pun\">==</span><span class=\"str\">\"background\"</span><span class=\"pun\">){</span><span class=\"pln\"> \r\n\r\n\t\t\t\t$</span><span class=\"pun\">(</span><span class=\"kwd\">this</span><span class=\"pun\">).</span><span class=\"pln\">css</span><span class=\"pun\">(</span><span class=\"str\">\"background-image\"</span><span class=\"pun\">,</span><span class=\"str\">\"url(\"</span><span class=\"pln\"> </span><span class=\"pun\">+</span><span class=\"pln\"> imgMobile </span><span class=\"pun\">+</span><span class=\"pln\"> </span><span class=\"str\">\")\"</span><span class=\"pun\">);</span><span class=\"pln\">\r\n\r\n\t\t\t</span><span class=\"pun\">}</span><span class=\"pln\"> </span><span class=\"kwd\">else</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\r\n\r\n\t\t\t\t$</span><span class=\"pun\">(</span><span class=\"kwd\">this</span><span class=\"pun\">).</span><span class=\"pln\">attr</span><span class=\"pun\">(</span><span class=\"str\">\"src\"</span><span class=\"pun\">,</span><span class=\"pln\"> imgMobile</span><span class=\"pun\">);</span><span class=\"pln\">\r\n\r\n\t\t\t</span><span class=\"pun\">}</span><span class=\"pln\">\r\n\r\n\t\t\t</span><span class=\"com\">//// If smaller than mobile landscape</span><span class=\"pln\">\r\n\t\t\t</span><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"pln\">windowWidth</span><span class=\"pun\">&lt;</span><span class=\"lit\">500</span><span class=\"pun\">){</span><span class=\"pln\">\r\n\t\t\t\t</span><span class=\"kwd\">return</span><span class=\"pln\"> </span><span class=\"kwd\">false</span><span class=\"pun\">;</span><span class=\"pln\">\r\n\t\t\t\tclearInterval</span><span class=\"pun\">(</span><span class=\"pln\">checkForImages</span><span class=\"pun\">);</span><span class=\"pln\">\r\n\t\t\t</span><span class=\"pun\">}</span><span class=\"pln\">\r\n\r\n\t\t\t</span><span class=\"kwd\">if</span><span class=\"pun\">(!</span><span class=\"pln\">$</span><span class=\"pun\">(</span><span class=\"str\">\"#cacheTablet\"</span><span class=\"pln\"> </span><span class=\"pun\">+</span><span class=\"pln\"> id</span><span class=\"pun\">).</span><span class=\"pln\">length</span><span class=\"pun\">)</span><span class=\"pln\"> $</span><span class=\"pun\">(</span><span class=\"str\">\"body\"</span><span class=\"pun\">).</span><span class=\"pln\">prepend</span><span class=\"pun\">(</span><span class=\"str\">'&lt;img id=\"cacheTablet'</span><span class=\"pln\">  </span><span class=\"pun\">+</span><span class=\"pln\"> id  </span><span class=\"pun\">+</span><span class=\"pln\"> </span><span class=\"str\">'\" style=\"position: fixed; width: 0; height: 0; top: - 1000px;\" src=\"'</span><span class=\"pln\"> </span><span class=\"pun\">+</span><span class=\"pln\"> imgTablet </span><span class=\"pun\">+</span><span class=\"pln\"> </span><span class=\"str\">'\" /&gt;'</span><span class=\"pun\">);</span><span class=\"pln\">\r\n\t\t\t</span><span class=\"kwd\">if</span><span class=\"pun\">(!</span><span class=\"pln\">$</span><span class=\"pun\">(</span><span class=\"str\">\"#cacheFull\"</span><span class=\"pln\"> </span><span class=\"pun\">+</span><span class=\"pln\"> id</span><span class=\"pun\">).</span><span class=\"pln\">length</span><span class=\"pun\">)</span><span class=\"pln\"> $</span><span class=\"pun\">(</span><span class=\"str\">\"body\"</span><span class=\"pun\">).</span><span class=\"pln\">prepend</span><span class=\"pun\">(</span><span class=\"str\">'&lt;img id=\"cacheFull'</span><span class=\"pln\">  </span><span class=\"pun\">+</span><span class=\"pln\"> id  </span><span class=\"pun\">+</span><span class=\"pln\"> </span><span class=\"str\">'\" style=\"position: fixed; width: 0; height: 0; top: - 1000px;\" src=\"'</span><span class=\"pln\"> </span><span class=\"pun\">+</span><span class=\"pln\"> imgFull </span><span class=\"pun\">+</span><span class=\"pln\"> </span><span class=\"str\">'\" /&gt;'</span><span class=\"pun\">);</span><span class=\"pln\">\r\n\r\n\t\t\t</span><span class=\"kwd\">var</span><span class=\"pln\"> checkForImages </span><span class=\"pun\">=</span><span class=\"pln\"> setInterval</span><span class=\"pun\">(</span><span class=\"kwd\">function</span><span class=\"pun\">(){</span><span class=\"pln\">\r\n\r\n\t\t\t\t</span><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"pln\">$</span><span class=\"pun\">(</span><span class=\"str\">'#cacheTablet'</span><span class=\"pln\"> </span><span class=\"pun\">+</span><span class=\"pln\"> id</span><span class=\"pun\">).</span><span class=\"kwd\">get</span><span class=\"pun\">(</span><span class=\"lit\">0</span><span class=\"pun\">).</span><span class=\"pln\">complete</span><span class=\"pun\">){</span><span class=\"pln\">\r\n\r\n\t\t\t\t\t</span><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"pln\">type</span><span class=\"pun\">==</span><span class=\"str\">\"background\"</span><span class=\"pun\">){</span><span class=\"pln\"> \r\n\r\n\t\t\t\t\t\t$</span><span class=\"pun\">(</span><span class=\"str\">\".dynamic-image-\"</span><span class=\"pln\"> </span><span class=\"pun\">+</span><span class=\"pln\"> id</span><span class=\"pun\">).</span><span class=\"pln\">css</span><span class=\"pun\">(</span><span class=\"str\">\"background-image\"</span><span class=\"pun\">,</span><span class=\"str\">\"url(\"</span><span class=\"pln\"> </span><span class=\"pun\">+</span><span class=\"pln\"> imgTablet </span><span class=\"pun\">+</span><span class=\"pln\"> </span><span class=\"str\">\")\"</span><span class=\"pun\">);</span><span class=\"pln\">\r\n\r\n\t\t\t\t\t</span><span class=\"pun\">}</span><span class=\"pln\"> </span><span class=\"kwd\">else</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\r\n\r\n\t\t\t\t\t\t$</span><span class=\"pun\">(</span><span class=\"str\">\".dynamic-image-\"</span><span class=\"pln\"> </span><span class=\"pun\">+</span><span class=\"pln\"> id</span><span class=\"pun\">).</span><span class=\"pln\">attr</span><span class=\"pun\">(</span><span class=\"str\">\"src\"</span><span class=\"pun\">,</span><span class=\"pln\"> imgTablet</span><span class=\"pun\">);</span><span class=\"pln\">\r\n\r\n\t\t\t\t\t</span><span class=\"pun\">}</span><span class=\"pln\">\r\n\r\n\t\t\t\t\t</span><span class=\"com\">//// If smaller than desktop but larger than mobile</span><span class=\"pln\">\r\n\t\t\t\t\t</span><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"pln\">windowWidth</span><span class=\"pun\">&gt;</span><span class=\"lit\">500</span><span class=\"pln\"> </span><span class=\"pun\">&amp;&amp;</span><span class=\"pln\"> windowWidth</span><span class=\"pun\">&lt;</span><span class=\"lit\">770</span><span class=\"pun\">){</span><span class=\"pln\">\r\n\t\t\t\t\t\tclearInterval</span><span class=\"pun\">(</span><span class=\"pln\">checkForImages</span><span class=\"pun\">);</span><span class=\"pln\">\r\n\t\t\t\t\t\t</span><span class=\"kwd\">return</span><span class=\"pln\"> </span><span class=\"kwd\">false</span><span class=\"pun\">;</span><span class=\"pln\">\r\n\t\t\t\t\t</span><span class=\"pun\">}</span><span class=\"pln\">\r\n\t\t\t\t</span><span class=\"pun\">}</span><span class=\"pln\">\r\n\r\n\t\t\t\t</span><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"pln\">$</span><span class=\"pun\">(</span><span class=\"str\">'#cacheFull'</span><span class=\"pln\"> </span><span class=\"pun\">+</span><span class=\"pln\"> id</span><span class=\"pun\">).</span><span class=\"kwd\">get</span><span class=\"pun\">(</span><span class=\"lit\">0</span><span class=\"pun\">).</span><span class=\"pln\">complete</span><span class=\"pun\">){</span><span class=\"pln\">\r\n\r\n\t\t\t\t\t</span><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"pln\">type</span><span class=\"pun\">==</span><span class=\"str\">\"background\"</span><span class=\"pun\">){</span><span class=\"pln\"> \r\n\r\n\t\t\t\t\t\t$</span><span class=\"pun\">(</span><span class=\"str\">\".dynamic-image-\"</span><span class=\"pln\"> </span><span class=\"pun\">+</span><span class=\"pln\"> id</span><span class=\"pun\">).</span><span class=\"pln\">css</span><span class=\"pun\">(</span><span class=\"str\">\"background-image\"</span><span class=\"pun\">,</span><span class=\"str\">\"url(\"</span><span class=\"pln\"> </span><span class=\"pun\">+</span><span class=\"pln\"> imgFull </span><span class=\"pun\">+</span><span class=\"pln\"> </span><span class=\"str\">\")\"</span><span class=\"pun\">);</span><span class=\"pln\">\r\n\r\n\t\t\t\t\t</span><span class=\"pun\">}</span><span class=\"pln\"> </span><span class=\"kwd\">else</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\r\n\r\n\t\t\t\t\t\t$</span><span class=\"pun\">(</span><span class=\"str\">\".dynamic-image-\"</span><span class=\"pln\"> </span><span class=\"pun\">+</span><span class=\"pln\"> id</span><span class=\"pun\">).</span><span class=\"pln\">attr</span><span class=\"pun\">(</span><span class=\"str\">\"src\"</span><span class=\"pun\">,</span><span class=\"pln\"> imgFull</span><span class=\"pun\">);</span><span class=\"pln\">\r\n\r\n\t\t\t\t\t</span><span class=\"pun\">}</span><span class=\"pln\">\r\n\r\n\t\t\t\t\tclearInterval</span><span class=\"pun\">(</span><span class=\"pln\">checkForImages</span><span class=\"pun\">);</span><span class=\"pln\">\r\n\t\t\t\t</span><span class=\"pun\">}</span><span class=\"pln\">\r\n\r\n\t\t\t</span><span class=\"pun\">},</span><span class=\"pln\"> </span><span class=\"lit\">100</span><span class=\"pun\">);</span><span class=\"pln\">\r\n\r\n\t\t\tnum</span><span class=\"pun\">++;</span><span class=\"pln\">\r\n        </span><span class=\"pun\">});</span><span class=\"pln\">\r\n\r\n    </span><span class=\"pun\">};</span><span class=\"pln\">\r\n\r\n</span><span class=\"pun\">}(</span><span class=\"pln\"> jQuery </span><span class=\"pun\">));</span></pre>\r\nView a demo here:\r\n<a href=\"http://tonyspiro.com/dev/dynamic-image/\" target=\"_blank\">http://tonyspiro.com/dev/dynamic-image/</a>\r\n\r\nView on github:\r\n<a href=\"https://github.com/tonyspiro/dynamic-image/\" target=\"_blank\">https://github.com/tonyspiro/dynamic-image/</a>",
        "metafields": [
          {
            "object_type": "authors",
            "edit": 1,
            "value": "5712bb5de9c686d006000013",
            "key": "author",
            "title": "Author",
            "type": "object",
            "children": false
          },
          {
            "edit": 1,
            "value": "",
            "key": "hero",
            "title": "Hero",
            "type": "file",
            "children": false
          },
          {
            "edit": 1,
            "value": "",
            "key": "tag",
            "title": "Tag",
            "type": "text",
            "children": false
          },
          {
            "edit": 1,
            "value": "<p><br></p>",
            "key": "teaser",
            "title": "Teaser",
            "type": "html-textarea",
            "children": false
          },
          {
            "edit": 1,
            "value": "2014-02-06",
            "key": "published",
            "title": "Published",
            "type": "date",
            "children": false
          }
        ],
        "type_slug": "posts",
        "created": "2016-03-20T00:33:02.407Z",
        "user_id": "5357ef811693be2118000001",
        "options": null,
        "order": 17,
        "modified": "2016-04-17T18:30:06.362Z",
        "status": "published"
      },
      {
        "_id": "56edefbee6dcdbb570000019",
        "old_id": "56edefbe952f68b570a025cc",
        "bucket": "56edeedd694d9a5e6f000031",
        "slug": "php-class-pulls-search-results-twitter",
        "title": "PHP Class That Pulls Search Results From Twitter",
        "content": "The Twitter API allows you to pull whatever search results from all of it's users which is a pretty awesome feature if you want to check out sentiment on current events, stock prices or Justin Bieber. Here's an example of how you pull these search results using PHP. It's built from a pre-existing class and makes it easy to display what you find.\r\n\r\nInstall is simple:\r\n\r\ngo to https://dev.twitter.com/ and set up your application.\r\nfill in the essential info in the Config area in index.php\r\n\r\nDownload all of the necessary files at my github <a href=\"https://github.com/tonyspiro/twitter-class-php\">here</a>.\r\n\r\nCheck out an exact example of the code below:<a href=\"http://tonyspiro.com/dev/twitter-search/\" target=\"blank\">http://tonyspiro.com/dev/twitter-search/</a>.\r\n\r\nAnd compare with the twitter results: <a href=\"https://twitter.com/search?q=%24aapl&amp;src=typd\" target=\"blank\">https://twitter.com/search?q=%24aapl&amp;src=typd</a>\r\n<pre class=\"prettyprint prettyprinted\"><span class=\"pun\">&lt;?</span><span class=\"pln\">php\r\n\r\nrequire_once</span><span class=\"pun\">(</span><span class=\"str\">\"twitteroauth/twitteroauth.php\"</span><span class=\"pun\">);</span><span class=\"pln\"> </span><span class=\"com\">//Path to twitteroauth library</span><span class=\"pln\">\r\n\r\n</span><span class=\"com\">/*\r\n*\r\n*\r\n*\tConfigure!!\r\n*\r\n*\r\n*/</span><span class=\"pln\">\r\n\r\n$query </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"str\">\"\\$aapl\"</span><span class=\"pun\">;</span><span class=\"pln\">\r\n$count </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"lit\">100</span><span class=\"pun\">;</span><span class=\"pln\">\r\n\r\ndefine</span><span class=\"pun\">(</span><span class=\"pln\">CONSUMER_KEY</span><span class=\"pun\">,</span><span class=\"str\">\"\"</span><span class=\"pun\">);</span><span class=\"pln\">\r\ndefine</span><span class=\"pun\">(</span><span class=\"pln\">CONSUMER_SECRET</span><span class=\"pun\">,</span><span class=\"str\">\"\"</span><span class=\"pun\">);</span><span class=\"pln\">\r\ndefine</span><span class=\"pun\">(</span><span class=\"pln\">ACCESS_TOKEN</span><span class=\"pun\">,</span><span class=\"str\">\"\"</span><span class=\"pun\">);</span><span class=\"pln\">\r\ndefine</span><span class=\"pun\">(</span><span class=\"pln\">ACCESS_TOKEN_SECRET</span><span class=\"pun\">,</span><span class=\"str\">\"\"</span><span class=\"pun\">);</span><span class=\"pln\">\r\n\r\n\r\n</span><span class=\"com\">/// Twitter Class</span><span class=\"pln\">\r\n</span><span class=\"kwd\">class</span><span class=\"pln\"> </span><span class=\"typ\">Twitter</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\r\n\t\r\n\t</span><span class=\"kwd\">function</span><span class=\"pln\"> getConnectionWithAccessToken</span><span class=\"pun\">(</span><span class=\"pln\">$cons_key</span><span class=\"pun\">,</span><span class=\"pln\"> $cons_secret</span><span class=\"pun\">,</span><span class=\"pln\"> $oauth_token</span><span class=\"pun\">,</span><span class=\"pln\"> $oauth_token_secret</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\r\n\t\t$connection </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"kwd\">new</span><span class=\"pln\"> </span><span class=\"typ\">TwitterOAuth</span><span class=\"pun\">(</span><span class=\"pln\">$cons_key</span><span class=\"pun\">,</span><span class=\"pln\"> $cons_secret</span><span class=\"pun\">,</span><span class=\"pln\"> $oauth_token</span><span class=\"pun\">,</span><span class=\"pln\"> $oauth_token_secret</span><span class=\"pun\">);</span><span class=\"pln\">\r\n\t\t</span><span class=\"kwd\">return</span><span class=\"pln\"> $connection</span><span class=\"pun\">;</span><span class=\"pln\">\r\n\t</span><span class=\"pun\">}</span><span class=\"pln\">\r\n\t\r\n\t</span><span class=\"kwd\">function</span><span class=\"pln\"> search</span><span class=\"pun\">(</span><span class=\"pln\">$query</span><span class=\"pun\">,</span><span class=\"pln\"> $count</span><span class=\"pun\">){</span><span class=\"pln\">\r\n\t\t\r\n\t\t$consumerkey </span><span class=\"pun\">=</span><span class=\"pln\"> CONSUMER_KEY</span><span class=\"pun\">;</span><span class=\"pln\">\r\n\t\t$consumersecret </span><span class=\"pun\">=</span><span class=\"pln\"> CONSUMER_SECRET</span><span class=\"pun\">;</span><span class=\"pln\">\r\n\t\t$accesstoken </span><span class=\"pun\">=</span><span class=\"pln\"> ACCESS_TOKEN</span><span class=\"pun\">;</span><span class=\"pln\">\r\n\t\t$accesstokensecret </span><span class=\"pun\">=</span><span class=\"pln\"> ACCESS_TOKEN_SECRET</span><span class=\"pun\">;</span><span class=\"pln\">\r\n\t\t  \r\n\t\t$connection </span><span class=\"pun\">=</span><span class=\"pln\"> $this</span><span class=\"pun\">-&gt;</span><span class=\"pln\">getConnectionWithAccessToken</span><span class=\"pun\">(</span><span class=\"pln\">$consumerkey</span><span class=\"pun\">,</span><span class=\"pln\"> $consumersecret</span><span class=\"pun\">,</span><span class=\"pln\"> $accesstoken</span><span class=\"pun\">,</span><span class=\"pln\"> $accesstokensecret</span><span class=\"pun\">);</span><span class=\"pln\">\r\n\t\t \r\n\t\t$tweets </span><span class=\"pun\">=</span><span class=\"pln\"> $connection</span><span class=\"pun\">-&gt;</span><span class=\"kwd\">get</span><span class=\"pun\">(</span><span class=\"str\">\"https://api.twitter.com/1.1/search/tweets.json?q=\"</span><span class=\"pln\"> </span><span class=\"pun\">.</span><span class=\"pln\"> $query </span><span class=\"pun\">.</span><span class=\"pln\"> </span><span class=\"str\">\"&amp;count=\"</span><span class=\"pln\"> </span><span class=\"pun\">.</span><span class=\"pln\"> $count</span><span class=\"pun\">);</span><span class=\"pln\">\r\n\t\t\r\n\t\t</span><span class=\"kwd\">return</span><span class=\"pln\"> $tweets</span><span class=\"pun\">;</span><span class=\"pln\">\r\n\t</span><span class=\"pun\">}</span><span class=\"pln\">\r\n</span><span class=\"pun\">}</span><span class=\"pln\">\r\n\r\n$twitter </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"kwd\">new</span><span class=\"pln\"> </span><span class=\"typ\">Twitter</span><span class=\"pun\">;</span><span class=\"pln\">\r\n\r\n$data </span><span class=\"pun\">=</span><span class=\"pln\"> $twitter</span><span class=\"pun\">-&gt;</span><span class=\"pln\">search</span><span class=\"pun\">(</span><span class=\"pln\">$query</span><span class=\"pun\">,</span><span class=\"pln\"> $count</span><span class=\"pun\">);</span><span class=\"pln\">\r\n\r\n\r\n</span><span class=\"com\">/*\r\n\tTo display all data\r\n\t\r\n\tvar_dump($data);\r\n\t\r\n*/</span><span class=\"pln\">\t \r\n\r\n\r\n</span><span class=\"com\">/*\r\n\tTo display all Twitter statuses\r\n*/</span><span class=\"pln\">\t \r\n</span><span class=\"kwd\">foreach</span><span class=\"pun\">(</span><span class=\"pln\">$data</span><span class=\"pun\">-&gt;</span><span class=\"pln\">statuses </span><span class=\"kwd\">as</span><span class=\"pln\"> $tweet</span><span class=\"pun\">){</span><span class=\"pln\">\r\n\techo $tweet</span><span class=\"pun\">-&gt;</span><span class=\"pln\">text </span><span class=\"pun\">.</span><span class=\"pln\"> </span><span class=\"str\">\"&lt;br /&gt;\"</span><span class=\"pun\">;</span><span class=\"pln\">\r\n</span><span class=\"pun\">}</span></pre>",
        "metafields": [
          {
            "object_type": "authors",
            "edit": 1,
            "value": "5712bb5de9c686d006000013",
            "key": "author",
            "title": "Author",
            "type": "object",
            "children": false
          },
          {
            "edit": 1,
            "value": "",
            "key": "hero",
            "title": "Hero",
            "type": "file",
            "children": false
          },
          {
            "edit": 1,
            "value": "",
            "key": "tag",
            "title": "Tag",
            "type": "text",
            "children": false
          },
          {
            "edit": 1,
            "value": "<p><br></p>",
            "key": "teaser",
            "title": "Teaser",
            "type": "html-textarea",
            "children": false
          },
          {
            "edit": 1,
            "value": "2014-01-20",
            "key": "published",
            "title": "Published",
            "type": "date",
            "children": false
          }
        ],
        "type_slug": "posts",
        "created": "2016-03-20T00:33:02.406Z",
        "user_id": "5357ef811693be2118000001",
        "options": null,
        "order": 18,
        "modified": "2016-04-17T18:30:35.140Z",
        "status": "published"
      },
      {
        "_id": "56edefbee6dcdbb570000018",
        "old_id": "56edefbe952f68b570a025cb",
        "bucket": "56edeedd694d9a5e6f000031",
        "slug": "javascript-function-stop-event-propagation-browsers",
        "title": "Javascript Function to Stop Event Propagation in All Browsers",
        "content": "As advertised:\r\n<pre class=\"prettyprint prettyprinted\"><span class=\"kwd\">function</span><span class=\"pln\"> stopIt</span><span class=\"pun\">(</span><span class=\"pln\">e</span><span class=\"pun\">)</span><span class=\"pln\">\r\n</span><span class=\"pun\">{</span><span class=\"pln\">\r\n    </span><span class=\"kwd\">if</span><span class=\"pln\"> </span><span class=\"pun\">(!</span><span class=\"pln\">e</span><span class=\"pun\">)</span><span class=\"pln\">\r\n      e </span><span class=\"pun\">=</span><span class=\"pln\"> window</span><span class=\"pun\">.</span><span class=\"kwd\">event</span><span class=\"pun\">;</span><span class=\"pln\">\r\n\r\n    </span><span class=\"com\">//IE9 &amp; Other Browsers</span><span class=\"pln\">\r\n    </span><span class=\"kwd\">if</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"pln\">e</span><span class=\"pun\">.</span><span class=\"pln\">stopPropagation</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\r\n      e</span><span class=\"pun\">.</span><span class=\"pln\">stopPropagation</span><span class=\"pun\">();</span><span class=\"pln\">\r\n    </span><span class=\"pun\">}</span><span class=\"pln\">\r\n    </span><span class=\"com\">//IE8 and Lower</span><span class=\"pln\">\r\n    </span><span class=\"kwd\">else</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\r\n      e</span><span class=\"pun\">.</span><span class=\"pln\">cancelBubble </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"kwd\">true</span><span class=\"pun\">;</span><span class=\"pln\">\r\n    </span><span class=\"pun\">}</span><span class=\"pln\">\r\n</span><span class=\"pun\">}</span></pre>",
        "metafields": [
          {
            "object_type": "authors",
            "edit": 1,
            "value": "5712bb5de9c686d006000013",
            "key": "author",
            "title": "Author",
            "type": "object",
            "children": false
          },
          {
            "edit": 1,
            "value": "",
            "key": "hero",
            "title": "Hero",
            "type": "file",
            "children": false
          },
          {
            "edit": 1,
            "value": "",
            "key": "tag",
            "title": "Tag",
            "type": "text",
            "children": false
          },
          {
            "edit": 1,
            "value": "<p><br></p>",
            "key": "teaser",
            "title": "Teaser",
            "type": "html-textarea",
            "children": false
          },
          {
            "edit": 1,
            "value": "2013-10-30",
            "key": "published",
            "title": "Published",
            "type": "date",
            "children": false
          }
        ],
        "type_slug": "posts",
        "created": "2016-03-20T00:33:02.406Z",
        "user_id": "5357ef811693be2118000001",
        "options": null,
        "order": 19,
        "modified": "2016-04-17T18:30:57.251Z",
        "status": "published"
      },
      {
        "_id": "56edefbee6dcdbb570000017",
        "old_id": "56edefbe952f68b570a025ca",
        "bucket": "56edeedd694d9a5e6f000031",
        "slug": "uploading-and-resizing-an-image-using-node-js",
        "title": "Uploading and resizing an image using Node.js",
        "content": "UPDATE: This is an older way to upload images using Express Body Parser, which is now deprecated. Please see the updated version <a href=\"http://tonyspiro.com/uploading-resizing-images-fly-node-js-express/\">Uploading and Resizing Images (on the fly) With Node.js and Express</a>.\r\n\r\nNode.js is an awesome development platform that lets you build web applications with server-side javascript. &nbsp;In this example I'll show you how to build a simple application that will allow you to upload a file to a server in a full size and thumbnail size format.\r\n\r\nFirst you need to have node installed on your machine. &nbsp;<a href=\"http://nodejs.org\" target=\"_blank\">Visit the node.js website</a> for instructions on how to do this.\r\n\r\nUsing your preferred terminal application, cd to the preferred location of your application and create your application folder:\r\n<pre class=\" language-javascript\"><code class=\" language-javascript\">mkdir uploadapp</code></pre>\r\nThen navigate into this folder:\r\n<pre class=\" language-javascript\"><code class=\" language-javascript\">cd uploadapp</code></pre>\r\nNext let's install the express.js framework. This is easily done with the following command from your app's folder:\r\n<pre class=\" language-javascript\"><code class=\" language-javascript\">npm install express</code></pre>\r\nNow that we have our webframework, lets setup our server.\r\n<pre class=\" language-javascript\"><code class=\" language-javascript\">nano app<span class=\"token punctuation\">.</span>js</code></pre>\r\nAdd the following to app.js:\r\n<pre class=\" language-javascript\"><code class=\" language-javascript\"><span class=\"token keyword\">var</span> express <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"express\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">var</span> app <span class=\"token operator\">=</span> <span class=\"token function\">express</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\napp<span class=\"token punctuation\">.</span><span class=\"token keyword\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">,</span> res<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\r\n  res<span class=\"token punctuation\">.</span><span class=\"token function\">writeHead</span><span class=\"token punctuation\">(</span><span class=\"token number\">200</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token string\">'Content-Type'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'text/plain'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n  res<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello World!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\napp<span class=\"token punctuation\">.</span><span class=\"token function\">listen</span><span class=\"token punctuation\">(</span><span class=\"token number\">8080</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\r\nNext inside your terminal start node on the app.js file:\r\n<pre class=\" language-javascript\"><code class=\" language-javascript\">node app<span class=\"token punctuation\">.</span>js</code></pre>\r\nAnd go to http://localhost:8080 and you should see the following:\r\n<pre>Hello World!</pre>\r\nNow that we have our server working, let's build our uploader app. Replace the text in app.js with the following:\r\n<pre class=\" language-javascript\"><code class=\" language-javascript\"><span class=\"token keyword\">var</span> express <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"express\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">var</span> app <span class=\"token operator\">=</span> <span class=\"token function\">express</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token keyword\">var</span> form <span class=\"token operator\">=</span> <span class=\"token string\">\"&lt;!DOCTYPE HTML&gt;&lt;html&gt;&lt;body&gt;\"</span> <span class=\"token operator\">+</span>\r\n<span class=\"token string\">\"&lt;form method='post' action='/upload' enctype='multipart/form-data'&gt;\"</span> <span class=\"token operator\">+</span>\r\n<span class=\"token string\">\"&lt;input type='file' name='image'/&gt;\"</span> <span class=\"token operator\">+</span>\r\n<span class=\"token string\">\"&lt;input type='submit' /&gt;&lt;/form&gt;\"</span> <span class=\"token operator\">+</span>\r\n<span class=\"token string\">\"&lt;/body&gt;&lt;/html&gt;\"</span><span class=\"token punctuation\">;</span>\r\n\r\napp<span class=\"token punctuation\">.</span><span class=\"token keyword\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">,</span> res<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\r\n  res<span class=\"token punctuation\">.</span><span class=\"token function\">writeHead</span><span class=\"token punctuation\">(</span><span class=\"token number\">200</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token string\">'Content-Type'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'text/html'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n  res<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span>form<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \r\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\napp<span class=\"token punctuation\">.</span><span class=\"token function\">listen</span><span class=\"token punctuation\">(</span><span class=\"token number\">8080</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\r\nNotice that now we have an upload form that will post the file to http://localhost:8080/upload. Let's create the folders where we want our images to go.\r\n<pre class=\" language-javascript\"><code class=\" language-javascript\">mkdir uploads\r\ncd uploads\r\nmkdir fullsize\r\nmkdir thumbs\r\ncd <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token operator\">/</span></code></pre>\r\nSo now we have the folder uploads that contains the folders fullsize and thumbs to contain our different image sizes. Now let's add the upload handling page, edit app.js to the look like the following:\r\n<pre class=\" language-javascript\"><code class=\" language-javascript\"><span class=\"token keyword\">var</span> express <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"express\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">var</span> app <span class=\"token operator\">=</span> <span class=\"token function\">express</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token comment\" spellcheck=\"true\">// Include the express body parser</span>\r\napp<span class=\"token punctuation\">.</span><span class=\"token function\">configure</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n  app<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span>express<span class=\"token punctuation\">.</span><span class=\"token function\">bodyParser</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token keyword\">var</span> form <span class=\"token operator\">=</span> <span class=\"token string\">\"&lt;!DOCTYPE HTML&gt;&lt;html&gt;&lt;body&gt;\"</span> <span class=\"token operator\">+</span>\r\n<span class=\"token string\">\"&lt;form method='post' action='/upload' enctype='multipart/form-data'&gt;\"</span> <span class=\"token operator\">+</span>\r\n<span class=\"token string\">\"&lt;input type='file' name='image'/&gt;\"</span> <span class=\"token operator\">+</span>\r\n<span class=\"token string\">\"&lt;input type='submit' /&gt;&lt;/form&gt;\"</span> <span class=\"token operator\">+</span>\r\n<span class=\"token string\">\"&lt;/body&gt;&lt;/html&gt;\"</span><span class=\"token punctuation\">;</span>\r\n\r\napp<span class=\"token punctuation\">.</span><span class=\"token keyword\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">,</span> res<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\r\n  res<span class=\"token punctuation\">.</span><span class=\"token function\">writeHead</span><span class=\"token punctuation\">(</span><span class=\"token number\">200</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token string\">'Content-Type'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'text/html'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n  res<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span>form<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token comment\" spellcheck=\"true\">// Include the node file module</span>\r\n<span class=\"token keyword\">var</span> fs <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'fs'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token comment\" spellcheck=\"true\">// Post files</span>\r\napp<span class=\"token punctuation\">.</span><span class=\"token function\">post</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/upload'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">,</span> res<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n  fs<span class=\"token punctuation\">.</span><span class=\"token function\">readFile</span><span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">.</span>files<span class=\"token punctuation\">.</span>image<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token keyword\">var</span> imageName <span class=\"token operator\">=</span> req<span class=\"token punctuation\">.</span>files<span class=\"token punctuation\">.</span>image<span class=\"token punctuation\">.</span>name\r\n    <span class=\"token comment\" spellcheck=\"true\">// If there's an error</span>\r\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>imageName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\r\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"There was an error\"</span><span class=\"token punctuation\">)</span>\r\n      res<span class=\"token punctuation\">.</span><span class=\"token function\">redirect</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n      res<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\r\n      <span class=\"token keyword\">var</span> newPath <span class=\"token operator\">=</span> __dirname <span class=\"token operator\">+</span> <span class=\"token string\">\"/uploads/fullsize/\"</span> <span class=\"token operator\">+</span> imageName<span class=\"token punctuation\">;</span>\r\n      <span class=\"token comment\" spellcheck=\"true\">// write file to uploads/fullsize folder</span>\r\n      fs<span class=\"token punctuation\">.</span><span class=\"token function\">writeFile</span><span class=\"token punctuation\">(</span>newPath<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n        <span class=\"token comment\" spellcheck=\"true\">// let's see it</span>\r\n        res<span class=\"token punctuation\">.</span><span class=\"token function\">redirect</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/uploads/fullsize/\"</span> <span class=\"token operator\">+</span> imageName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\napp<span class=\"token punctuation\">.</span><span class=\"token function\">listen</span><span class=\"token punctuation\">(</span><span class=\"token number\">8080</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\r\nAfter we upload our file we want to be able to see it, so let's add a route to view our file.\r\n<pre class=\" language-javascript\"><code class=\" language-javascript\"><span class=\"token comment\" spellcheck=\"true\">/// Show files</span>\r\napp<span class=\"token punctuation\">.</span><span class=\"token keyword\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/uploads/fullsize/:file'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">,</span> res<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\r\n  file <span class=\"token operator\">=</span> req<span class=\"token punctuation\">.</span>params<span class=\"token punctuation\">.</span>file<span class=\"token punctuation\">;</span>\r\n  <span class=\"token keyword\">var</span> img <span class=\"token operator\">=</span> fs<span class=\"token punctuation\">.</span><span class=\"token function\">readFileSync</span><span class=\"token punctuation\">(</span>__dirname <span class=\"token operator\">+</span> <span class=\"token string\">\"/uploads/fullsize/\"</span> <span class=\"token operator\">+</span> file<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n  res<span class=\"token punctuation\">.</span><span class=\"token function\">writeHead</span><span class=\"token punctuation\">(</span><span class=\"token number\">200</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token string\">'Content-Type'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'image/jpg'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n  res<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">,</span> <span class=\"token string\">'binary'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\r\nNow the full app.js file should look like this:\r\n<pre class=\" language-javascript\"><code class=\" language-javascript\"><span class=\"token keyword\">var</span> app <span class=\"token operator\">=</span> <span class=\"token function\">express</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token comment\" spellcheck=\"true\">/// Include the express body parser</span>\r\napp<span class=\"token punctuation\">.</span><span class=\"token function\">configure</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n  app<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span>express<span class=\"token punctuation\">.</span><span class=\"token function\">bodyParser</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token keyword\">var</span> form <span class=\"token operator\">=</span> <span class=\"token string\">\"&lt;!DOCTYPE HTML&gt;&lt;html&gt;&lt;body&gt;\"</span> <span class=\"token operator\">+</span>\r\n<span class=\"token string\">\"&lt;form method='post' action='/upload' enctype='multipart/form-data'&gt;\"</span> <span class=\"token operator\">+</span>\r\n<span class=\"token string\">\"&lt;input type='file' name='image'/&gt;\"</span> <span class=\"token operator\">+</span>\r\n<span class=\"token string\">\"&lt;input type='submit' /&gt;&lt;/form&gt;\"</span> <span class=\"token operator\">+</span>\r\n<span class=\"token string\">\"&lt;/body&gt;&lt;/html&gt;\"</span><span class=\"token punctuation\">;</span>\r\n\r\napp<span class=\"token punctuation\">.</span><span class=\"token keyword\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">,</span> res<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\r\n  res<span class=\"token punctuation\">.</span><span class=\"token function\">writeHead</span><span class=\"token punctuation\">(</span><span class=\"token number\">200</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token string\">'Content-Type'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'text/html'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n  res<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span>form<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token comment\" spellcheck=\"true\">// Include the node file module</span>\r\n<span class=\"token keyword\">var</span> fs <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'fs'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token comment\" spellcheck=\"true\">// Post files</span>\r\napp<span class=\"token punctuation\">.</span><span class=\"token function\">post</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/upload'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">,</span> res<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n  fs<span class=\"token punctuation\">.</span><span class=\"token function\">readFile</span><span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">.</span>files<span class=\"token punctuation\">.</span>image<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token keyword\">var</span> imageName <span class=\"token operator\">=</span> req<span class=\"token punctuation\">.</span>files<span class=\"token punctuation\">.</span>image<span class=\"token punctuation\">.</span>name\r\n    <span class=\"token comment\" spellcheck=\"true\">// If there's an error</span>\r\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>imageName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\r\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"There was an error\"</span><span class=\"token punctuation\">)</span>\r\n      res<span class=\"token punctuation\">.</span><span class=\"token function\">redirect</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n      res<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\r\n      <span class=\"token keyword\">var</span> newPath <span class=\"token operator\">=</span> __dirname <span class=\"token operator\">+</span> <span class=\"token string\">\"/uploads/fullsize/\"</span> <span class=\"token operator\">+</span> imageName<span class=\"token punctuation\">;</span>\r\n      <span class=\"token comment\" spellcheck=\"true\">// write file to uploads/fullsize folder</span>\r\n      fs<span class=\"token punctuation\">.</span><span class=\"token function\">writeFile</span><span class=\"token punctuation\">(</span>newPath<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n        <span class=\"token comment\" spellcheck=\"true\">// let's see it</span>\r\n        res<span class=\"token punctuation\">.</span><span class=\"token function\">redirect</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/uploads/fullsize/\"</span> <span class=\"token operator\">+</span> imageName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token comment\" spellcheck=\"true\">// Show files</span>\r\napp<span class=\"token punctuation\">.</span><span class=\"token keyword\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/uploads/fullsize/:file'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">,</span> res<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\r\n  file <span class=\"token operator\">=</span> req<span class=\"token punctuation\">.</span>params<span class=\"token punctuation\">.</span>file<span class=\"token punctuation\">;</span>\r\n  <span class=\"token keyword\">var</span> img <span class=\"token operator\">=</span> fs<span class=\"token punctuation\">.</span><span class=\"token function\">readFileSync</span><span class=\"token punctuation\">(</span>__dirname <span class=\"token operator\">+</span> <span class=\"token string\">\"/uploads/fullsize/\"</span> <span class=\"token operator\">+</span> file<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n  res<span class=\"token punctuation\">.</span><span class=\"token function\">writeHead</span><span class=\"token punctuation\">(</span><span class=\"token number\">200</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token string\">'Content-Type'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'image/jpg'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n  res<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">,</span> <span class=\"token string\">'binary'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\napp<span class=\"token punctuation\">.</span><span class=\"token function\">listen</span><span class=\"token punctuation\">(</span><span class=\"token number\">8080</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n</code></pre>\r\nLet's upload a file and see if this works. Restart node on app.js and navigate to http://localhost:8080. Upload a file and you should be redirected to see your fullsize image. Now let's create the thumbnail version of this file. First we need to add a new module to our node stack to handle the resize. In your terminal at your app's root download the Image Magick package:\r\n<pre>npm install imagemagick</pre>\r\nNow edit app.js to look like this:\r\n<pre class=\" language-javascript\"><code class=\" language-javascript\"><span class=\"token keyword\">var</span> express <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"express\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">var</span> app <span class=\"token operator\">=</span> <span class=\"token function\">express</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token comment\" spellcheck=\"true\">/// Include the express body parser</span>\r\napp<span class=\"token punctuation\">.</span><span class=\"token function\">configure</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n  app<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span>express<span class=\"token punctuation\">.</span><span class=\"token function\">bodyParser</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token keyword\">var</span> form <span class=\"token operator\">=</span> <span class=\"token string\">\"&lt;!DOCTYPE HTML&gt;&lt;html&gt;&lt;body&gt;\"</span> <span class=\"token operator\">+</span>\r\n<span class=\"token string\">\"&lt;form method='post' action='/upload' enctype='multipart/form-data'&gt;\"</span> <span class=\"token operator\">+</span>\r\n<span class=\"token string\">\"&lt;input type='file' name='image'/&gt;\"</span> <span class=\"token operator\">+</span>\r\n<span class=\"token string\">\"&lt;input type='submit' /&gt;&lt;/form&gt;\"</span> <span class=\"token operator\">+</span>\r\n<span class=\"token string\">\"&lt;/body&gt;&lt;/html&gt;\"</span><span class=\"token punctuation\">;</span>\r\n\r\napp<span class=\"token punctuation\">.</span><span class=\"token keyword\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">,</span> res<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\r\n  res<span class=\"token punctuation\">.</span><span class=\"token function\">writeHead</span><span class=\"token punctuation\">(</span><span class=\"token number\">200</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token string\">'Content-Type'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'text/html'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n  res<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span>form<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token comment\" spellcheck=\"true\">// Include the node file module</span>\r\n<span class=\"token keyword\">var</span> fs <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'fs'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token comment\" spellcheck=\"true\">// Include ImageMagick</span>\r\n<span class=\"token keyword\">var</span> im <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'imagemagick'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token comment\" spellcheck=\"true\">// Post files</span>\r\napp<span class=\"token punctuation\">.</span><span class=\"token function\">post</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/upload'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">,</span> res<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n  fs<span class=\"token punctuation\">.</span><span class=\"token function\">readFile</span><span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">.</span>files<span class=\"token punctuation\">.</span>image<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token keyword\">var</span> imageName <span class=\"token operator\">=</span> req<span class=\"token punctuation\">.</span>files<span class=\"token punctuation\">.</span>image<span class=\"token punctuation\">.</span>name\r\n    <span class=\"token comment\" spellcheck=\"true\">/// If there's an error</span>\r\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>imageName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\r\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"There was an error\"</span><span class=\"token punctuation\">)</span>\r\n      res<span class=\"token punctuation\">.</span><span class=\"token function\">redirect</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n      res<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\r\n      <span class=\"token keyword\">var</span> newPath <span class=\"token operator\">=</span> __dirname <span class=\"token operator\">+</span> <span class=\"token string\">\"/uploads/fullsize/\"</span> <span class=\"token operator\">+</span> imageName<span class=\"token punctuation\">;</span>\r\n      <span class=\"token keyword\">var</span> thumbPath <span class=\"token operator\">=</span> __dirname <span class=\"token operator\">+</span> <span class=\"token string\">\"/uploads/thumbs/\"</span> <span class=\"token operator\">+</span> imageName<span class=\"token punctuation\">;</span>\r\n      <span class=\"token comment\" spellcheck=\"true\">// write file to uploads/fullsize folder</span>\r\n      fs<span class=\"token punctuation\">.</span><span class=\"token function\">writeFile</span><span class=\"token punctuation\">(</span>newPath<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n        <span class=\"token comment\" spellcheck=\"true\">// write file to uploads/thumbs folder</span>\r\n        im<span class=\"token punctuation\">.</span><span class=\"token function\">resize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\r\n          srcPath<span class=\"token punctuation\">:</span> newPath<span class=\"token punctuation\">,</span>\r\n          dstPath<span class=\"token punctuation\">:</span> thumbPath<span class=\"token punctuation\">,</span>\r\n          width<span class=\"token punctuation\">:</span>   <span class=\"token number\">200</span>\r\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">,</span> stdout<span class=\"token punctuation\">,</span> stderr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\r\n          <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throw</span> err<span class=\"token punctuation\">;</span>\r\n          console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'resized image to fit within 200x200px'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n         res<span class=\"token punctuation\">.</span><span class=\"token function\">redirect</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/uploads/fullsize/\"</span> <span class=\"token operator\">+</span> imageName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token comment\" spellcheck=\"true\">// Show files</span>\r\napp<span class=\"token punctuation\">.</span><span class=\"token keyword\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/uploads/fullsize/:file'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">,</span> res<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\r\n  file <span class=\"token operator\">=</span> req<span class=\"token punctuation\">.</span>params<span class=\"token punctuation\">.</span>file<span class=\"token punctuation\">;</span>\r\n  <span class=\"token keyword\">var</span> img <span class=\"token operator\">=</span> fs<span class=\"token punctuation\">.</span><span class=\"token function\">readFileSync</span><span class=\"token punctuation\">(</span>__dirname <span class=\"token operator\">+</span> <span class=\"token string\">\"/uploads/fullsize/\"</span> <span class=\"token operator\">+</span> file<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n  res<span class=\"token punctuation\">.</span><span class=\"token function\">writeHead</span><span class=\"token punctuation\">(</span><span class=\"token number\">200</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token string\">'Content-Type'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'image/jpg'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n  res<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">,</span> <span class=\"token string\">'binary'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\napp<span class=\"token punctuation\">.</span><span class=\"token keyword\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/uploads/thumbs/:file'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">,</span> res<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\r\n  file <span class=\"token operator\">=</span> req<span class=\"token punctuation\">.</span>params<span class=\"token punctuation\">.</span>file<span class=\"token punctuation\">;</span>\r\n  <span class=\"token keyword\">var</span> img <span class=\"token operator\">=</span> fs<span class=\"token punctuation\">.</span><span class=\"token function\">readFileSync</span><span class=\"token punctuation\">(</span>__dirname <span class=\"token operator\">+</span> <span class=\"token string\">\"/uploads/thumbs/\"</span> <span class=\"token operator\">+</span> file<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n  res<span class=\"token punctuation\">.</span><span class=\"token function\">writeHead</span><span class=\"token punctuation\">(</span><span class=\"token number\">200</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token string\">'Content-Type'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'image/jpg'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n  res<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">,</span> <span class=\"token string\">'binary'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\napp<span class=\"token punctuation\">.</span><span class=\"token function\">listen</span><span class=\"token punctuation\">(</span><span class=\"token number\">8080</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\r\nIf you get an error trying to use Image Magick, it may need to be installed on your machine. On a mac you can run the following command to install via brew:\r\n<pre class=\" language-javascript\"><code class=\" language-javascript\">brew install imagemagick</code></pre>\r\nGo to http://localhost:8080 and you should now be able to upload two different versions of the file, fullsize and thumb located at:\r\n\r\nhttp://localhost:8080/uploads/fullsize/youruploadedfile\r\nhttp://localhost:8080/uploads/thumbs/youruploadedfile\r\n\r\nI hope you found this helpful. Hit me up on twitter if you have any questions/comments: <a href=\"http://twitter.com/tonyspiro\">@tonyspiro</a>.",
        "metafields": [
          {
            "object_type": "authors",
            "edit": 1,
            "value": "5712bb5de9c686d006000013",
            "key": "author",
            "title": "Author",
            "type": "object",
            "children": false
          },
          {
            "edit": 1,
            "value": "",
            "key": "hero",
            "title": "Hero",
            "type": "file",
            "children": false
          },
          {
            "edit": 1,
            "value": "",
            "key": "tag",
            "title": "Tag",
            "type": "text",
            "children": false
          },
          {
            "edit": 1,
            "value": "<p><br></p>",
            "key": "teaser",
            "title": "Teaser",
            "type": "html-textarea",
            "children": false
          },
          {
            "edit": 1,
            "value": "2013-11-22",
            "key": "published",
            "title": "Published",
            "type": "date",
            "children": false
          },
          {
            "edit": 1,
            "value": 477,
            "key": "wp-id",
            "title": "WP ID",
            "type": "text",
            "children": false
          }
        ],
        "type_slug": "posts",
        "created": "2016-03-20T00:33:02.405Z",
        "user_id": "5357ef811693be2118000001",
        "options": null,
        "order": 20,
        "modified": "2016-04-17T23:21:04.059Z",
        "status": "published"
      },
      {
        "_id": "56edefbee6dcdbb570000016",
        "old_id": "56edefbe952f68b570a025c9",
        "bucket": "56edeedd694d9a5e6f000031",
        "slug": "a-new-theme-a-new-dog",
        "title": "A New Theme, A New Dog",
        "content": "So you may notice things look a little different around here. I've relaunched tonyspiro.com with a new <a href=\"https://svbtle.com/\">svbtle</a>-like&nbsp;theme with the neat Kudos feature which I think is a cool alternative to the 10 social like features that you may find on your every day blog. So on a personal note, I also became a dog-owner this weekend. Introducing, Buddy:\r\n\r\n<a href=\"http://tonyspiro.com/wp-content/uploads/2013/08/1.jpg\"><img class=\"alignnone size-medium wp-image-470\" alt=\"1\" src=\"http://tonyspiro.com/wp-content/uploads/2013/08/1-225x300.jpg\" width=\"225\" height=\"300\"></a>\r\n\r\n&nbsp;\r\n\r\nHe is a rescue dog, 2 year old Cairn Terrier mix and he loves people. &nbsp;He's&nbsp;very smart and&nbsp;knows how to press the button for the car window so he can stick his head out. &nbsp;He will be my partner in code as I try to stay current on my blog with lots of cool web stuff. &nbsp;So stay tuned for more posts from me and Buddy.",
        "metafields": [
          {
            "object_type": "authors",
            "edit": 1,
            "value": "5712bb5de9c686d006000013",
            "key": "author",
            "title": "Author",
            "type": "object",
            "children": false
          },
          {
            "edit": 1,
            "value": "",
            "key": "hero",
            "title": "Hero",
            "type": "file",
            "children": false
          },
          {
            "edit": 1,
            "value": "",
            "key": "tag",
            "title": "Tag",
            "type": "text",
            "children": false
          },
          {
            "edit": 1,
            "value": "<p><br></p>",
            "key": "teaser",
            "title": "Teaser",
            "type": "html-textarea",
            "children": false
          },
          {
            "edit": 1,
            "value": "2013-08-25",
            "key": "published",
            "title": "Published",
            "type": "date",
            "children": false
          }
        ],
        "type_slug": "posts",
        "created": "2016-03-20T00:33:02.404Z",
        "user_id": "5357ef811693be2118000001",
        "options": null,
        "order": 21,
        "modified": "2016-04-17T18:31:51.643Z",
        "status": "published"
      },
      {
        "_id": "56edefbee6dcdbb570000015",
        "old_id": "56edefbe952f68b570a025c8",
        "bucket": "56edeedd694d9a5e6f000031",
        "slug": "wordpress-plugin-to-add-a-custom-email-field",
        "title": "Wordpress Plugin to Add a Custom Email Field",
        "content": "Here's a quick function that allows you to add an email to the wordpress options data table and be able to call it anywhere on the site with a simple function.\r\n\r\nJust add this code to your functions.php file in your Wordpress theme and you'll have a nice little menu link in your admin dashboard to edit this option.&nbsp; This is good for when you need a custom email for a site's contact form.&nbsp; Enjoy!\r\n\r\n<pre class=\"prettyprint prettyprinted\"><span class=\"com\">/// Create plugin to get contact email</span><span class=\"pln\">\r\n</span><span class=\"kwd\">function</span><span class=\"pln\"> ts_add_contact_email</span><span class=\"pun\">()</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\r\n&nbsp;&nbsp;&nbsp; add_menu_page</span><span class=\"pun\">(</span><span class=\"str\">'Contact Email'</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"str\">'Contact Email'</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"lit\">5</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"str\">\"contact-email\"</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"str\">'ts_contact_email'</span><span class=\"pun\">);</span><span class=\"pln\">\r\n</span><span class=\"pun\">}</span><span class=\"pln\">\r\n\r\n</span><span class=\"kwd\">function</span><span class=\"pln\"> ts_contact_email</span><span class=\"pun\">()</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\r\n&nbsp; </span><span class=\"kwd\">global</span><span class=\"pln\"> $wpdb</span><span class=\"pun\">;</span><span class=\"pln\">\r\n&nbsp; $contact_email </span><span class=\"pun\">=</span><span class=\"pln\"> get_contact_email</span><span class=\"pun\">();</span><span class=\"pln\"> &nbsp;\r\n\r\n&nbsp; </span><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"pln\">$_POST</span><span class=\"pun\">){</span><span class=\"pln\">\r\n&nbsp;&nbsp; &nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$contact_email </span><span class=\"pun\">=</span><span class=\"pln\"> $_POST</span><span class=\"pun\">[</span><span class=\"str\">'email'</span><span class=\"pun\">];</span><span class=\"pln\">\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;</span><span class=\"kwd\">if</span><span class=\"pun\">(!</span><span class=\"pln\">get_option</span><span class=\"pun\">(</span><span class=\"str\">'contact_email'</span><span class=\"pun\">)){</span><span class=\"pln\">\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;add_option</span><span class=\"pun\">(</span><span class=\"str\">'contact_email'</span><span class=\"pun\">,</span><span class=\"pln\"> $contact_email</span><span class=\"pun\">);</span><span class=\"pln\"> \r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;</span><span class=\"pun\">}</span><span class=\"pln\"> </span><span class=\"kwd\">else</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;update_option</span><span class=\"pun\">(</span><span class=\"str\">'contact_email'</span><span class=\"pun\">,</span><span class=\"pln\"> $contact_email</span><span class=\"pun\">);</span><span class=\"pln\"> &nbsp;\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;</span><span class=\"pun\">}</span><span class=\"pln\">\r\n\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;echo </span><span class=\"str\">\"&lt;div class='updated'&gt;&lt;p&gt;Success.&nbsp; Email updated.&lt;/p&gt;&lt;/div&gt;\"</span><span class=\"pun\">;</span><span class=\"pln\">\r\n&nbsp; </span><span class=\"pun\">}</span><span class=\"pln\">\r\n\r\n&nbsp; echo </span><span class=\"str\">'\r\n&nbsp;&nbsp;&nbsp; &lt;div&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;form action=\"?page=contact-email\" method=\"post\"&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;h2&gt;Contact Email&lt;/h2&gt;\r\n&nbsp;&nbsp; &nbsp;&nbsp; &lt;div&gt;This is the email that will receive contact form emails&lt;/div&gt;&nbsp;&nbsp; &nbsp; &nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;input style=\"width: 400px; height: 27px;\" name=\"email\" type=\"text\" value=\"'</span><span class=\"pln\"> </span><span class=\"pun\">.</span><span class=\"pln\"> $contact_email </span><span class=\"pun\">.</span><span class=\"pln\"> </span><span class=\"str\">'\" /&gt;\r\n&nbsp;&nbsp; &nbsp;&nbsp; &lt;input type=\"submit\" value=\"Save\"/&gt;\r\n&nbsp;&nbsp; &nbsp;&nbsp; &lt;/form&gt;\r\n&nbsp;&nbsp;&nbsp; &lt;/div&gt;'</span><span class=\"pun\">;</span><span class=\"pln\">\r\n</span><span class=\"pun\">}</span><span class=\"pln\">\r\nadd_action</span><span class=\"pun\">(</span><span class=\"str\">'admin_menu'</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"str\">'ts_add_contact_email'</span><span class=\"pun\">);</span><span class=\"pln\">\r\n\r\n</span><span class=\"com\">/// Function to retrieve email</span><span class=\"pln\">\r\n</span><span class=\"kwd\">function</span><span class=\"pln\"> get_contact_email</span><span class=\"pun\">(){</span><span class=\"pln\">\r\n&nbsp;&nbsp; &nbsp;$contact_email </span><span class=\"pun\">=</span><span class=\"pln\"> get_option</span><span class=\"pun\">(</span><span class=\"str\">'contact_email'</span><span class=\"pun\">);</span><span class=\"pln\">\r\n&nbsp;&nbsp; &nbsp;</span><span class=\"kwd\">return</span><span class=\"pln\"> $contact_email</span><span class=\"pun\">;</span><span class=\"pln\">&nbsp;&nbsp; &nbsp;\r\n</span><span class=\"pun\">}</span><span class=\"pln\">\r\n\r\n</span><span class=\"com\">/// After adding your email through the admin dashboard, call the email with echo get_contact_email();</span></pre>",
        "metafields": [
          {
            "object_type": "authors",
            "edit": 1,
            "value": "5712bb5de9c686d006000013",
            "key": "author",
            "title": "Author",
            "type": "object",
            "children": false
          },
          {
            "edit": 1,
            "value": "",
            "key": "hero",
            "title": "Hero",
            "type": "file",
            "children": false
          },
          {
            "edit": 1,
            "value": "",
            "key": "tag",
            "title": "Tag",
            "type": "text",
            "children": false
          },
          {
            "edit": 1,
            "value": "<p><br></p>",
            "key": "teaser",
            "title": "Teaser",
            "type": "html-textarea",
            "children": false
          },
          {
            "edit": 1,
            "value": "2013-08-06",
            "key": "published",
            "title": "Published",
            "type": "date",
            "children": false
          }
        ],
        "type_slug": "posts",
        "created": "2016-03-20T00:33:02.404Z",
        "user_id": "5357ef811693be2118000001",
        "options": null,
        "order": 22,
        "modified": "2016-04-17T18:32:39.962Z",
        "status": "published"
      },
      {
        "_id": "56edefbee6dcdbb570000014",
        "old_id": "56edefbe952f68b570a025c7",
        "bucket": "56edeedd694d9a5e6f000031",
        "slug": "blackjack-game-using-html5-css-and-jquery",
        "title": "Blackjack Game using HTML5, CSS and JQuery",
        "content": "Here's a fun and simple blackjack game I built using HTML5, CSS and JQuery. I'd like to add more features to it like betting, splitting and doubling down and it's on github so anyone can add to it.\r\n\r\nFollow the link below to play!\r\n<a href=\"http://tonyspiro.com/dev/blackjack\" target=\"_blank\">http://tonyspiro.com/dev/blackjack</a>\r\n\r\nOn github:\r\n<a href=\"https://github.com/tonyspiro/blackjack/\" target=\"_blank\">https://github.com/tonyspiro/blackjack/</a>\r\n\r\nHere's make up of the js/blackjack.js file which powers the whole game:\r\n<pre class=\"prettyprint prettyprinted\"><span class=\"kwd\">function</span><span class=\"pln\"> reset</span><span class=\"pun\">(){</span><span class=\"pln\">\r\n\r\n&nbsp;&nbsp; &nbsp;</span><span class=\"com\">// Reset</span><span class=\"pln\">\r\n&nbsp;&nbsp; &nbsp;$</span><span class=\"pun\">(</span><span class=\"str\">\".dealer-cards\"</span><span class=\"pun\">).</span><span class=\"pln\">html</span><span class=\"pun\">(</span><span class=\"str\">\"&lt;div class='card card1'&gt;&lt;/div&gt;&lt;div class='card card2 flipped'&gt;&lt;/div&gt;&lt;div class='new-cards'&gt;&lt;/div&gt;&lt;div class='clear'&gt;&lt;/div&gt;&lt;div id='dealerTotal' class='dealer-total'&gt;&lt;/div&gt;\"</span><span class=\"pun\">);</span><span class=\"pln\">\r\n\r\n&nbsp;&nbsp; &nbsp;$</span><span class=\"pun\">(</span><span class=\"str\">\".player-cards\"</span><span class=\"pun\">).</span><span class=\"pln\">html</span><span class=\"pun\">(</span><span class=\"str\">\"&lt;div class='card card1'&gt;&lt;/div&gt;&lt;div class='card card2'&gt;&lt;/div&gt;&lt;div class='new-cards'&gt;&lt;/div&gt;&lt;div class='clear'&gt;&lt;/div&gt;&lt;div id='playerTotal' class='player-total'&gt;&lt;/div&gt;\"</span><span class=\"pun\">);</span><span class=\"pln\">\r\n\r\n&nbsp;&nbsp; &nbsp;</span><span class=\"kwd\">var</span><span class=\"pln\"> reloadGame </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"str\">\"&lt;div class='btn' id='hit'&gt;Hit&lt;/div&gt;&lt;div class='btn' id='stand'&gt;Stand&lt;/div&gt;\"</span><span class=\"pun\">;</span><span class=\"pln\">\r\n&nbsp;&nbsp; &nbsp;$</span><span class=\"pun\">(</span><span class=\"str\">\".buttons\"</span><span class=\"pun\">).</span><span class=\"pln\">html</span><span class=\"pun\">(</span><span class=\"pln\">reloadGame</span><span class=\"pun\">);</span><span class=\"pln\">\r\n\r\n&nbsp;&nbsp; &nbsp;$</span><span class=\"pun\">(</span><span class=\"str\">\".dealer-cards\"</span><span class=\"pun\">).</span><span class=\"pln\">css</span><span class=\"pun\">(</span><span class=\"str\">\"width\"</span><span class=\"pun\">,</span><span class=\"str\">\"\"</span><span class=\"pun\">);</span><span class=\"pln\">\r\n&nbsp;&nbsp; &nbsp;$</span><span class=\"pun\">(</span><span class=\"str\">\".player-cards\"</span><span class=\"pun\">).</span><span class=\"pln\">css</span><span class=\"pun\">(</span><span class=\"str\">\"width\"</span><span class=\"pun\">,</span><span class=\"str\">\"\"</span><span class=\"pun\">);</span><span class=\"pln\">\r\n\r\n&nbsp;&nbsp; &nbsp;$</span><span class=\"pun\">(</span><span class=\"str\">\"#playerTotal\"</span><span class=\"pun\">).</span><span class=\"pln\">html</span><span class=\"pun\">(</span><span class=\"str\">''</span><span class=\"pun\">);</span><span class=\"pln\">\r\n&nbsp;&nbsp; &nbsp;$</span><span class=\"pun\">(</span><span class=\"str\">\"#dealerTotal\"</span><span class=\"pun\">).</span><span class=\"pln\">html</span><span class=\"pun\">(</span><span class=\"str\">''</span><span class=\"pun\">);</span><span class=\"pln\">\r\n&nbsp;&nbsp; &nbsp;$</span><span class=\"pun\">(</span><span class=\"str\">\"#message\"</span><span class=\"pun\">).</span><span class=\"pln\">html</span><span class=\"pun\">(</span><span class=\"str\">''</span><span class=\"pun\">);</span><span class=\"pln\">\r\n\r\n</span><span class=\"pun\">}</span><span class=\"pln\">\r\n\r\n</span><span class=\"kwd\">function</span><span class=\"pln\"> deal</span><span class=\"pun\">(){</span><span class=\"pln\">\r\n\r\n&nbsp;&nbsp; &nbsp;reset</span><span class=\"pun\">();</span><span class=\"pln\">\r\n\r\n</span><span class=\"com\">/// Store cards in array</span><span class=\"pln\">\r\n&nbsp;&nbsp; &nbsp;</span><span class=\"kwd\">var</span><span class=\"pln\"> cards </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"pun\">[</span><span class=\"str\">\"ace-of-clubs\"</span><span class=\"pun\">,</span><span class=\"str\">\"two-of-clubs\"</span><span class=\"pun\">,</span><span class=\"str\">\"three-of-clubs\"</span><span class=\"pun\">,</span><span class=\"str\">\"four-of-clubs\"</span><span class=\"pun\">,</span><span class=\"str\">\"five-of-clubs\"</span><span class=\"pun\">,</span><span class=\"str\">\"six-of-clubs\"</span><span class=\"pun\">,</span><span class=\"str\">\"seven-of-clubs\"</span><span class=\"pun\">,</span><span class=\"str\">\"eight-of-clubs\"</span><span class=\"pun\">,</span><span class=\"str\">\"nine-of-clubs\"</span><span class=\"pun\">,</span><span class=\"str\">\"ten-of-clubs\"</span><span class=\"pun\">,</span><span class=\"str\">\"jack-of-clubs\"</span><span class=\"pun\">,</span><span class=\"str\">\"queen-of-clubs\"</span><span class=\"pun\">,</span><span class=\"str\">\"king-of-clubs\"</span><span class=\"pun\">,</span><span class=\"str\">\"ace-of-spades\"</span><span class=\"pun\">,</span><span class=\"str\">\"two-of-spades\"</span><span class=\"pun\">,</span><span class=\"str\">\"three-of-spades\"</span><span class=\"pun\">,</span><span class=\"str\">\"four-of-spades\"</span><span class=\"pun\">,</span><span class=\"str\">\"five-of-spades\"</span><span class=\"pun\">,</span><span class=\"str\">\"six-of-spades\"</span><span class=\"pun\">,</span><span class=\"str\">\"seven-of-spades\"</span><span class=\"pun\">,</span><span class=\"str\">\"eight-of-spades\"</span><span class=\"pun\">,</span><span class=\"str\">\"nine-of-spades\"</span><span class=\"pun\">,</span><span class=\"str\">\"ten-of-spades\"</span><span class=\"pun\">,</span><span class=\"str\">\"jack-of-spades\"</span><span class=\"pun\">,</span><span class=\"str\">\"queen-of-spades\"</span><span class=\"pun\">,</span><span class=\"str\">\"king-of-spades\"</span><span class=\"pun\">,</span><span class=\"str\">\"ace-of-hearts\"</span><span class=\"pun\">,</span><span class=\"str\">\"two-of-hearts\"</span><span class=\"pun\">,</span><span class=\"str\">\"three-of-hearts\"</span><span class=\"pun\">,</span><span class=\"str\">\"four-of-hearts\"</span><span class=\"pun\">,</span><span class=\"str\">\"five-of-hearts\"</span><span class=\"pun\">,</span><span class=\"str\">\"six-of-hearts\"</span><span class=\"pun\">,</span><span class=\"str\">\"seven-of-hearts\"</span><span class=\"pun\">,</span><span class=\"str\">\"eight-of-hearts\"</span><span class=\"pun\">,</span><span class=\"str\">\"nine-of-hearts\"</span><span class=\"pun\">,</span><span class=\"str\">\"ten-of-hearts\"</span><span class=\"pun\">,</span><span class=\"str\">\"jack-of-hearts\"</span><span class=\"pun\">,</span><span class=\"str\">\"queen-of-hearts\"</span><span class=\"pun\">,</span><span class=\"str\">\"king-of-hearts\"</span><span class=\"pun\">,</span><span class=\"str\">\"ace-of-diamonds\"</span><span class=\"pun\">,</span><span class=\"str\">\"two-of-diamonds\"</span><span class=\"pun\">,</span><span class=\"str\">\"three-of-diamonds\"</span><span class=\"pun\">,</span><span class=\"str\">\"four-of-diamonds\"</span><span class=\"pun\">,</span><span class=\"str\">\"five-of-diamonds\"</span><span class=\"pun\">,</span><span class=\"str\">\"six-of-diamonds\"</span><span class=\"pun\">,</span><span class=\"str\">\"seven-of-diamonds\"</span><span class=\"pun\">,</span><span class=\"str\">\"eight-of-diamonds\"</span><span class=\"pun\">,</span><span class=\"str\">\"nine-of-diamonds\"</span><span class=\"pun\">,</span><span class=\"str\">\"ten-of-diamonds\"</span><span class=\"pun\">,</span><span class=\"str\">\"jack-of-diamonds\"</span><span class=\"pun\">,</span><span class=\"str\">\"queen-of-diamonds\"</span><span class=\"pun\">,</span><span class=\"str\">\"king-of-diamonds\"</span><span class=\"pun\">];</span><span class=\"pln\">\r\n\r\n&nbsp;&nbsp; &nbsp;</span><span class=\"com\">/// Store correlating values in an array</span><span class=\"pln\">\r\n&nbsp;&nbsp; &nbsp;</span><span class=\"kwd\">var</span><span class=\"pln\"> values </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"pun\">[</span><span class=\"lit\">11</span><span class=\"pun\">,</span><span class=\"lit\">2</span><span class=\"pun\">,</span><span class=\"lit\">3</span><span class=\"pun\">,</span><span class=\"lit\">4</span><span class=\"pun\">,</span><span class=\"lit\">5</span><span class=\"pun\">,</span><span class=\"lit\">6</span><span class=\"pun\">,</span><span class=\"lit\">7</span><span class=\"pun\">,</span><span class=\"lit\">8</span><span class=\"pun\">,</span><span class=\"lit\">9</span><span class=\"pun\">,</span><span class=\"lit\">10</span><span class=\"pun\">,</span><span class=\"lit\">10</span><span class=\"pun\">,</span><span class=\"lit\">10</span><span class=\"pun\">,</span><span class=\"lit\">10</span><span class=\"pun\">,</span><span class=\"lit\">11</span><span class=\"pun\">,</span><span class=\"lit\">2</span><span class=\"pun\">,</span><span class=\"lit\">3</span><span class=\"pun\">,</span><span class=\"lit\">4</span><span class=\"pun\">,</span><span class=\"lit\">5</span><span class=\"pun\">,</span><span class=\"lit\">6</span><span class=\"pun\">,</span><span class=\"lit\">7</span><span class=\"pun\">,</span><span class=\"lit\">8</span><span class=\"pun\">,</span><span class=\"lit\">9</span><span class=\"pun\">,</span><span class=\"lit\">10</span><span class=\"pun\">,</span><span class=\"lit\">10</span><span class=\"pun\">,</span><span class=\"lit\">10</span><span class=\"pun\">,</span><span class=\"lit\">10</span><span class=\"pun\">,</span><span class=\"lit\">11</span><span class=\"pun\">,</span><span class=\"lit\">2</span><span class=\"pun\">,</span><span class=\"lit\">3</span><span class=\"pun\">,</span><span class=\"lit\">4</span><span class=\"pun\">,</span><span class=\"lit\">5</span><span class=\"pun\">,</span><span class=\"lit\">6</span><span class=\"pun\">,</span><span class=\"lit\">7</span><span class=\"pun\">,</span><span class=\"lit\">8</span><span class=\"pun\">,</span><span class=\"lit\">9</span><span class=\"pun\">,</span><span class=\"lit\">10</span><span class=\"pun\">,</span><span class=\"lit\">10</span><span class=\"pun\">,</span><span class=\"lit\">10</span><span class=\"pun\">,</span><span class=\"lit\">10</span><span class=\"pun\">,</span><span class=\"lit\">11</span><span class=\"pun\">,</span><span class=\"lit\">2</span><span class=\"pun\">,</span><span class=\"lit\">3</span><span class=\"pun\">,</span><span class=\"lit\">4</span><span class=\"pun\">,</span><span class=\"lit\">5</span><span class=\"pun\">,</span><span class=\"lit\">6</span><span class=\"pun\">,</span><span class=\"lit\">7</span><span class=\"pun\">,</span><span class=\"lit\">8</span><span class=\"pun\">,</span><span class=\"lit\">9</span><span class=\"pun\">,</span><span class=\"lit\">10</span><span class=\"pun\">,</span><span class=\"lit\">10</span><span class=\"pun\">,</span><span class=\"lit\">10</span><span class=\"pun\">,</span><span class=\"lit\">10</span><span class=\"pun\">];</span><span class=\"pln\">\r\n\r\n&nbsp;&nbsp; &nbsp;</span><span class=\"com\">/// Zero out dealer total</span><span class=\"pln\">\r\n&nbsp;&nbsp; &nbsp;</span><span class=\"kwd\">var</span><span class=\"pln\"> dealerTotal </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"lit\">0</span><span class=\"pun\">;</span><span class=\"pln\">\r\n&nbsp;&nbsp; &nbsp;$</span><span class=\"pun\">(</span><span class=\"str\">\".dealer-cards .card\"</span><span class=\"pun\">).</span><span class=\"pln\">each</span><span class=\"pun\">(</span><span class=\"kwd\">function</span><span class=\"pun\">(){</span><span class=\"pln\">\r\n\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;</span><span class=\"kwd\">var</span><span class=\"pln\"> num </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"typ\">Math</span><span class=\"pun\">.</span><span class=\"pln\">floor</span><span class=\"pun\">(</span><span class=\"typ\">Math</span><span class=\"pun\">.</span><span class=\"pln\">random</span><span class=\"pun\">()*</span><span class=\"pln\">cards</span><span class=\"pun\">.</span><span class=\"pln\">length</span><span class=\"pun\">);</span><span class=\"pln\">\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;</span><span class=\"kwd\">var</span><span class=\"pln\"> cardClass </span><span class=\"pun\">=</span><span class=\"pln\"> cards</span><span class=\"pun\">[</span><span class=\"pln\">num</span><span class=\"pun\">];</span><span class=\"pln\">\r\n\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$</span><span class=\"pun\">(</span><span class=\"kwd\">this</span><span class=\"pun\">).</span><span class=\"pln\">addClass</span><span class=\"pun\">(</span><span class=\"pln\">cardClass</span><span class=\"pun\">);</span><span class=\"pln\">\r\n\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$</span><span class=\"pun\">(</span><span class=\"kwd\">this</span><span class=\"pun\">).</span><span class=\"pln\">attr</span><span class=\"pun\">(</span><span class=\"str\">\"data-value\"</span><span class=\"pun\">,</span><span class=\"pln\">values</span><span class=\"pun\">[</span><span class=\"pln\">num</span><span class=\"pun\">]);</span><span class=\"pln\">\r\n\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;dealerTotal </span><span class=\"pun\">=</span><span class=\"pln\"> parseInt</span><span class=\"pun\">(</span><span class=\"pln\">dealerTotal</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">+</span><span class=\"pln\"> parseInt</span><span class=\"pun\">(</span><span class=\"pln\">values</span><span class=\"pun\">[</span><span class=\"pln\">num</span><span class=\"pun\">]);</span><span class=\"pln\">\r\n\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;</span><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"pln\">dealerTotal</span><span class=\"pun\">&gt;</span><span class=\"lit\">21</span><span class=\"pun\">){</span><span class=\"pln\">\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$</span><span class=\"pun\">(</span><span class=\"str\">\".dealer-cards .card\"</span><span class=\"pun\">).</span><span class=\"pln\">each</span><span class=\"pun\">(</span><span class=\"kwd\">function</span><span class=\"pun\">(){</span><span class=\"pln\">\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;</span><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"pln\">$</span><span class=\"pun\">(</span><span class=\"kwd\">this</span><span class=\"pun\">).</span><span class=\"pln\">attr</span><span class=\"pun\">(</span><span class=\"str\">\"data-value\"</span><span class=\"pun\">)==</span><span class=\"lit\">11</span><span class=\"pun\">){</span><span class=\"pln\">\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;dealerTotal </span><span class=\"pun\">=</span><span class=\"pln\"> parseInt</span><span class=\"pun\">(</span><span class=\"pln\">dealerTotal</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">-</span><span class=\"pln\"> </span><span class=\"lit\">10</span><span class=\"pun\">;</span><span class=\"pln\">\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$</span><span class=\"pun\">(</span><span class=\"kwd\">this</span><span class=\"pun\">).</span><span class=\"pln\">attr</span><span class=\"pun\">(</span><span class=\"str\">\"data-value\"</span><span class=\"pun\">,</span><span class=\"lit\">1</span><span class=\"pun\">);</span><span class=\"pln\">\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;</span><span class=\"pun\">}</span><span class=\"pln\">\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;</span><span class=\"pun\">});</span><span class=\"pln\">\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;</span><span class=\"pun\">}</span><span class=\"pln\">\r\n\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$</span><span class=\"pun\">(</span><span class=\"str\">\"#dealerTotal\"</span><span class=\"pun\">).</span><span class=\"pln\">html</span><span class=\"pun\">(</span><span class=\"pln\">dealerTotal</span><span class=\"pun\">);</span><span class=\"pln\">\r\n\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;cards</span><span class=\"pun\">.</span><span class=\"pln\">splice</span><span class=\"pun\">(</span><span class=\"pln\">num</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"lit\">1</span><span class=\"pun\">);</span><span class=\"pln\">\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;values</span><span class=\"pun\">.</span><span class=\"pln\">splice</span><span class=\"pun\">(</span><span class=\"pln\">num</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"lit\">1</span><span class=\"pun\">);</span><span class=\"pln\">\r\n&nbsp;&nbsp; &nbsp;</span><span class=\"pun\">});</span><span class=\"pln\">\r\n\r\n&nbsp;&nbsp; &nbsp;</span><span class=\"com\">/// Zero out player total</span><span class=\"pln\">\r\n&nbsp;&nbsp; &nbsp;</span><span class=\"kwd\">var</span><span class=\"pln\"> playerTotal </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"lit\">0</span><span class=\"pun\">;</span><span class=\"pln\">\r\n&nbsp;&nbsp; &nbsp;$</span><span class=\"pun\">(</span><span class=\"str\">\".player-cards .card\"</span><span class=\"pun\">).</span><span class=\"pln\">each</span><span class=\"pun\">(</span><span class=\"kwd\">function</span><span class=\"pun\">(){</span><span class=\"pln\">\r\n\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;</span><span class=\"kwd\">var</span><span class=\"pln\"> num </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"typ\">Math</span><span class=\"pun\">.</span><span class=\"pln\">floor</span><span class=\"pun\">(</span><span class=\"typ\">Math</span><span class=\"pun\">.</span><span class=\"pln\">random</span><span class=\"pun\">()*</span><span class=\"pln\">cards</span><span class=\"pun\">.</span><span class=\"pln\">length</span><span class=\"pun\">);</span><span class=\"pln\">\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;</span><span class=\"kwd\">var</span><span class=\"pln\"> cardClass </span><span class=\"pun\">=</span><span class=\"pln\"> cards</span><span class=\"pun\">[</span><span class=\"pln\">num</span><span class=\"pun\">];</span><span class=\"pln\">\r\n\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$</span><span class=\"pun\">(</span><span class=\"kwd\">this</span><span class=\"pun\">).</span><span class=\"pln\">addClass</span><span class=\"pun\">(</span><span class=\"pln\">cardClass</span><span class=\"pun\">);</span><span class=\"pln\">\r\n\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$</span><span class=\"pun\">(</span><span class=\"kwd\">this</span><span class=\"pun\">).</span><span class=\"pln\">attr</span><span class=\"pun\">(</span><span class=\"str\">\"data-value\"</span><span class=\"pun\">,</span><span class=\"pln\">values</span><span class=\"pun\">[</span><span class=\"pln\">num</span><span class=\"pun\">]);</span><span class=\"pln\">\r\n\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;playerTotal </span><span class=\"pun\">=</span><span class=\"pln\"> parseInt</span><span class=\"pun\">(</span><span class=\"pln\">playerTotal</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">+</span><span class=\"pln\"> parseInt</span><span class=\"pun\">(</span><span class=\"pln\">values</span><span class=\"pun\">[</span><span class=\"pln\">num</span><span class=\"pun\">]);</span><span class=\"pln\">\r\n\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;</span><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"pln\">playerTotal</span><span class=\"pun\">&gt;</span><span class=\"lit\">21</span><span class=\"pun\">){</span><span class=\"pln\">\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$</span><span class=\"pun\">(</span><span class=\"str\">\".player-cards .card\"</span><span class=\"pun\">).</span><span class=\"pln\">each</span><span class=\"pun\">(</span><span class=\"kwd\">function</span><span class=\"pun\">(){</span><span class=\"pln\">\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;</span><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"pln\">$</span><span class=\"pun\">(</span><span class=\"kwd\">this</span><span class=\"pun\">).</span><span class=\"pln\">attr</span><span class=\"pun\">(</span><span class=\"str\">\"data-value\"</span><span class=\"pun\">)==</span><span class=\"lit\">11</span><span class=\"pun\">){</span><span class=\"pln\">\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;playerTotal </span><span class=\"pun\">=</span><span class=\"pln\"> parseInt</span><span class=\"pun\">(</span><span class=\"pln\">playerTotal</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">-</span><span class=\"pln\"> </span><span class=\"lit\">10</span><span class=\"pun\">;</span><span class=\"pln\">\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$</span><span class=\"pun\">(</span><span class=\"kwd\">this</span><span class=\"pun\">).</span><span class=\"pln\">attr</span><span class=\"pun\">(</span><span class=\"str\">\"data-value\"</span><span class=\"pun\">,</span><span class=\"lit\">1</span><span class=\"pun\">);</span><span class=\"pln\">\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;</span><span class=\"pun\">}</span><span class=\"pln\">\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;</span><span class=\"pun\">});</span><span class=\"pln\">\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;</span><span class=\"pun\">}</span><span class=\"pln\">\r\n\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$</span><span class=\"pun\">(</span><span class=\"str\">\"#playerTotal\"</span><span class=\"pun\">).</span><span class=\"pln\">html</span><span class=\"pun\">(</span><span class=\"pln\">playerTotal</span><span class=\"pun\">);</span><span class=\"pln\">\r\n\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;cards</span><span class=\"pun\">.</span><span class=\"pln\">splice</span><span class=\"pun\">(</span><span class=\"pln\">num</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"lit\">1</span><span class=\"pun\">);</span><span class=\"pln\">\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;values</span><span class=\"pun\">.</span><span class=\"pln\">splice</span><span class=\"pun\">(</span><span class=\"pln\">num</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"lit\">1</span><span class=\"pun\">);</span><span class=\"pln\">\r\n\r\n&nbsp;&nbsp; &nbsp;</span><span class=\"pun\">});</span><span class=\"pln\">\r\n\r\n&nbsp;&nbsp; &nbsp;</span><span class=\"com\">/// If player hits</span><span class=\"pln\">\r\n&nbsp;&nbsp; &nbsp;$</span><span class=\"pun\">(</span><span class=\"str\">\"#hit\"</span><span class=\"pun\">).</span><span class=\"pln\">click</span><span class=\"pun\">(</span><span class=\"kwd\">function</span><span class=\"pun\">(){</span><span class=\"pln\">\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;</span><span class=\"kwd\">var</span><span class=\"pln\"> num </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"typ\">Math</span><span class=\"pun\">.</span><span class=\"pln\">floor</span><span class=\"pun\">(</span><span class=\"typ\">Math</span><span class=\"pun\">.</span><span class=\"pln\">random</span><span class=\"pun\">()*</span><span class=\"pln\">cards</span><span class=\"pun\">.</span><span class=\"pln\">length</span><span class=\"pun\">);</span><span class=\"pln\">\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;</span><span class=\"kwd\">var</span><span class=\"pln\"> cardClass </span><span class=\"pun\">=</span><span class=\"pln\"> cards</span><span class=\"pun\">[</span><span class=\"pln\">num</span><span class=\"pun\">];</span><span class=\"pln\">\r\n\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;</span><span class=\"kwd\">var</span><span class=\"pln\"> newCard </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"str\">\"&lt;div class='card \"</span><span class=\"pln\"> </span><span class=\"pun\">+</span><span class=\"pln\">&nbsp; cardClass </span><span class=\"pun\">+</span><span class=\"pln\"> </span><span class=\"str\">\"' data-value='\"</span><span class=\"pln\"> </span><span class=\"pun\">+</span><span class=\"pln\"> values</span><span class=\"pun\">[</span><span class=\"pln\">num</span><span class=\"pun\">]</span><span class=\"pln\"> </span><span class=\"pun\">+</span><span class=\"pln\"> </span><span class=\"str\">\"'&gt;&lt;/div&gt;\"</span><span class=\"pun\">;</span><span class=\"pln\">\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$</span><span class=\"pun\">(</span><span class=\"str\">\".player-cards .new-cards\"</span><span class=\"pun\">).</span><span class=\"pln\">append</span><span class=\"pun\">(</span><span class=\"pln\">newCard</span><span class=\"pun\">);</span><span class=\"pln\">\r\n\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;playerTotal </span><span class=\"pun\">=</span><span class=\"pln\"> parseInt</span><span class=\"pun\">(</span><span class=\"pln\">playerTotal</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">+</span><span class=\"pln\"> parseInt</span><span class=\"pun\">(</span><span class=\"pln\">values</span><span class=\"pun\">[</span><span class=\"pln\">num</span><span class=\"pun\">]);</span><span class=\"pln\">\r\n\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;</span><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"pln\">playerTotal</span><span class=\"pun\">&gt;</span><span class=\"lit\">21</span><span class=\"pun\">){</span><span class=\"pln\">\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$</span><span class=\"pun\">(</span><span class=\"str\">\".player-cards .card\"</span><span class=\"pun\">).</span><span class=\"pln\">each</span><span class=\"pun\">(</span><span class=\"kwd\">function</span><span class=\"pun\">(){</span><span class=\"pln\">\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;</span><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"pln\">$</span><span class=\"pun\">(</span><span class=\"kwd\">this</span><span class=\"pun\">).</span><span class=\"pln\">attr</span><span class=\"pun\">(</span><span class=\"str\">\"data-value\"</span><span class=\"pun\">)==</span><span class=\"lit\">11</span><span class=\"pun\">){</span><span class=\"pln\">\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;playerTotal </span><span class=\"pun\">=</span><span class=\"pln\"> parseInt</span><span class=\"pun\">(</span><span class=\"pln\">playerTotal</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">-</span><span class=\"pln\"> </span><span class=\"lit\">10</span><span class=\"pun\">;</span><span class=\"pln\">\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$</span><span class=\"pun\">(</span><span class=\"kwd\">this</span><span class=\"pun\">).</span><span class=\"pln\">attr</span><span class=\"pun\">(</span><span class=\"str\">\"data-value\"</span><span class=\"pun\">,</span><span class=\"lit\">1</span><span class=\"pun\">);</span><span class=\"pln\">\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;</span><span class=\"pun\">}</span><span class=\"pln\">\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;</span><span class=\"pun\">});</span><span class=\"pln\">\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;</span><span class=\"pun\">}</span><span class=\"pln\">\r\n\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;cards</span><span class=\"pun\">.</span><span class=\"pln\">splice</span><span class=\"pun\">(</span><span class=\"pln\">num</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"lit\">1</span><span class=\"pun\">);</span><span class=\"pln\">\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;values</span><span class=\"pun\">.</span><span class=\"pln\">splice</span><span class=\"pun\">(</span><span class=\"pln\">num</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"lit\">1</span><span class=\"pun\">);</span><span class=\"pln\">\r\n\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$</span><span class=\"pun\">(</span><span class=\"str\">\"#playerTotal\"</span><span class=\"pun\">).</span><span class=\"pln\">html</span><span class=\"pun\">(</span><span class=\"pln\">playerTotal</span><span class=\"pun\">);</span><span class=\"pln\">\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$</span><span class=\"pun\">(</span><span class=\"str\">\".player-cards\"</span><span class=\"pun\">).</span><span class=\"pln\">width</span><span class=\"pun\">(</span><span class=\"pln\">$</span><span class=\"pun\">(</span><span class=\"str\">\".player-cards\"</span><span class=\"pun\">).</span><span class=\"pln\">width</span><span class=\"pun\">()+</span><span class=\"lit\">84</span><span class=\"pun\">);</span><span class=\"pln\">\r\n\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;</span><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"pln\">playerTotal</span><span class=\"pun\">&gt;</span><span class=\"lit\">21</span><span class=\"pun\">){</span><span class=\"pln\">\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$</span><span class=\"pun\">(</span><span class=\"str\">\"#message\"</span><span class=\"pun\">).</span><span class=\"pln\">html</span><span class=\"pun\">(</span><span class=\"str\">'Bust!'</span><span class=\"pun\">);</span><span class=\"pln\">\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;</span><span class=\"kwd\">var</span><span class=\"pln\"> reloadGame </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"str\">\"&lt;div class='btn' id='deal'&gt;Deal&lt;/div&gt;\"</span><span class=\"pun\">;</span><span class=\"pln\">\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$</span><span class=\"pun\">(</span><span class=\"str\">\".buttons\"</span><span class=\"pun\">).</span><span class=\"pln\">html</span><span class=\"pun\">(</span><span class=\"pln\">reloadGame</span><span class=\"pun\">);</span><span class=\"pln\">\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;</span><span class=\"com\">/// Pay up</span><span class=\"pln\">\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$</span><span class=\"pun\">(</span><span class=\"str\">\"#bet\"</span><span class=\"pun\">).</span><span class=\"pln\">html</span><span class=\"pun\">(</span><span class=\"str\">'0'</span><span class=\"pun\">);</span><span class=\"pln\">&nbsp;&nbsp; &nbsp;\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;</span><span class=\"kwd\">return</span><span class=\"pln\"> </span><span class=\"kwd\">false</span><span class=\"pun\">;</span><span class=\"pln\">\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;</span><span class=\"pun\">}</span><span class=\"pln\">\r\n\r\n&nbsp;&nbsp; &nbsp;</span><span class=\"pun\">});</span><span class=\"pln\">\r\n\r\n&nbsp;&nbsp; &nbsp;</span><span class=\"com\">/// If player stands</span><span class=\"pln\">\r\n&nbsp;&nbsp; &nbsp;$</span><span class=\"pun\">(</span><span class=\"str\">\"#stand\"</span><span class=\"pun\">).</span><span class=\"pln\">click</span><span class=\"pun\">(</span><span class=\"kwd\">function</span><span class=\"pun\">(){</span><span class=\"pln\">\r\n\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$</span><span class=\"pun\">(</span><span class=\"str\">\"#dealerTotal\"</span><span class=\"pun\">).</span><span class=\"pln\">css</span><span class=\"pun\">(</span><span class=\"str\">\"visibility\"</span><span class=\"pun\">,</span><span class=\"str\">\"visible\"</span><span class=\"pun\">);</span><span class=\"pln\">\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$</span><span class=\"pun\">(</span><span class=\"str\">\".card2\"</span><span class=\"pun\">).</span><span class=\"pln\">removeClass</span><span class=\"pun\">(</span><span class=\"str\">\"flipped\"</span><span class=\"pun\">);</span><span class=\"pln\">\r\n\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;</span><span class=\"com\">//// Keep adding a card until over 17 or dealer busts</span><span class=\"pln\">\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;</span><span class=\"kwd\">var</span><span class=\"pln\"> keepDealing </span><span class=\"pun\">=</span><span class=\"pln\"> setInterval</span><span class=\"pun\">(</span><span class=\"kwd\">function</span><span class=\"pun\">(){</span><span class=\"pln\">\r\n\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;</span><span class=\"kwd\">var</span><span class=\"pln\"> dealerTotal </span><span class=\"pun\">=</span><span class=\"pln\"> $</span><span class=\"pun\">(</span><span class=\"str\">\"#dealerTotal\"</span><span class=\"pun\">).</span><span class=\"pln\">html</span><span class=\"pun\">();</span><span class=\"pln\">\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;</span><span class=\"kwd\">var</span><span class=\"pln\"> playerTotal </span><span class=\"pun\">=</span><span class=\"pln\"> $</span><span class=\"pun\">(</span><span class=\"str\">\"#playerTotal\"</span><span class=\"pun\">).</span><span class=\"pln\">html</span><span class=\"pun\">();</span><span class=\"pln\">\r\n\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;</span><span class=\"com\">/// If there are aces</span><span class=\"pln\">\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;</span><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"pln\">dealerTotal</span><span class=\"pun\">&gt;</span><span class=\"lit\">21</span><span class=\"pun\">){</span><span class=\"pln\">\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$</span><span class=\"pun\">(</span><span class=\"str\">\".dealer-cards .card\"</span><span class=\"pun\">).</span><span class=\"pln\">each</span><span class=\"pun\">(</span><span class=\"kwd\">function</span><span class=\"pun\">(){</span><span class=\"pln\">\r\n\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;</span><span class=\"com\">//// and check if still over 21 in the loop</span><span class=\"pln\">\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;</span><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"pln\">$</span><span class=\"pun\">(</span><span class=\"kwd\">this</span><span class=\"pun\">).</span><span class=\"pln\">attr</span><span class=\"pun\">(</span><span class=\"str\">\"data-value\"</span><span class=\"pun\">)==</span><span class=\"lit\">11</span><span class=\"pln\"> </span><span class=\"pun\">&amp;&amp;</span><span class=\"pln\"> dealerTotal</span><span class=\"pun\">&gt;</span><span class=\"lit\">21</span><span class=\"pun\">){</span><span class=\"pln\">\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;dealerTotal </span><span class=\"pun\">=</span><span class=\"pln\"> parseInt</span><span class=\"pun\">(</span><span class=\"pln\">dealerTotal</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">-</span><span class=\"pln\"> </span><span class=\"lit\">10</span><span class=\"pun\">;</span><span class=\"pln\">\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$</span><span class=\"pun\">(</span><span class=\"kwd\">this</span><span class=\"pun\">).</span><span class=\"pln\">attr</span><span class=\"pun\">(</span><span class=\"str\">\"data-value\"</span><span class=\"pun\">,</span><span class=\"lit\">1</span><span class=\"pun\">);</span><span class=\"pln\">\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;</span><span class=\"pun\">}</span><span class=\"pln\">\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;</span><span class=\"pun\">});</span><span class=\"pln\">\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;</span><span class=\"pun\">}</span><span class=\"pln\">\r\n\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;</span><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"pln\">dealerTotal</span><span class=\"pun\">&gt;</span><span class=\"lit\">21</span><span class=\"pun\">){</span><span class=\"pln\">\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$</span><span class=\"pun\">(</span><span class=\"str\">\"#message\"</span><span class=\"pun\">).</span><span class=\"pln\">html</span><span class=\"pun\">(</span><span class=\"str\">'Dealer Bust!'</span><span class=\"pun\">);</span><span class=\"pln\">&nbsp;&nbsp; &nbsp;\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;</span><span class=\"kwd\">var</span><span class=\"pln\"> reloadGame </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"str\">\"&lt;div class='btn' id='deal'&gt;Deal&lt;/div&gt;\"</span><span class=\"pun\">;</span><span class=\"pln\">\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$</span><span class=\"pun\">(</span><span class=\"str\">\".buttons\"</span><span class=\"pun\">).</span><span class=\"pln\">html</span><span class=\"pun\">(</span><span class=\"pln\">reloadGame</span><span class=\"pun\">);</span><span class=\"pln\">\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;clearInterval</span><span class=\"pun\">(</span><span class=\"pln\">keepDealing</span><span class=\"pun\">);</span><span class=\"pln\">\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;</span><span class=\"com\">/// Pay up</span><span class=\"pln\">\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;</span><span class=\"kwd\">var</span><span class=\"pln\"> bet </span><span class=\"pun\">=</span><span class=\"pln\"> $</span><span class=\"pun\">(</span><span class=\"str\">\"#bet\"</span><span class=\"pun\">).</span><span class=\"pln\">html</span><span class=\"pun\">();</span><span class=\"pln\">\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;</span><span class=\"kwd\">var</span><span class=\"pln\"> money </span><span class=\"pun\">=</span><span class=\"pln\"> $</span><span class=\"pun\">(</span><span class=\"str\">\"#money\"</span><span class=\"pun\">).</span><span class=\"pln\">html</span><span class=\"pun\">();</span><span class=\"pln\">\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;</span><span class=\"kwd\">var</span><span class=\"pln\"> winnings </span><span class=\"pun\">=</span><span class=\"pln\"> bet </span><span class=\"pun\">*</span><span class=\"pln\"> </span><span class=\"lit\">2</span><span class=\"pun\">;</span><span class=\"pln\">\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$</span><span class=\"pun\">(</span><span class=\"str\">\"#bet\"</span><span class=\"pun\">).</span><span class=\"pln\">html</span><span class=\"pun\">(</span><span class=\"str\">'0'</span><span class=\"pun\">);</span><span class=\"pln\">\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$</span><span class=\"pun\">(</span><span class=\"str\">\"#money\"</span><span class=\"pun\">).</span><span class=\"pln\">html</span><span class=\"pun\">(</span><span class=\"pln\">parseInt</span><span class=\"pun\">(</span><span class=\"pln\">winnings</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">+</span><span class=\"pln\"> parseInt</span><span class=\"pun\">(</span><span class=\"pln\">money</span><span class=\"pun\">));</span><span class=\"pln\">\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;</span><span class=\"kwd\">return</span><span class=\"pln\"> </span><span class=\"kwd\">false</span><span class=\"pun\">;</span><span class=\"pln\">\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;</span><span class=\"pun\">}</span><span class=\"pln\">\r\n\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;</span><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"pln\">dealerTotal</span><span class=\"pun\">&gt;=</span><span class=\"lit\">17</span><span class=\"pun\">){</span><span class=\"pln\">\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;</span><span class=\"com\">/// You Win</span><span class=\"pln\">\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;</span><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"pln\">playerTotal</span><span class=\"pun\">&gt;</span><span class=\"pln\">dealerTotal</span><span class=\"pun\">){</span><span class=\"pln\">\r\n\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$</span><span class=\"pun\">(</span><span class=\"str\">\"#message\"</span><span class=\"pun\">).</span><span class=\"pln\">html</span><span class=\"pun\">(</span><span class=\"str\">'You Win!'</span><span class=\"pun\">);</span><span class=\"pln\">\r\n\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;</span><span class=\"com\">/// Pay up</span><span class=\"pln\">\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;</span><span class=\"kwd\">var</span><span class=\"pln\"> bet </span><span class=\"pun\">=</span><span class=\"pln\"> $</span><span class=\"pun\">(</span><span class=\"str\">\"#bet\"</span><span class=\"pun\">).</span><span class=\"pln\">html</span><span class=\"pun\">();</span><span class=\"pln\">\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;</span><span class=\"kwd\">var</span><span class=\"pln\"> money </span><span class=\"pun\">=</span><span class=\"pln\"> $</span><span class=\"pun\">(</span><span class=\"str\">\"#money\"</span><span class=\"pun\">).</span><span class=\"pln\">html</span><span class=\"pun\">();</span><span class=\"pln\">\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;</span><span class=\"kwd\">var</span><span class=\"pln\"> winnings </span><span class=\"pun\">=</span><span class=\"pln\"> bet </span><span class=\"pun\">*</span><span class=\"pln\"> </span><span class=\"lit\">2</span><span class=\"pun\">;</span><span class=\"pln\">\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$</span><span class=\"pun\">(</span><span class=\"str\">\"#bet\"</span><span class=\"pun\">).</span><span class=\"pln\">html</span><span class=\"pun\">(</span><span class=\"str\">'0'</span><span class=\"pun\">);</span><span class=\"pln\">\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$</span><span class=\"pun\">(</span><span class=\"str\">\"#money\"</span><span class=\"pun\">).</span><span class=\"pln\">html</span><span class=\"pun\">(</span><span class=\"pln\">parseInt</span><span class=\"pun\">(</span><span class=\"pln\">winnings</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">+</span><span class=\"pln\"> parseInt</span><span class=\"pun\">(</span><span class=\"pln\">money</span><span class=\"pun\">));</span><span class=\"pln\">\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;</span><span class=\"pun\">}</span><span class=\"pln\">\r\n\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;</span><span class=\"com\">/// You Lose</span><span class=\"pln\">\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;</span><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"pln\">playerTotal</span><span class=\"pun\">&lt;</span><span class=\"pln\">dealerTotal</span><span class=\"pun\">){</span><span class=\"pln\">\r\n\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$</span><span class=\"pun\">(</span><span class=\"str\">\"#message\"</span><span class=\"pun\">).</span><span class=\"pln\">html</span><span class=\"pun\">(</span><span class=\"str\">'You Lose!'</span><span class=\"pun\">);</span><span class=\"pln\">\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;</span><span class=\"com\">/// Pay up</span><span class=\"pln\">\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;</span><span class=\"kwd\">var</span><span class=\"pln\"> bet </span><span class=\"pun\">=</span><span class=\"pln\"> $</span><span class=\"pun\">(</span><span class=\"str\">\"#bet\"</span><span class=\"pun\">).</span><span class=\"pln\">html</span><span class=\"pun\">();</span><span class=\"pln\">\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;</span><span class=\"kwd\">var</span><span class=\"pln\"> money </span><span class=\"pun\">=</span><span class=\"pln\"> $</span><span class=\"pun\">(</span><span class=\"str\">\"#money\"</span><span class=\"pun\">).</span><span class=\"pln\">html</span><span class=\"pun\">();</span><span class=\"pln\">\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$</span><span class=\"pun\">(</span><span class=\"str\">\"#bet\"</span><span class=\"pun\">).</span><span class=\"pln\">html</span><span class=\"pun\">(</span><span class=\"str\">'0'</span><span class=\"pun\">);</span><span class=\"pln\">\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$</span><span class=\"pun\">(</span><span class=\"str\">\"#money\"</span><span class=\"pun\">).</span><span class=\"pln\">html</span><span class=\"pun\">(</span><span class=\"pln\">parseInt</span><span class=\"pun\">(</span><span class=\"pln\">money</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">-</span><span class=\"pln\"> parseInt</span><span class=\"pun\">(</span><span class=\"pln\">bet</span><span class=\"pun\">));</span><span class=\"pln\">\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;</span><span class=\"pun\">}</span><span class=\"pln\">\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;</span><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"pln\">playerTotal</span><span class=\"pun\">==</span><span class=\"pln\">dealerTotal</span><span class=\"pun\">){</span><span class=\"pln\">\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$</span><span class=\"pun\">(</span><span class=\"str\">\"#message\"</span><span class=\"pun\">).</span><span class=\"pln\">html</span><span class=\"pun\">(</span><span class=\"str\">'Push!'</span><span class=\"pun\">);</span><span class=\"pln\">\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;</span><span class=\"kwd\">var</span><span class=\"pln\"> bet </span><span class=\"pun\">=</span><span class=\"pln\"> $</span><span class=\"pun\">(</span><span class=\"str\">\"#bet\"</span><span class=\"pun\">).</span><span class=\"pln\">html</span><span class=\"pun\">();</span><span class=\"pln\">\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;</span><span class=\"kwd\">var</span><span class=\"pln\"> money </span><span class=\"pun\">=</span><span class=\"pln\"> $</span><span class=\"pun\">(</span><span class=\"str\">\"#money\"</span><span class=\"pun\">).</span><span class=\"pln\">html</span><span class=\"pun\">();</span><span class=\"pln\">\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$</span><span class=\"pun\">(</span><span class=\"str\">\"#money\"</span><span class=\"pun\">).</span><span class=\"pln\">html</span><span class=\"pun\">(</span><span class=\"pln\">parseInt</span><span class=\"pun\">(</span><span class=\"pln\">bet</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">+</span><span class=\"pln\"> parseInt</span><span class=\"pun\">(</span><span class=\"pln\">money</span><span class=\"pun\">));</span><span class=\"pln\">\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$</span><span class=\"pun\">(</span><span class=\"str\">\"#bet\"</span><span class=\"pun\">).</span><span class=\"pln\">html</span><span class=\"pun\">(</span><span class=\"str\">'0'</span><span class=\"pun\">);</span><span class=\"pln\">\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;</span><span class=\"pun\">}</span><span class=\"pln\">\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;</span><span class=\"kwd\">var</span><span class=\"pln\"> reloadGame </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"str\">\"&lt;div class='btn' id='deal'&gt;Deal&lt;/div&gt;\"</span><span class=\"pun\">;</span><span class=\"pln\">\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$</span><span class=\"pun\">(</span><span class=\"str\">\".buttons\"</span><span class=\"pun\">).</span><span class=\"pln\">html</span><span class=\"pun\">(</span><span class=\"pln\">reloadGame</span><span class=\"pun\">);</span><span class=\"pln\">\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;clearInterval</span><span class=\"pun\">(</span><span class=\"pln\">keepDealing</span><span class=\"pun\">);</span><span class=\"pln\">\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;</span><span class=\"kwd\">return</span><span class=\"pln\"> </span><span class=\"kwd\">false</span><span class=\"pun\">;</span><span class=\"pln\">\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;</span><span class=\"pun\">}</span><span class=\"pln\">\r\n\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;</span><span class=\"kwd\">var</span><span class=\"pln\"> num </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"typ\">Math</span><span class=\"pun\">.</span><span class=\"pln\">floor</span><span class=\"pun\">(</span><span class=\"typ\">Math</span><span class=\"pun\">.</span><span class=\"pln\">random</span><span class=\"pun\">()*</span><span class=\"pln\">cards</span><span class=\"pun\">.</span><span class=\"pln\">length</span><span class=\"pun\">);</span><span class=\"pln\">\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;</span><span class=\"kwd\">var</span><span class=\"pln\"> cardClass </span><span class=\"pun\">=</span><span class=\"pln\"> cards</span><span class=\"pun\">[</span><span class=\"pln\">num</span><span class=\"pun\">];</span><span class=\"pln\">\r\n\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;</span><span class=\"kwd\">var</span><span class=\"pln\"> newCard </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"str\">\"&lt;div class='card \"</span><span class=\"pln\"> </span><span class=\"pun\">+</span><span class=\"pln\">&nbsp; cardClass </span><span class=\"pun\">+</span><span class=\"pln\"> </span><span class=\"str\">\"' data-value='\"</span><span class=\"pln\"> </span><span class=\"pun\">+</span><span class=\"pln\"> values</span><span class=\"pun\">[</span><span class=\"pln\">num</span><span class=\"pun\">]</span><span class=\"pln\"> </span><span class=\"pun\">+</span><span class=\"pln\"> </span><span class=\"str\">\"'&gt;&lt;/div&gt;\"</span><span class=\"pun\">;</span><span class=\"pln\">\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$</span><span class=\"pun\">(</span><span class=\"str\">\".dealer-cards .new-cards\"</span><span class=\"pun\">).</span><span class=\"pln\">append</span><span class=\"pun\">(</span><span class=\"pln\">newCard</span><span class=\"pun\">);</span><span class=\"pln\">\r\n\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;dealerTotal </span><span class=\"pun\">=</span><span class=\"pln\"> parseInt</span><span class=\"pun\">(</span><span class=\"pln\">dealerTotal</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">+</span><span class=\"pln\"> parseInt</span><span class=\"pun\">(</span><span class=\"pln\">values</span><span class=\"pun\">[</span><span class=\"pln\">num</span><span class=\"pun\">]);</span><span class=\"pln\">\r\n\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$</span><span class=\"pun\">(</span><span class=\"str\">\"#dealerTotal\"</span><span class=\"pun\">).</span><span class=\"pln\">html</span><span class=\"pun\">(</span><span class=\"pln\">dealerTotal</span><span class=\"pun\">);</span><span class=\"pln\">\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$</span><span class=\"pun\">(</span><span class=\"str\">\".dealer-cards\"</span><span class=\"pun\">).</span><span class=\"pln\">width</span><span class=\"pun\">(</span><span class=\"pln\">$</span><span class=\"pun\">(</span><span class=\"str\">\".dealer-cards\"</span><span class=\"pun\">).</span><span class=\"pln\">width</span><span class=\"pun\">()+</span><span class=\"lit\">84</span><span class=\"pun\">)</span><span class=\"pln\">\r\n\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;cards</span><span class=\"pun\">.</span><span class=\"pln\">splice</span><span class=\"pun\">(</span><span class=\"pln\">num</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"lit\">1</span><span class=\"pun\">);</span><span class=\"pln\">\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;values</span><span class=\"pun\">.</span><span class=\"pln\">splice</span><span class=\"pun\">(</span><span class=\"pln\">num</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"lit\">1</span><span class=\"pun\">);</span><span class=\"pln\">\r\n\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;</span><span class=\"pun\">},</span><span class=\"pln\"> </span><span class=\"lit\">300</span><span class=\"pun\">);</span><span class=\"pln\">\r\n&nbsp;&nbsp; &nbsp;</span><span class=\"pun\">});</span><span class=\"pln\">&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;\r\n</span><span class=\"pun\">}</span><span class=\"pln\">\r\n\r\n$</span><span class=\"pun\">(</span><span class=\"pln\">document</span><span class=\"pun\">).</span><span class=\"pln\">ready</span><span class=\"pun\">(</span><span class=\"kwd\">function</span><span class=\"pun\">(){</span><span class=\"pln\">\r\n\r\n&nbsp;&nbsp; &nbsp;deal</span><span class=\"pun\">();</span><span class=\"pln\">\r\n\r\n&nbsp;&nbsp; &nbsp;</span><span class=\"com\">//// Bet</span><span class=\"pln\">\r\n&nbsp;&nbsp; &nbsp;$</span><span class=\"pun\">(</span><span class=\"str\">\"#more\"</span><span class=\"pun\">).</span><span class=\"pln\">click</span><span class=\"pun\">(</span><span class=\"kwd\">function</span><span class=\"pun\">(){</span><span class=\"pln\">\r\n\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;</span><span class=\"kwd\">var</span><span class=\"pln\"> bet </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"lit\">10</span><span class=\"pun\">;</span><span class=\"pln\">\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;</span><span class=\"kwd\">var</span><span class=\"pln\"> currentBet </span><span class=\"pun\">=</span><span class=\"pln\"> $</span><span class=\"pun\">(</span><span class=\"str\">\"#bet\"</span><span class=\"pun\">).</span><span class=\"pln\">html</span><span class=\"pun\">();</span><span class=\"pln\">\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;</span><span class=\"kwd\">var</span><span class=\"pln\"> money </span><span class=\"pun\">=</span><span class=\"pln\"> $</span><span class=\"pun\">(</span><span class=\"str\">\"#money\"</span><span class=\"pun\">).</span><span class=\"pln\">html</span><span class=\"pun\">();</span><span class=\"pln\">\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;</span><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"pln\">money</span><span class=\"pun\">==</span><span class=\"lit\">0</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"kwd\">return</span><span class=\"pln\"> </span><span class=\"kwd\">false</span><span class=\"pun\">;</span><span class=\"pln\">\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;</span><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"pln\">currentBet</span><span class=\"pun\">){</span><span class=\"pln\">\r\n\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$</span><span class=\"pun\">(</span><span class=\"str\">\"#bet\"</span><span class=\"pun\">).</span><span class=\"pln\">html</span><span class=\"pun\">(</span><span class=\"pln\">parseInt</span><span class=\"pun\">(</span><span class=\"pln\">currentBet</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">+</span><span class=\"pln\"> bet</span><span class=\"pun\">);</span><span class=\"pln\">\r\n\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;</span><span class=\"pun\">}</span><span class=\"pln\"> </span><span class=\"kwd\">else</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\r\n\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$</span><span class=\"pun\">(</span><span class=\"str\">\"#bet\"</span><span class=\"pun\">).</span><span class=\"pln\">html</span><span class=\"pun\">(</span><span class=\"pln\">bet</span><span class=\"pun\">);</span><span class=\"pln\">\r\n\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;</span><span class=\"pun\">}</span><span class=\"pln\">\r\n\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$</span><span class=\"pun\">(</span><span class=\"str\">\"#money\"</span><span class=\"pun\">).</span><span class=\"pln\">html</span><span class=\"pun\">(</span><span class=\"pln\">money</span><span class=\"pun\">-</span><span class=\"pln\">bet</span><span class=\"pun\">);</span><span class=\"pln\">\r\n\r\n&nbsp;&nbsp; &nbsp;</span><span class=\"pun\">});</span><span class=\"pln\">\r\n\r\n&nbsp;&nbsp; &nbsp;$</span><span class=\"pun\">(</span><span class=\"str\">\"#less\"</span><span class=\"pun\">).</span><span class=\"pln\">click</span><span class=\"pun\">(</span><span class=\"kwd\">function</span><span class=\"pun\">(){</span><span class=\"pln\">\r\n\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;</span><span class=\"kwd\">var</span><span class=\"pln\"> bet </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"pun\">-</span><span class=\"lit\">10</span><span class=\"pun\">;</span><span class=\"pln\">\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;</span><span class=\"kwd\">var</span><span class=\"pln\"> currentBet </span><span class=\"pun\">=</span><span class=\"pln\"> $</span><span class=\"pun\">(</span><span class=\"str\">\"#bet\"</span><span class=\"pun\">).</span><span class=\"pln\">html</span><span class=\"pun\">();</span><span class=\"pln\">\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;</span><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"pln\">currentBet</span><span class=\"pun\">==</span><span class=\"lit\">0</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"kwd\">return</span><span class=\"pln\"> </span><span class=\"kwd\">false</span><span class=\"pun\">;</span><span class=\"pln\">\r\n\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;</span><span class=\"kwd\">var</span><span class=\"pln\"> money </span><span class=\"pun\">=</span><span class=\"pln\"> $</span><span class=\"pun\">(</span><span class=\"str\">\"#money\"</span><span class=\"pun\">).</span><span class=\"pln\">html</span><span class=\"pun\">();</span><span class=\"pln\">\r\n\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;</span><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"pln\">currentBet</span><span class=\"pun\">){</span><span class=\"pln\">\r\n\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$</span><span class=\"pun\">(</span><span class=\"str\">\"#bet\"</span><span class=\"pun\">).</span><span class=\"pln\">html</span><span class=\"pun\">(</span><span class=\"pln\">parseInt</span><span class=\"pun\">(</span><span class=\"pln\">currentBet</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">+</span><span class=\"pln\"> bet</span><span class=\"pun\">);</span><span class=\"pln\">\r\n\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;</span><span class=\"pun\">}</span><span class=\"pln\"> </span><span class=\"kwd\">else</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\r\n\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$</span><span class=\"pun\">(</span><span class=\"str\">\"#bet\"</span><span class=\"pun\">).</span><span class=\"pln\">html</span><span class=\"pun\">(</span><span class=\"pln\">bet</span><span class=\"pun\">);</span><span class=\"pln\">\r\n\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;</span><span class=\"pun\">}</span><span class=\"pln\">\r\n\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$</span><span class=\"pun\">(</span><span class=\"str\">\"#money\"</span><span class=\"pun\">).</span><span class=\"pln\">html</span><span class=\"pun\">(</span><span class=\"pln\">money</span><span class=\"pun\">-</span><span class=\"pln\">bet</span><span class=\"pun\">);</span><span class=\"pln\">\r\n\r\n&nbsp;&nbsp; &nbsp;</span><span class=\"pun\">});</span><span class=\"pln\">\r\n\r\n&nbsp;&nbsp; &nbsp;setInterval</span><span class=\"pun\">(</span><span class=\"kwd\">function</span><span class=\"pun\">(){</span><span class=\"pln\">\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$</span><span class=\"pun\">(</span><span class=\"str\">\"#deal\"</span><span class=\"pun\">).</span><span class=\"pln\">unbind</span><span class=\"pun\">(</span><span class=\"str\">'click'</span><span class=\"pun\">);</span><span class=\"pln\">\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$</span><span class=\"pun\">(</span><span class=\"str\">\"#deal\"</span><span class=\"pun\">).</span><span class=\"pln\">click</span><span class=\"pun\">(</span><span class=\"kwd\">function</span><span class=\"pun\">(){</span><span class=\"pln\">\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;</span><span class=\"com\">/// location.reload(); </span><span class=\"pln\">\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;deal</span><span class=\"pun\">();</span><span class=\"pln\">\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;</span><span class=\"pun\">});</span><span class=\"pln\">\r\n&nbsp;&nbsp;&nbsp; &nbsp;</span><span class=\"pun\">},</span><span class=\"pln\"> </span><span class=\"lit\">200</span><span class=\"pun\">);</span><span class=\"pln\">\r\n\r\n</span><span class=\"pun\">});</span></pre>",
        "metafields": [
          {
            "object_type": "authors",
            "edit": 1,
            "value": "5712bb5de9c686d006000013",
            "key": "author",
            "title": "Author",
            "type": "object",
            "children": false
          },
          {
            "edit": 1,
            "value": "",
            "key": "hero",
            "title": "Hero",
            "type": "file",
            "children": false
          },
          {
            "edit": 1,
            "value": "",
            "key": "tag",
            "title": "Tag",
            "type": "text",
            "children": false
          },
          {
            "edit": 1,
            "value": "<p><br></p>",
            "key": "teaser",
            "title": "Teaser",
            "type": "html-textarea",
            "children": false
          },
          {
            "edit": 1,
            "value": "2013-07-07",
            "key": "published",
            "title": "Published",
            "type": "date",
            "children": false
          }
        ],
        "type_slug": "posts",
        "created": "2016-03-20T00:33:02.402Z",
        "user_id": "5357ef811693be2118000001",
        "options": null,
        "order": 23,
        "modified": "2016-04-17T18:33:05.742Z",
        "status": "published"
      },
      {
        "_id": "56edefbee6dcdbb570000013",
        "old_id": "56edefbe952f68b570a025c6",
        "bucket": "56edeedd694d9a5e6f000031",
        "slug": "php-function-that-uploads-a-file-to-rackspace-cloud-files-container-using-the-open-cloud-api",
        "title": "PHP Function That Uploads A File To Rackspace Cloud Files Container Using The Open Cloud API",
        "content": "It seems like there is a lot of documentation on Rackspace's old API for uploading to Cloud Files, but not a lot of documentation on how to use the new PHP Open Cloud API for Rackspace Cloud Files. So here's a function to help you take your files to the cloud.\r\n\r\n<pre class=\"prettyprint prettyprinted\"><span class=\"pun\">&lt;?</span><span class=\"pln\">php\r\n\r\n</span><span class=\"com\">////// ! Configure ! //////</span><span class=\"pln\">\r\n$username </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"str\">\"\"</span><span class=\"pun\">;</span><span class=\"pln\"> </span><span class=\"com\">// username</span><span class=\"pln\">\r\n$api_key </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"str\">\"\"</span><span class=\"pun\">;</span><span class=\"pln\"> </span><span class=\"com\">// api key</span><span class=\"pln\">\r\n$container </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"str\">\"\"</span><span class=\"pun\">;</span><span class=\"pln\"> </span><span class=\"com\">// container name</span><span class=\"pln\">\r\n$container_region </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"str\">\"\"</span><span class=\"pun\">;</span><span class=\"pln\"> </span><span class=\"com\">// container region</span><span class=\"pln\">\r\n\r\n</span><span class=\"com\">/// Function to rename the file to a unique ID</span><span class=\"pln\">\r\n</span><span class=\"kwd\">function</span><span class=\"pln\"> guid</span><span class=\"pun\">(){</span><span class=\"pln\">\r\n</span><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"pln\">function_exists</span><span class=\"pun\">(</span><span class=\"str\">'com_create_guid'</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">===</span><span class=\"pln\"> </span><span class=\"kwd\">true</span><span class=\"pun\">){</span><span class=\"pln\">\r\n</span><span class=\"kwd\">return</span><span class=\"pln\"> trim</span><span class=\"pun\">(</span><span class=\"pln\">com_create_guid</span><span class=\"pun\">(),</span><span class=\"pln\"> </span><span class=\"str\">'{}'</span><span class=\"pun\">);</span><span class=\"pln\">\r\n</span><span class=\"pun\">}</span><span class=\"pln\">\r\n</span><span class=\"kwd\">return</span><span class=\"pln\"> sprintf</span><span class=\"pun\">(</span><span class=\"str\">'%04X%04X-%04X-%04X-%04X-%04X%04X%04X'</span><span class=\"pun\">,</span><span class=\"pln\"> mt_rand</span><span class=\"pun\">(</span><span class=\"lit\">0</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"lit\">65535</span><span class=\"pun\">),</span><span class=\"pln\"> mt_rand</span><span class=\"pun\">(</span><span class=\"lit\">0</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"lit\">65535</span><span class=\"pun\">),</span><span class=\"pln\"> mt_rand</span><span class=\"pun\">(</span><span class=\"lit\">0</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"lit\">65535</span><span class=\"pun\">),</span><span class=\"pln\"> mt_rand</span><span class=\"pun\">(</span><span class=\"lit\">16384</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"lit\">20479</span><span class=\"pun\">),</span><span class=\"pln\"> mt_rand</span><span class=\"pun\">(</span><span class=\"lit\">32768</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"lit\">49151</span><span class=\"pun\">),</span><span class=\"pln\"> mt_rand</span><span class=\"pun\">(</span><span class=\"lit\">0</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"lit\">65535</span><span class=\"pun\">),</span><span class=\"pln\"> mt_rand</span><span class=\"pun\">(</span><span class=\"lit\">0</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"lit\">65535</span><span class=\"pun\">),</span><span class=\"pln\"> mt_rand</span><span class=\"pun\">(</span><span class=\"lit\">0</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"lit\">65535</span><span class=\"pun\">))</span><span class=\"pln\"> </span><span class=\"pun\">.</span><span class=\"pln\"> </span><span class=\"str\">'-'</span><span class=\"pln\"> </span><span class=\"pun\">.</span><span class=\"pln\"> md5</span><span class=\"pun\">(</span><span class=\"pln\">time</span><span class=\"pun\">());</span><span class=\"pln\"> </span><span class=\"com\">// md5 hash the time at the end for extra uniqueness</span><span class=\"pln\">\r\n</span><span class=\"pun\">}</span><span class=\"pln\">\r\n\r\n</span><span class=\"com\">/// Upload to the cloud function</span><span class=\"pln\">\r\n</span><span class=\"kwd\">function</span><span class=\"pln\"> toTheCloud</span><span class=\"pun\">(</span><span class=\"pln\">$username</span><span class=\"pun\">,</span><span class=\"pln\"> $api_key</span><span class=\"pun\">,</span><span class=\"pln\"> $container</span><span class=\"pun\">,</span><span class=\"pln\"> $container_region</span><span class=\"pun\">){</span><span class=\"pln\">\r\n\r\n</span><span class=\"kwd\">if</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"pln\">$_FILES</span><span class=\"pun\">[</span><span class=\"str\">\"file\"</span><span class=\"pun\">][</span><span class=\"str\">\"error\"</span><span class=\"pun\">]</span><span class=\"pln\"> </span><span class=\"pun\">&gt;</span><span class=\"pln\"> </span><span class=\"lit\">0</span><span class=\"pun\">){</span><span class=\"pln\">\r\n\r\necho </span><span class=\"str\">\"Error: \"</span><span class=\"pln\"> </span><span class=\"pun\">.</span><span class=\"pln\"> $_FILES</span><span class=\"pun\">[</span><span class=\"str\">\"file\"</span><span class=\"pun\">][</span><span class=\"str\">\"error\"</span><span class=\"pun\">];</span><span class=\"pln\">\r\n\r\n</span><span class=\"pun\">}</span><span class=\"pln\"> </span><span class=\"kwd\">else</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\r\n\r\n</span><span class=\"com\">///// Point these to your rackspace api files!&nbsp; Get yours here: https://github.com/rackspace/php-opencloud</span><span class=\"pln\">\r\nrequire_once</span><span class=\"pun\">(</span><span class=\"str\">'rs-opencloud/lib/rackspace.php'</span><span class=\"pun\">);</span><span class=\"pln\">\r\nrequire_once</span><span class=\"pun\">(</span><span class=\"str\">'rs-opencloud/lib/objectstore.php'</span><span class=\"pun\">);</span><span class=\"pln\">\r\n\r\ndefine</span><span class=\"pun\">(</span><span class=\"str\">'AUTHURL'</span><span class=\"pun\">,</span><span class=\"pln\"> RACKSPACE_US</span><span class=\"pun\">);</span><span class=\"pln\">\r\n\r\n</span><span class=\"com\">// establish our credentials</span><span class=\"pln\">\r\n$conn </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"kwd\">new</span><span class=\"pln\"> </span><span class=\"typ\">OpenCloud</span><span class=\"pln\">\\Rackspace</span><span class=\"pun\">(</span><span class=\"pln\">AUTHURL</span><span class=\"pun\">,</span><span class=\"pln\">\r\narray</span><span class=\"pun\">(</span><span class=\"pln\"> </span><span class=\"str\">'username'</span><span class=\"pln\"> </span><span class=\"pun\">=&gt;</span><span class=\"pln\"> $username</span><span class=\"pun\">,</span><span class=\"pln\">\r\n</span><span class=\"str\">'apiKey'</span><span class=\"pln\"> </span><span class=\"pun\">=&gt;</span><span class=\"pln\"> $api_key </span><span class=\"pun\">));</span><span class=\"pln\">\r\n\r\n</span><span class=\"com\">/// Change file name</span><span class=\"pln\">\r\n$ext </span><span class=\"pun\">=</span><span class=\"pln\"> pathinfo</span><span class=\"pun\">(</span><span class=\"pln\">$_FILES</span><span class=\"pun\">[</span><span class=\"str\">'file'</span><span class=\"pun\">][</span><span class=\"str\">'name'</span><span class=\"pun\">],</span><span class=\"pln\"> PATHINFO_EXTENSION</span><span class=\"pun\">);</span><span class=\"pln\">\r\n$filename </span><span class=\"pun\">=</span><span class=\"pln\"> strtolower</span><span class=\"pun\">(</span><span class=\"pln\">guid</span><span class=\"pun\">())</span><span class=\"pln\"> </span><span class=\"pun\">.</span><span class=\"pln\"> </span><span class=\"str\">\".\"</span><span class=\"pln\"> </span><span class=\"pun\">.</span><span class=\"pln\"> $ext</span><span class=\"pun\">;</span><span class=\"pln\">\r\n$_FILES</span><span class=\"pun\">[</span><span class=\"str\">'file'</span><span class=\"pun\">][</span><span class=\"str\">'name'</span><span class=\"pun\">]</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> $filename</span><span class=\"pun\">;</span><span class=\"pln\">\r\n\r\n</span><span class=\"com\">// Validate the file type</span><span class=\"pln\">\r\n$fileTypes </span><span class=\"pun\">=</span><span class=\"pln\"> array</span><span class=\"pun\">(</span><span class=\"str\">'jpg'</span><span class=\"pun\">,</span><span class=\"str\">'jpeg'</span><span class=\"pun\">,</span><span class=\"str\">'gif'</span><span class=\"pun\">,</span><span class=\"str\">'png'</span><span class=\"pun\">);</span><span class=\"pln\"> </span><span class=\"com\">// File extensions</span><span class=\"pln\">\r\n$fileParts </span><span class=\"pun\">=</span><span class=\"pln\"> pathinfo</span><span class=\"pun\">(</span><span class=\"pln\">$_FILES</span><span class=\"pun\">[</span><span class=\"str\">'file'</span><span class=\"pun\">][</span><span class=\"str\">'name'</span><span class=\"pun\">]);</span><span class=\"pln\">\r\n\r\n</span><span class=\"com\">//// Save file if valid</span><span class=\"pln\">\r\n</span><span class=\"kwd\">if</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"pln\">in_array</span><span class=\"pun\">(</span><span class=\"pln\">$fileParts</span><span class=\"pun\">[</span><span class=\"str\">'extension'</span><span class=\"pun\">],</span><span class=\"pln\">$fileTypes</span><span class=\"pun\">))</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\r\n\r\n$ostore </span><span class=\"pun\">=</span><span class=\"pln\"> $conn</span><span class=\"pun\">-&gt;</span><span class=\"typ\">ObjectStore</span><span class=\"pun\">(</span><span class=\"str\">'cloudFiles'</span><span class=\"pun\">,</span><span class=\"pln\"> $container_region</span><span class=\"pun\">);</span><span class=\"pln\">\r\n\r\n</span><span class=\"com\">// now, connect to the ObjectStore service</span><span class=\"pln\">\r\n$cont </span><span class=\"pun\">=</span><span class=\"pln\"> $ostore</span><span class=\"pun\">-&gt;</span><span class=\"typ\">Container</span><span class=\"pun\">(</span><span class=\"pln\">$container</span><span class=\"pun\">);</span><span class=\"pln\">\r\n\r\n</span><span class=\"com\">// store file information</span><span class=\"pln\">\r\n$tempfile </span><span class=\"pun\">=</span><span class=\"pln\"> $_FILES</span><span class=\"pun\">[</span><span class=\"str\">'file'</span><span class=\"pun\">][</span><span class=\"str\">'tmp_name'</span><span class=\"pun\">];</span><span class=\"pln\">\r\n$filetype </span><span class=\"pun\">=</span><span class=\"pln\"> $_FILES</span><span class=\"pun\">[</span><span class=\"str\">'file'</span><span class=\"pun\">][</span><span class=\"str\">'type'</span><span class=\"pun\">];</span><span class=\"pln\">\r\n\r\n$obj </span><span class=\"pun\">=</span><span class=\"pln\"> $cont</span><span class=\"pun\">-&gt;</span><span class=\"typ\">DataObject</span><span class=\"pun\">();</span><span class=\"pln\">\r\n$obj</span><span class=\"pun\">-&gt;</span><span class=\"typ\">Create</span><span class=\"pun\">(</span><span class=\"pln\">array</span><span class=\"pun\">(</span><span class=\"str\">'name'</span><span class=\"pun\">=&gt;</span><span class=\"pln\">$filename</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"str\">'content_type'</span><span class=\"pun\">=&gt;</span><span class=\"pln\">$filetype</span><span class=\"pun\">),</span><span class=\"pln\">\r\n$tempfile</span><span class=\"pun\">);</span><span class=\"pln\">\r\n\r\necho </span><span class=\"str\">'Success!'</span><span class=\"pun\">;</span><span class=\"pln\">\r\n\r\n</span><span class=\"com\">/*\r\n\r\nAfter the upload was a success,\r\nyou can grab the filename and store it\r\nto a database for use later\r\nin this area.\r\n\r\n*/</span><span class=\"pln\">\r\n\r\n</span><span class=\"pun\">}</span><span class=\"pln\"> </span><span class=\"kwd\">else</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\r\n\r\necho </span><span class=\"str\">'Invalid file type.'</span><span class=\"pun\">;</span><span class=\"pln\">\r\n\r\n</span><span class=\"pun\">}</span><span class=\"pln\">\r\n</span><span class=\"pun\">}</span><span class=\"pln\">\r\n</span><span class=\"pun\">}</span><span class=\"pln\">\r\n\r\n</span><span class=\"com\">//// If we are uploading</span><span class=\"pln\">\r\n</span><span class=\"kwd\">if</span><span class=\"pln\"> </span><span class=\"pun\">(!</span><span class=\"pln\">empty</span><span class=\"pun\">(</span><span class=\"pln\">$_FILES</span><span class=\"pun\">))</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\r\n\r\ntoTheCloud</span><span class=\"pun\">(</span><span class=\"pln\">$username</span><span class=\"pun\">,</span><span class=\"pln\"> $api_key</span><span class=\"pun\">,</span><span class=\"pln\"> $container</span><span class=\"pun\">,</span><span class=\"pln\"> $container_region</span><span class=\"pun\">);</span><span class=\"pln\">\r\n</span><span class=\"pun\">}</span><span class=\"pln\">\r\n</span><span class=\"pun\">?&gt;</span><span class=\"pln\">\r\n</span><span class=\"tag\">&lt;form</span><span class=\"pln\"> </span><span class=\"atn\">enctype</span><span class=\"pun\">=</span><span class=\"atv\">\"multipart/form-data\"</span><span class=\"pln\"> </span><span class=\"atn\">action</span><span class=\"pun\">=</span><span class=\"atv\">\"\"</span><span class=\"pln\"> </span><span class=\"atn\">method</span><span class=\"pun\">=</span><span class=\"atv\">\"post\"</span><span class=\"tag\">&gt;</span><span class=\"pln\">\r\n</span><span class=\"tag\">&lt;input</span><span class=\"pln\"> </span><span class=\"atn\">type</span><span class=\"pun\">=</span><span class=\"atv\">\"file\"</span><span class=\"pln\"> </span><span class=\"atn\">name</span><span class=\"pun\">=</span><span class=\"atv\">\"file\"</span><span class=\"pln\"> </span><span class=\"tag\">/&gt;</span><span class=\"pln\">\r\n</span><span class=\"tag\">&lt;input</span><span class=\"pln\"> </span><span class=\"atn\">type</span><span class=\"pun\">=</span><span class=\"atv\">\"submit\"</span><span class=\"pln\"> </span><span class=\"atn\">value</span><span class=\"pun\">=</span><span class=\"atv\">\"To the cloud!\"</span><span class=\"pln\"> </span><span class=\"tag\">/&gt;</span><span class=\"pln\">\r\n</span><span class=\"tag\">&lt;/form&gt;</span></pre>",
        "metafields": [
          {
            "object_type": "authors",
            "edit": 1,
            "value": "5712bb5de9c686d006000013",
            "key": "author",
            "title": "Author",
            "type": "object",
            "children": false
          },
          {
            "edit": 1,
            "value": "",
            "key": "hero",
            "title": "Hero",
            "type": "file",
            "children": false
          },
          {
            "edit": 1,
            "value": "",
            "key": "tag",
            "title": "Tag",
            "type": "text",
            "children": false
          },
          {
            "edit": 1,
            "value": "<p><br></p>",
            "key": "teaser",
            "title": "Teaser",
            "type": "html-textarea",
            "children": false
          },
          {
            "edit": 1,
            "value": "2013-05-09",
            "key": "published",
            "title": "Published",
            "type": "date",
            "children": false
          }
        ],
        "type_slug": "posts",
        "created": "2016-03-20T00:33:02.401Z",
        "user_id": "5357ef811693be2118000001",
        "options": null,
        "order": 24,
        "modified": "2016-04-17T18:39:57.255Z",
        "status": "published"
      },
      {
        "_id": "56edefbee6dcdbb570000012",
        "old_id": "56edefbe952f68b570a025c5",
        "bucket": "56edeedd694d9a5e6f000031",
        "slug": "class-that-stores-your-database-queries-to-memcached",
        "title": "Class That Stores Your Database Queries To Memcached",
        "content": "I am a big fan of <a href=\"http://memcached.org/\">Memcached</a> and recently built a class that stores database queries to memcached simply and with scalability.  \r\n\r\nHere's the hypothetical problem that this class solves:  \r\n\r\nTraffic to your site has been growing quickly and burdening your database and now your existing database queries just won't cut it anymore and now you want to let Memcached lighten the load with it's awesome memory caching system.  \r\n\r\nYou have lots of different calls to different database elements and need a flexible class that 1. checks if the data is already in memcached, 2. if not it grabs it from the database, then 3. Stores the data in memcached for future use, thus limiting the call to the database and promoting faster and more reliable performance.  \r\n\r\nWell this php class does just that in a memcached enabled environment (it even checks to make sure memcached is available!).  \r\n\r\nOk let's do this.\r\n\r\nMake sure you have Memcached enabled on your server.  To check this, just run the script:\r\n\r\n<pre class=\"prettyprint prettyprinted\"><span class=\"pun\">&lt;?</span><span class=\"pln\">php\r\n</span><span class=\"com\">/* \r\nYou are actually checking for Memcache\r\nCare to find out more on why this is, you can check out this forum post: http://serverfault.com/questions/63383/memcache-vs-memcached\r\n*/</span><span class=\"pln\">\r\n\r\n</span><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"pln\">class_exists</span><span class=\"pun\">(</span><span class=\"str\">'Memcache'</span><span class=\"pun\">)){</span><span class=\"pln\">\r\n  </span><span class=\"com\">// Memcache is enabled.</span><span class=\"pln\">\r\n  echo </span><span class=\"str\">\"Sure is Bob\"</span><span class=\"pun\">;</span><span class=\"pln\">\r\n</span><span class=\"pun\">}</span><span class=\"pln\"> </span><span class=\"kwd\">else</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\r\n   echo </span><span class=\"str\">\"No way Jose\"</span><span class=\"pun\">;</span><span class=\"pln\">\r\n</span><span class=\"pun\">}</span><span class=\"pln\">\r\n</span><span class=\"pun\">?&gt;</span></pre>\r\n\r\nIf you don't have it installed, there are lots of articles out there that will help you install it on your particular machine.  If you are installing onto a a CentOS Linux Server like myself, I found this article helpful: <a href=\"http://mrphp.com.au/blog/install-memcache-cpanel-running-centos\">http://mrphp.com.au/blog/install-memcache-cpanel-running-centos</a>.\r\n\r\nAnd now after all this is setup and configured properly, we can built our class.\r\n\r\nHere is the class:\r\n\r\n<pre class=\"prettyprint prettyprinted\"><span class=\"pun\">&lt;?</span><span class=\"pln\">php\r\n</span><span class=\"com\">// Memcache connection constants</span><span class=\"pln\">\r\ndefine</span><span class=\"pun\">(</span><span class=\"str\">'MEMCACHED_HOST'</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"str\">'127.0.0.1'</span><span class=\"pun\">);</span><span class=\"pln\">\r\ndefine</span><span class=\"pun\">(</span><span class=\"str\">'MEMCACHED_PORT'</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"str\">'11211'</span><span class=\"pun\">);</span><span class=\"pln\">\r\n\r\n</span><span class=\"kwd\">class</span><span class=\"pln\"> </span><span class=\"typ\">MemcacheItem</span><span class=\"pun\">{</span><span class=\"pln\">\r\n        </span><span class=\"com\">//// Sets the memcache item with a key</span><span class=\"pln\">\r\n\t</span><span class=\"kwd\">function</span><span class=\"pln\"> cacheAvailable</span><span class=\"pun\">(){</span><span class=\"pln\">\r\n\t\t</span><span class=\"com\">// Connection creation</span><span class=\"pln\">\r\n\t\t$memcache </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"kwd\">new</span><span class=\"pln\"> </span><span class=\"typ\">Memcache</span><span class=\"pun\">;</span><span class=\"pln\">\r\n\t\t</span><span class=\"kwd\">return</span><span class=\"pln\"> $memcache</span><span class=\"pun\">-&gt;</span><span class=\"pln\">connect</span><span class=\"pun\">(</span><span class=\"pln\">MEMCACHED_HOST</span><span class=\"pun\">,</span><span class=\"pln\"> MEMCACHED_PORT</span><span class=\"pun\">);</span><span class=\"pln\">\r\n\t</span><span class=\"pun\">}</span><span class=\"pln\">\r\n\r\n        </span><span class=\"kwd\">function</span><span class=\"pln\"> </span><span class=\"kwd\">set</span><span class=\"pun\">(</span><span class=\"pln\">$key</span><span class=\"pun\">,</span><span class=\"pln\"> $itemArray</span><span class=\"pun\">){</span><span class=\"pln\">\r\n\t\t\r\n\t\t</span><span class=\"com\">// Connection creation</span><span class=\"pln\">\r\n\t\t$memcache </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"kwd\">new</span><span class=\"pln\"> </span><span class=\"typ\">Memcache</span><span class=\"pun\">;</span><span class=\"pln\">\r\n\t\t</span><span class=\"com\">// And we ask Memcached to set the data</span><span class=\"pln\">\r\n\t\t</span><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"pln\">$this</span><span class=\"pun\">-&gt;</span><span class=\"pln\">cacheAvailable</span><span class=\"pun\">())</span><span class=\"pln\"> $memcache</span><span class=\"pun\">-&gt;</span><span class=\"kwd\">set</span><span class=\"pun\">(</span><span class=\"pln\">$key</span><span class=\"pun\">,</span><span class=\"pln\"> $itemArray</span><span class=\"pun\">);</span><span class=\"pln\">\r\n\t\t\r\n\t</span><span class=\"pun\">}</span><span class=\"pln\">\r\n        </span><span class=\"com\">//// Gets the memcache item by its key\t</span><span class=\"pln\">\r\n\t</span><span class=\"kwd\">function</span><span class=\"pln\"> </span><span class=\"kwd\">get</span><span class=\"pun\">(</span><span class=\"pln\">$key</span><span class=\"pun\">){</span><span class=\"pln\">\r\n\t\t\r\n\t\t</span><span class=\"com\">// Connection creation</span><span class=\"pln\">\r\n\t\t$memcache </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"kwd\">new</span><span class=\"pln\"> </span><span class=\"typ\">Memcache</span><span class=\"pun\">;</span><span class=\"pln\">\r\n\t\t</span><span class=\"com\">// And we ask Memcached to get the data</span><span class=\"pln\">\r\n\t\t</span><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"pln\">$this</span><span class=\"pun\">-&gt;</span><span class=\"pln\">cacheAvailable</span><span class=\"pun\">())</span><span class=\"pln\"> </span><span class=\"kwd\">return</span><span class=\"pln\"> $memcache</span><span class=\"pun\">-&gt;</span><span class=\"kwd\">get</span><span class=\"pun\">(</span><span class=\"pln\">$key</span><span class=\"pun\">);</span><span class=\"pln\">\r\n\t\t\r\n\t</span><span class=\"pun\">}</span><span class=\"pln\">\r\n        </span><span class=\"com\">//// Deletes the memcache by its key</span><span class=\"pln\">\r\n\t</span><span class=\"kwd\">function</span><span class=\"pln\"> </span><span class=\"kwd\">delete</span><span class=\"pun\">(</span><span class=\"pln\">$key</span><span class=\"pun\">){</span><span class=\"pln\">\r\n\t\t\r\n\t\t</span><span class=\"com\">// Connection creation</span><span class=\"pln\">\r\n\t\t$memcache </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"kwd\">new</span><span class=\"pln\"> </span><span class=\"typ\">Memcache</span><span class=\"pun\">;</span><span class=\"pln\">\r\n\t\t</span><span class=\"com\">// And we ask Memcached to delete the data</span><span class=\"pln\">\r\n\t\t</span><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"pln\">$this</span><span class=\"pun\">-&gt;</span><span class=\"pln\">cacheAvailable</span><span class=\"pun\">())</span><span class=\"pln\"> $memcache</span><span class=\"pun\">-&gt;</span><span class=\"kwd\">delete</span><span class=\"pun\">(</span><span class=\"pln\">$key</span><span class=\"pun\">);</span><span class=\"pln\">\r\n\t\t\r\n\t</span><span class=\"pun\">}</span><span class=\"pln\">\r\n        </span><span class=\"com\">//// Query memcache first, then the database</span><span class=\"pln\">\r\n\t</span><span class=\"kwd\">function</span><span class=\"pln\"> dbMemeQuery</span><span class=\"pun\">(</span><span class=\"pln\">$table</span><span class=\"pun\">,</span><span class=\"pln\"> $field</span><span class=\"pun\">,</span><span class=\"pln\"> $id</span><span class=\"pun\">){</span><span class=\"pln\">\r\n\t\t\r\n\t\t</span><span class=\"com\">/// Memcache </span><span class=\"pln\">\r\n\t\t$memcache </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"kwd\">new</span><span class=\"pln\"> </span><span class=\"typ\">Memcache</span><span class=\"pun\">;</span><span class=\"pln\">\r\n\t\t$cacheAvailable </span><span class=\"pun\">=</span><span class=\"pln\"> $memcache</span><span class=\"pun\">-&gt;</span><span class=\"pln\">connect</span><span class=\"pun\">(</span><span class=\"pln\">MEMCACHED_HOST</span><span class=\"pun\">,</span><span class=\"pln\"> MEMCACHED_PORT</span><span class=\"pun\">);</span><span class=\"pln\">\r\n\t\t$key </span><span class=\"pun\">=</span><span class=\"pln\"> $table </span><span class=\"pun\">.</span><span class=\"pln\"> </span><span class=\"str\">'-'</span><span class=\"pln\"> </span><span class=\"pun\">.</span><span class=\"pln\"> $field </span><span class=\"pun\">.</span><span class=\"pln\"> </span><span class=\"str\">'-'</span><span class=\"pln\"> </span><span class=\"pun\">.</span><span class=\"pln\"> $id</span><span class=\"pun\">;</span><span class=\"pln\">\r\n        </span><span class=\"com\">//// Make sure memcache available</span><span class=\"pln\">\r\n\t\t</span><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"pln\">$this</span><span class=\"pun\">-&gt;</span><span class=\"pln\">cacheAvailable</span><span class=\"pun\">()){</span><span class=\"pln\">\r\n\t\t\t\r\n\t\t \t$tableArr </span><span class=\"pun\">=</span><span class=\"pln\"> $memcache</span><span class=\"pun\">-&gt;</span><span class=\"kwd\">get</span><span class=\"pun\">(</span><span class=\"pln\">$key</span><span class=\"pun\">);</span><span class=\"pln\">\r\n\t\t\r\n\t\t</span><span class=\"pun\">}</span><span class=\"pln\">\r\n        </span><span class=\"com\">//// Query memcache first, then return if true</span><span class=\"pln\">\r\n\t\t</span><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"pln\">$tableArr</span><span class=\"pun\">[</span><span class=\"pln\">$field</span><span class=\"pun\">]){</span><span class=\"pln\">\r\n\t\t\t\r\n\t\t\t</span><span class=\"kwd\">return</span><span class=\"pln\"> $tableArr</span><span class=\"pun\">[</span><span class=\"pln\">$field</span><span class=\"pun\">];</span><span class=\"pln\">\r\n\t\t\t\r\n\t\t</span><span class=\"pun\">}</span><span class=\"pln\"> </span><span class=\"kwd\">else</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\r\n        </span><span class=\"com\">//// Query database and store value for later use</span><span class=\"pln\">\r\n\t\t\t$sql </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"str\">\"SELECT $field FROM $table WHERE id = '$id'\"</span><span class=\"pun\">;</span><span class=\"pln\"> \r\n\t\t\t$result </span><span class=\"pun\">=</span><span class=\"pln\"> mysql_query</span><span class=\"pun\">(</span><span class=\"pln\">$sql</span><span class=\"pun\">);</span><span class=\"pln\">\r\n\t\t\t\r\n\t\t\t</span><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"pln\">mysql_num_rows</span><span class=\"pun\">(</span><span class=\"pln\">$result</span><span class=\"pun\">)!==</span><span class=\"lit\">0</span><span class=\"pun\">){</span><span class=\"pln\">\r\n\t\t\t\t\r\n\t\t\t\t$value </span><span class=\"pun\">=</span><span class=\"pln\"> mysql_result</span><span class=\"pun\">(</span><span class=\"pln\">$result</span><span class=\"pun\">,</span><span class=\"lit\">0</span><span class=\"pun\">);</span><span class=\"pln\">\r\n\t\t\t\r\n\t\t\t\t$itemArray </span><span class=\"pun\">=</span><span class=\"pln\"> array</span><span class=\"pun\">(</span><span class=\"pln\">$field </span><span class=\"pun\">=&gt;</span><span class=\"pln\"> $value</span><span class=\"pun\">);</span><span class=\"pln\">\r\n\t\t\t\t\r\n\t\t\t\t$this</span><span class=\"pun\">-&gt;</span><span class=\"kwd\">set</span><span class=\"pun\">(</span><span class=\"pln\">$key</span><span class=\"pun\">,</span><span class=\"pln\">$itemArray</span><span class=\"pun\">);</span><span class=\"pln\">\r\n\t\t\t\t\r\n\t\t\t\t</span><span class=\"kwd\">return</span><span class=\"pln\"> $value</span><span class=\"pun\">;</span><span class=\"pln\">\r\n\t\t\t</span><span class=\"pun\">}</span><span class=\"pln\">\r\n\t\t\r\n\t\t</span><span class=\"pun\">}</span><span class=\"pln\">\r\n\t</span><span class=\"pun\">}</span><span class=\"pln\">\r\n\r\n</span><span class=\"pun\">}</span><span class=\"pln\">\r\n</span><span class=\"com\">//// Set this class for use</span><span class=\"pln\">\r\n$memcacheItem </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"kwd\">new</span><span class=\"pln\"> </span><span class=\"typ\">MemcacheItem</span><span class=\"pun\">;</span><span class=\"pln\">\r\n</span><span class=\"pun\">?&gt;</span></pre>\r\n\r\n\r\nThen we add the new class to our existing Database calling Class\r\n<pre class=\"prettyprint prettyprinted\"><span class=\"pun\">&lt;?</span><span class=\"pln\">php\r\n</span><span class=\"com\">/*\r\nThis class queries the cache first with values for table, field and uid from the database\r\nassuming we already have a database table for users with a field of city\r\nthat has a value of Dallas, TX\r\n*/</span><span class=\"pln\">\r\n</span><span class=\"kwd\">class</span><span class=\"pln\"> </span><span class=\"typ\">User</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\r\n\r\n\t</span><span class=\"kwd\">function</span><span class=\"pln\"> city</span><span class=\"pun\">(</span><span class=\"pln\">$uid</span><span class=\"pun\">){</span><span class=\"pln\">\r\n\t\t\r\n\t\t$memcacheItem </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"kwd\">new</span><span class=\"pln\"> </span><span class=\"typ\">MemcacheItem</span><span class=\"pun\">;</span><span class=\"pln\">\r\n                </span><span class=\"kwd\">return</span><span class=\"pln\"> $memcacheItem</span><span class=\"pun\">-&gt;</span><span class=\"pln\">dbMemeQuery</span><span class=\"pun\">(</span><span class=\"str\">'users'</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"str\">'city'</span><span class=\"pun\">,</span><span class=\"pln\"> $uid</span><span class=\"pun\">);</span><span class=\"pln\"> </span><span class=\"com\">/// Returns our value</span><span class=\"pln\">\r\n\t\r\n\t</span><span class=\"pun\">}</span><span class=\"pln\">\r\n</span><span class=\"pun\">}</span><span class=\"pln\">\r\n$user </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"kwd\">new</span><span class=\"pln\"> </span><span class=\"typ\">User</span><span class=\"pun\">;</span><span class=\"pln\">\r\necho $user</span><span class=\"pun\">-&gt;</span><span class=\"pln\">city</span><span class=\"pun\">(</span><span class=\"lit\">1</span><span class=\"pun\">);</span><span class=\"pln\"> </span><span class=\"com\">/// Returns Dallas, TX</span><span class=\"pln\">\r\n</span><span class=\"pun\">?&gt;</span></pre>\r\nThis will return Dallas, TX and store to the cache the memcached key \"users-city-1\" with value Dallas, TX so until this data is updated or deleted, it will always return Dallas, TX and never have to query the database.\r\n\r\nTo delete this value <strong>just from the cache</strong> run this:\r\n<pre class=\"prettyprint prettyprinted\"><span class=\"pun\">&lt;?</span><span class=\"pln\">php\r\n$memcache</span><span class=\"pun\">-&gt;</span><span class=\"kwd\">delete</span><span class=\"pun\">(</span><span class=\"str\">'users-city-1'</span><span class=\"pun\">);</span><span class=\"pln\">\r\n</span><span class=\"pun\">?&gt;</span></pre>\r\n\r\nAnd there you have it!  You can now store your database calls to the server's memory through Memcahced and serve up that data much faster and with less load on the DB server.",
        "metafields": [
          {
            "object_type": "authors",
            "edit": 1,
            "value": "5712bb5de9c686d006000013",
            "key": "author",
            "title": "Author",
            "type": "object",
            "children": false
          },
          {
            "edit": 1,
            "value": "",
            "key": "hero",
            "title": "Hero",
            "type": "file",
            "children": false
          },
          {
            "edit": 1,
            "value": "",
            "key": "tag",
            "title": "Tag",
            "type": "text",
            "children": false
          },
          {
            "edit": 1,
            "value": "<p><br></p>",
            "key": "teaser",
            "title": "Teaser",
            "type": "html-textarea",
            "children": false
          },
          {
            "edit": 1,
            "value": "2013-04-26",
            "key": "published",
            "title": "Published",
            "type": "date",
            "children": false
          }
        ],
        "type_slug": "posts",
        "created": "2016-03-20T00:33:02.400Z",
        "user_id": "5357ef811693be2118000001",
        "options": null,
        "order": 25,
        "modified": "2016-04-17T18:33:59.179Z",
        "status": "published"
      },
      {
        "_id": "56edefbee6dcdbb570000011",
        "old_id": "56edefbe952f68b570a025c4",
        "bucket": "56edeedd694d9a5e6f000031",
        "slug": "tslider-a-lightweight-and-easy-image-slider",
        "title": "TSlider: A Light-Weight and Easy-To-Implement  Image Slider",
        "content": "View the demo <a href=\"http://dev.tonyspiro.com/tslider\" target=\"_blank\">here</a>.\r\n\r\nIt seems like if you do an image slider / slideshow search online, everyone and their dog has one available. But what happens when you are working on a site that already has a slider that breaks if you try to plug in any of these available sliders? Well you build your own of course! That's exactly the issue I came across last week and I found the process of figuring out how the infinite scrolling sliders really work very rewarding. So without further ado I give you TSlider. Which you can see in live action here: <a href=\"http://dev.tonyspiro.com/tslider/\">http://dev.tonyspiro.com/tslider/</a>. It is also available on <a href=\"https://github.com/tonyspiro\">my github page</a>.\r\n\r\nSo just a little bit about how this works...\r\n\r\nHere's the markup:\r\n<pre class=\"prettyprint prettyprinted\"><span class=\"dec\">&lt;!doctype html&gt;</span><span class=\"pln\">\r\n</span><span class=\"tag\">&lt;html&gt;</span><span class=\"pln\">\r\n</span><span class=\"tag\">&lt;head&gt;</span><span class=\"pln\">\r\n&nbsp;&nbsp;&nbsp; </span><span class=\"tag\">&lt;title&gt;</span><span class=\"pln\">TSlider</span><span class=\"tag\">&lt;/title&gt;</span><span class=\"pln\">\r\n&nbsp;&nbsp;&nbsp; </span><span class=\"tag\">&lt;script</span><span class=\"pln\"> </span><span class=\"atn\">src</span><span class=\"pun\">=</span><span class=\"atv\">\"http://code.jquery.com/jquery-1.9.1.min.js\"</span><span class=\"tag\">&gt;&lt;/script&gt;</span><span class=\"pln\">\r\n&nbsp;&nbsp;&nbsp; </span><span class=\"tag\">&lt;link</span><span class=\"pln\"> </span><span class=\"atn\">type</span><span class=\"pun\">=</span><span class=\"atv\">'text/css'</span><span class=\"pln\"> </span><span class=\"atn\">rel</span><span class=\"pun\">=</span><span class=\"atv\">'stylesheet'</span><span class=\"pln\"> </span><span class=\"atn\">href</span><span class=\"pun\">=</span><span class=\"atv\">'style.css'</span><span class=\"pln\"> </span><span class=\"tag\">/&gt;</span><span class=\"pln\">\r\n</span><span class=\"tag\">&lt;/head&gt;</span><span class=\"pln\">\r\n</span><span class=\"tag\">&lt;body&gt;</span><span class=\"pln\">\r\n</span><span class=\"tag\">&lt;div</span><span class=\"pln\"> </span><span class=\"atn\">class</span><span class=\"pun\">=</span><span class=\"atv\">'container'</span><span class=\"tag\">&gt;</span><span class=\"pln\">\r\n&nbsp;&nbsp;&nbsp; </span><span class=\"tag\">&lt;div</span><span class=\"pln\"> </span><span class=\"atn\">class</span><span class=\"pun\">=</span><span class=\"atv\">'slider-viewport'</span><span class=\"tag\">&gt;</span><span class=\"pln\">\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=\"tag\">&lt;div</span><span class=\"pln\"> </span><span class=\"atn\">class</span><span class=\"pun\">=</span><span class=\"atv\">'slider-frame'</span><span class=\"tag\">&gt;</span><span class=\"pln\">\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=\"tag\">&lt;div</span><span class=\"pln\"> </span><span class=\"atn\">class</span><span class=\"pun\">=</span><span class=\"atv\">'slide'</span><span class=\"tag\">&gt;</span><span class=\"pln\">\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=\"tag\">&lt;img</span><span class=\"pln\"> </span><span class=\"atn\">src</span><span class=\"pun\">=</span><span class=\"atv\">'images/drums/1.jpg'</span><span class=\"pln\"> </span><span class=\"tag\">/&gt;</span><span class=\"pln\">\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=\"tag\">&lt;/div&gt;</span><span class=\"pln\">\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=\"tag\">&lt;div</span><span class=\"pln\"> </span><span class=\"atn\">class</span><span class=\"pun\">=</span><span class=\"atv\">'slide'</span><span class=\"tag\">&gt;</span><span class=\"pln\">\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=\"tag\">&lt;img</span><span class=\"pln\"> </span><span class=\"atn\">src</span><span class=\"pun\">=</span><span class=\"atv\">'images/drums/2.jpg'</span><span class=\"pln\"> </span><span class=\"tag\">/&gt;</span><span class=\"pln\">\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=\"tag\">&lt;/div&gt;</span><span class=\"pln\">\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=\"tag\">&lt;div</span><span class=\"pln\"> </span><span class=\"atn\">class</span><span class=\"pun\">=</span><span class=\"atv\">'slide'</span><span class=\"tag\">&gt;</span><span class=\"pln\">\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=\"tag\">&lt;img</span><span class=\"pln\"> </span><span class=\"atn\">src</span><span class=\"pun\">=</span><span class=\"atv\">'images/drums/3.jpg'</span><span class=\"pln\"> </span><span class=\"tag\">/&gt;</span><span class=\"pln\">\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=\"tag\">&lt;/div&gt;</span><span class=\"pln\">\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=\"tag\">&lt;div</span><span class=\"pln\"> </span><span class=\"atn\">class</span><span class=\"pun\">=</span><span class=\"atv\">'slide'</span><span class=\"tag\">&gt;</span><span class=\"pln\">\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=\"tag\">&lt;img</span><span class=\"pln\"> </span><span class=\"atn\">src</span><span class=\"pun\">=</span><span class=\"atv\">'images/drums/4.jpg'</span><span class=\"pln\"> </span><span class=\"tag\">/&gt;</span><span class=\"pln\">\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=\"tag\">&lt;/div&gt;</span><span class=\"pln\">\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=\"tag\">&lt;/div&gt;</span><span class=\"pln\">\r\n&nbsp;&nbsp;&nbsp; </span><span class=\"tag\">&lt;/div&gt;</span><span class=\"pln\">\r\n&nbsp;&nbsp;&nbsp; </span><span class=\"tag\">&lt;div</span><span class=\"pln\"> </span><span class=\"atn\">class</span><span class=\"pun\">=</span><span class=\"atv\">'nav right'</span><span class=\"tag\">&gt;</span><span class=\"pln\">\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=\"tag\">&lt;div</span><span class=\"pln\"> </span><span class=\"atn\">class</span><span class=\"pun\">=</span><span class=\"atv\">'left point'</span><span class=\"pln\"> </span><span class=\"atn\">id</span><span class=\"pun\">=</span><span class=\"atv\">'sliderPrev'</span><span class=\"tag\">&gt;</span><span class=\"pln\">Prev</span><span class=\"tag\">&lt;/div&gt;</span><span class=\"pln\">\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=\"tag\">&lt;div</span><span class=\"pln\"> </span><span class=\"atn\">class</span><span class=\"pun\">=</span><span class=\"atv\">'right point'</span><span class=\"pln\"> </span><span class=\"atn\">id</span><span class=\"pun\">=</span><span class=\"atv\">'sliderNext'</span><span class=\"tag\">&gt;</span><span class=\"pln\">Next</span><span class=\"tag\">&lt;/div&gt;</span><span class=\"pln\">\r\n&nbsp;&nbsp;&nbsp; </span><span class=\"tag\">&lt;/div&gt;</span><span class=\"pln\">\r\n</span><span class=\"tag\">&lt;/div&gt;</span><span class=\"pln\">\r\n</span><span class=\"tag\">&lt;script</span><span class=\"pln\"> </span><span class=\"atn\">src</span><span class=\"pun\">=</span><span class=\"atv\">\"js/tslider.js\"</span><span class=\"tag\">&gt;&lt;/script&gt;</span><span class=\"pln\">\r\n</span><span class=\"tag\">&lt;/body&gt;</span><span class=\"pln\">\r\n</span><span class=\"tag\">&lt;/html&gt;</span></pre>\r\n\r\nAnd the tslider.js file:\r\n<pre class=\"prettyprint prettyprinted\"><span class=\"pln\">$</span><span class=\"pun\">(</span><span class=\"pln\">document</span><span class=\"pun\">).</span><span class=\"pln\">ready</span><span class=\"pun\">(</span><span class=\"kwd\">function</span><span class=\"pun\">()</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\r\n\t\r\n\t</span><span class=\"com\">////////////////////////////////////////////////////\t</span><span class=\"pln\">\r\n\t</span><span class=\"com\">////////////////////////////////////////////////////</span><span class=\"pln\">\r\n\t</span><span class=\"com\">////////////\t\t\t\t////////////</span><span class=\"pln\">\r\n\t</span><span class=\"com\">////////////\t\tSlider Init\t////////////</span><span class=\"pln\">\r\n\t</span><span class=\"com\">////////////\t\t\t\t////////////</span><span class=\"pln\">\r\n\t</span><span class=\"com\">////////////////////////////////////////////////////</span><span class=\"pln\">\r\n\t</span><span class=\"com\">////////////////////////////////////////////////////</span><span class=\"pln\">\r\n\t\r\n\t\r\n\t</span><span class=\"com\">/// Set your variables</span><span class=\"pln\">\r\n\t</span><span class=\"kwd\">var</span><span class=\"pln\"> numSlides </span><span class=\"pun\">=</span><span class=\"pln\"> $</span><span class=\"pun\">(</span><span class=\"str\">\".slide\"</span><span class=\"pun\">).</span><span class=\"pln\">length</span><span class=\"pun\">;</span><span class=\"pln\">\r\n\t</span><span class=\"kwd\">var</span><span class=\"pln\"> slideWidth </span><span class=\"pun\">=</span><span class=\"pln\"> $</span><span class=\"pun\">(</span><span class=\"str\">\".slide\"</span><span class=\"pun\">).</span><span class=\"pln\">width</span><span class=\"pun\">();</span><span class=\"pln\">\r\n\t\r\n\t</span><span class=\"com\">/// Start the show!</span><span class=\"pln\">\r\n\t</span><span class=\"kwd\">var</span><span class=\"pln\"> onSlide </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"lit\">1</span><span class=\"pun\">;</span><span class=\"pln\">\r\n\t\r\n\tgoToSlide</span><span class=\"pun\">(</span><span class=\"pln\">onSlide</span><span class=\"pun\">,</span><span class=\"pln\"> slideWidth</span><span class=\"pun\">);</span><span class=\"pln\">\r\n\t\r\n\t</span><span class=\"kwd\">var</span><span class=\"pln\"> num </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"lit\">1</span><span class=\"pun\">;</span><span class=\"pln\">\r\n\t$</span><span class=\"pun\">(</span><span class=\"str\">\".slide\"</span><span class=\"pun\">).</span><span class=\"pln\">each</span><span class=\"pun\">(</span><span class=\"kwd\">function</span><span class=\"pun\">(){</span><span class=\"pln\">\r\n\t\t$</span><span class=\"pun\">(</span><span class=\"kwd\">this</span><span class=\"pun\">).</span><span class=\"pln\">attr</span><span class=\"pun\">(</span><span class=\"str\">\"id\"</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"str\">'slide'</span><span class=\"pln\"> </span><span class=\"pun\">+</span><span class=\"pln\"> num</span><span class=\"pun\">);</span><span class=\"pln\">\r\n\t\tnum</span><span class=\"pun\">++;</span><span class=\"pln\">\r\n\t</span><span class=\"pun\">});</span><span class=\"pln\">\r\n\t\r\n\t\r\n\t</span><span class=\"kwd\">var</span><span class=\"pln\"> turnedOff </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"kwd\">false</span><span class=\"pun\">;</span><span class=\"pln\">\r\n\t</span><span class=\"com\">//// Auto slide?  Sure</span><span class=\"pln\">\r\n\tsetInterval</span><span class=\"pun\">(</span><span class=\"kwd\">function</span><span class=\"pun\">(){</span><span class=\"pln\">\r\n\t\t</span><span class=\"com\">/// If auto slider not turned off</span><span class=\"pln\">\r\n\t \t</span><span class=\"kwd\">if</span><span class=\"pun\">(!</span><span class=\"pln\">turnedOff</span><span class=\"pun\">){</span><span class=\"pln\">\r\n\t\t $</span><span class=\"pun\">(</span><span class=\"str\">\".slider-frame\"</span><span class=\"pun\">).</span><span class=\"pln\">animate</span><span class=\"pun\">({</span><span class=\"pln\">\r\n\t\t\tleft</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"str\">'-='</span><span class=\"pln\"> </span><span class=\"pun\">+</span><span class=\"pln\"> slideWidth </span><span class=\"pun\">+</span><span class=\"str\">'px'</span><span class=\"pun\">,</span><span class=\"pln\">\r\n\t\t\t</span><span class=\"pun\">},</span><span class=\"pln\"> </span><span class=\"str\">'slow'</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"kwd\">function</span><span class=\"pun\">()</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\r\n\t\t\t</span><span class=\"com\">// Animation complete.</span><span class=\"pln\">\r\n\t\t\t</span><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"pln\">window</span><span class=\"pun\">.</span><span class=\"pln\">onSlide</span><span class=\"pun\">)</span><span class=\"pln\"> onSlide </span><span class=\"pun\">=</span><span class=\"pln\"> window</span><span class=\"pun\">.</span><span class=\"pln\">onSlide</span><span class=\"pun\">;</span><span class=\"pln\">\r\n\t\t\twindow</span><span class=\"pun\">.</span><span class=\"pln\">onSlide</span><span class=\"pun\">=</span><span class=\"kwd\">false</span><span class=\"pun\">;</span><span class=\"pln\">\r\n\t\t\t\r\n\t\t\t</span><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"pln\">onSlide </span><span class=\"pun\">==</span><span class=\"pln\"> numSlides</span><span class=\"pun\">){</span><span class=\"pln\">\r\n\t\t\t\tonSlide </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"lit\">1</span><span class=\"pun\">;</span><span class=\"pln\">\r\n\t\t\t\tresetFront</span><span class=\"pun\">(</span><span class=\"pln\">slideWidth</span><span class=\"pun\">);</span><span class=\"pln\">\r\n\t\t\t</span><span class=\"pun\">}</span><span class=\"pln\"> </span><span class=\"kwd\">else</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\r\n\t\t\t\tonSlide </span><span class=\"pun\">=</span><span class=\"pln\"> parseInt</span><span class=\"pun\">(</span><span class=\"pln\">onSlide</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">+</span><span class=\"pln\"> </span><span class=\"lit\">1</span><span class=\"pun\">;</span><span class=\"pln\">\t\r\n\t\t\t</span><span class=\"pun\">}</span><span class=\"pln\">\r\n\t\t</span><span class=\"pun\">});</span><span class=\"pln\">\t\r\n\t \t</span><span class=\"pun\">}</span><span class=\"pln\">\r\n\t </span><span class=\"pun\">},</span><span class=\"pln\"> </span><span class=\"lit\">3000</span><span class=\"pun\">);</span><span class=\"pln\">\r\n\t\r\n\t</span><span class=\"com\">/// Add clones</span><span class=\"pln\">\r\n\t</span><span class=\"kwd\">var</span><span class=\"pln\"> firstSlide </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"str\">\"</span><div class=\"slide\" id=\"cloneFirst\"><span class=\"str\">\"</span><span class=\"pln\"> </span><span class=\"pun\">+</span><span class=\"pln\"> $</span><span class=\"pun\">(</span><span class=\"str\">\"#slide1\"</span><span class=\"pun\">).</span><span class=\"pln\">html</span><span class=\"pun\">()</span><span class=\"pln\"> </span><span class=\"pun\">+</span><span class=\"pln\"> </span><span class=\"str\">\"</span></div><span class=\"str\">\"</span><span class=\"pun\">;</span><span class=\"pln\">\r\n\t$</span><span class=\"pun\">(</span><span class=\"str\">\".slider-frame\"</span><span class=\"pun\">).</span><span class=\"pln\">append</span><span class=\"pun\">(</span><span class=\"pln\">firstSlide</span><span class=\"pun\">);</span><span class=\"pln\">\r\n\t\r\n\t</span><span class=\"kwd\">var</span><span class=\"pln\"> lastSlide </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"str\">\"</span><div class=\"slide\" id=\"cloneLast\"><span class=\"str\">\"</span><span class=\"pln\"> </span><span class=\"pun\">+</span><span class=\"pln\"> $</span><span class=\"pun\">(</span><span class=\"str\">\"#slide\"</span><span class=\"pln\"> </span><span class=\"pun\">+</span><span class=\"pln\"> numSlides</span><span class=\"pun\">).</span><span class=\"pln\">html</span><span class=\"pun\">()</span><span class=\"pln\"> </span><span class=\"pun\">+</span><span class=\"pln\"> </span><span class=\"str\">\"</span></div><span class=\"str\">\"</span><span class=\"pun\">;</span><span class=\"pln\">\r\n\t$</span><span class=\"pun\">(</span><span class=\"str\">\".slider-frame\"</span><span class=\"pun\">).</span><span class=\"pln\">prepend</span><span class=\"pun\">(</span><span class=\"pln\">lastSlide</span><span class=\"pun\">);</span><span class=\"pln\">\r\n\t\r\n\t</span><span class=\"com\">///// Start Nav</span><span class=\"pln\">\r\n\t\r\n\t</span><span class=\"com\">//// Click prev</span><span class=\"pln\">\r\n\t$</span><span class=\"pun\">(</span><span class=\"str\">\"#sliderPrev\"</span><span class=\"pun\">).</span><span class=\"pln\">click</span><span class=\"pun\">(</span><span class=\"kwd\">function</span><span class=\"pun\">(</span><span class=\"kwd\">event</span><span class=\"pun\">){</span><span class=\"pln\">\t\r\n\t\t</span><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"pln\">num</span><span class=\"pun\">==</span><span class=\"lit\">0</span><span class=\"pun\">)</span><span class=\"pln\"> num </span><span class=\"pun\">=</span><span class=\"pln\"> numSlides</span><span class=\"pun\">;</span><span class=\"pln\">\r\n\t\t $</span><span class=\"pun\">(</span><span class=\"str\">\".slider-frame\"</span><span class=\"pun\">).</span><span class=\"pln\">animate</span><span class=\"pun\">({</span><span class=\"pln\">\r\n\t\t\tleft</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"str\">'+='</span><span class=\"pln\"> </span><span class=\"pun\">+</span><span class=\"pln\"> slideWidth </span><span class=\"pun\">+</span><span class=\"pln\"> </span><span class=\"str\">'px'</span><span class=\"pun\">,</span><span class=\"pln\">\r\n\t\t\t</span><span class=\"pun\">},</span><span class=\"pln\"> </span><span class=\"str\">'slow'</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"kwd\">function</span><span class=\"pun\">()</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\r\n\t\t\t</span><span class=\"com\">// Animation complete.</span><span class=\"pln\">\r\n\t\t\t</span><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"pln\">window</span><span class=\"pun\">.</span><span class=\"pln\">onSlide</span><span class=\"pun\">)</span><span class=\"pln\"> onSlide </span><span class=\"pun\">=</span><span class=\"pln\"> window</span><span class=\"pun\">.</span><span class=\"pln\">onSlide</span><span class=\"pun\">;</span><span class=\"pln\">\r\n\t\t\twindow</span><span class=\"pun\">.</span><span class=\"pln\">onSlide</span><span class=\"pun\">=</span><span class=\"kwd\">false</span><span class=\"pun\">;</span><span class=\"pln\">\r\n\t\t\t</span><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"pln\">onSlide </span><span class=\"pun\">==</span><span class=\"pln\"> </span><span class=\"lit\">1</span><span class=\"pun\">){</span><span class=\"pln\">\r\n\t\t\t\tonSlide </span><span class=\"pun\">=</span><span class=\"pln\"> numSlides</span><span class=\"pun\">;</span><span class=\"pln\">\r\n\t\t\t\tresetLast</span><span class=\"pun\">(</span><span class=\"pln\">numSlides</span><span class=\"pun\">,</span><span class=\"pln\"> slideWidth</span><span class=\"pun\">);</span><span class=\"pln\">\r\n\t\t\t</span><span class=\"pun\">}</span><span class=\"pln\"> </span><span class=\"kwd\">else</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\r\n\t\t\t\tonSlide </span><span class=\"pun\">=</span><span class=\"pln\"> parseInt</span><span class=\"pun\">(</span><span class=\"pln\">onSlide</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">-</span><span class=\"pln\"> </span><span class=\"lit\">1</span><span class=\"pun\">;</span><span class=\"pln\">\t\r\n\t\t\t</span><span class=\"pun\">}</span><span class=\"pln\">\r\n\t\t\r\n\t\t\t</span><span class=\"pun\">});</span><span class=\"pln\">\r\n\t\t turnedOff </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"kwd\">true</span><span class=\"pun\">;</span><span class=\"pln\">\r\n\t\t\r\n\t</span><span class=\"pun\">});</span><span class=\"pln\">\r\n\t\r\n\t</span><span class=\"com\">//// Click next</span><span class=\"pln\">\r\n\t$</span><span class=\"pun\">(</span><span class=\"str\">\"#sliderNext\"</span><span class=\"pun\">).</span><span class=\"pln\">click</span><span class=\"pun\">(</span><span class=\"kwd\">function</span><span class=\"pun\">(</span><span class=\"kwd\">event</span><span class=\"pun\">){</span><span class=\"pln\">\t\r\n\t\t $</span><span class=\"pun\">(</span><span class=\"str\">\".slider-frame\"</span><span class=\"pun\">).</span><span class=\"pln\">animate</span><span class=\"pun\">({</span><span class=\"pln\">\r\n\t\t\tleft</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"str\">'-='</span><span class=\"pln\"> </span><span class=\"pun\">+</span><span class=\"pln\"> slideWidth </span><span class=\"pun\">+</span><span class=\"str\">'px'</span><span class=\"pun\">,</span><span class=\"pln\">\r\n\t\t\t</span><span class=\"pun\">},</span><span class=\"pln\"> </span><span class=\"str\">'slow'</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"kwd\">function</span><span class=\"pun\">()</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\r\n\t\t\t</span><span class=\"com\">// Animation complete.</span><span class=\"pln\">\r\n\t\t\t</span><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"pln\">window</span><span class=\"pun\">.</span><span class=\"pln\">onSlide</span><span class=\"pun\">)</span><span class=\"pln\"> onSlide </span><span class=\"pun\">=</span><span class=\"pln\"> window</span><span class=\"pun\">.</span><span class=\"pln\">onSlide</span><span class=\"pun\">;</span><span class=\"pln\">\r\n\t\t\twindow</span><span class=\"pun\">.</span><span class=\"pln\">onSlide</span><span class=\"pun\">=</span><span class=\"kwd\">false</span><span class=\"pun\">;</span><span class=\"pln\">\r\n\t\t\t\r\n\t\t\t</span><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"pln\">onSlide </span><span class=\"pun\">==</span><span class=\"pln\"> numSlides</span><span class=\"pun\">){</span><span class=\"pln\">\r\n\t\t\t\tonSlide </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"lit\">1</span><span class=\"pun\">;</span><span class=\"pln\">\r\n\t\t\t\tresetFront</span><span class=\"pun\">(</span><span class=\"pln\">slideWidth</span><span class=\"pun\">);</span><span class=\"pln\">\r\n\t\t\t</span><span class=\"pun\">}</span><span class=\"pln\"> </span><span class=\"kwd\">else</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\r\n\t\t\t\tonSlide </span><span class=\"pun\">=</span><span class=\"pln\"> parseInt</span><span class=\"pun\">(</span><span class=\"pln\">onSlide</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">+</span><span class=\"pln\"> </span><span class=\"lit\">1</span><span class=\"pun\">;</span><span class=\"pln\">\t\r\n\t\t\t</span><span class=\"pun\">}</span><span class=\"pln\">\r\n\t\t\t</span><span class=\"pun\">});</span><span class=\"pln\">\r\n\t\t\tturnedOff </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"kwd\">true</span><span class=\"pun\">;</span><span class=\"pln\">\r\n\t</span><span class=\"pun\">});</span><span class=\"pln\">\r\n\t\r\n</span><span class=\"pun\">});</span><span class=\"pln\">\r\n\r\n</span><span class=\"com\">////////////////////////////////////////////////////\t</span><span class=\"pln\">\r\n</span><span class=\"com\">////////////////////////////////////////////////////</span><span class=\"pln\">\r\n</span><span class=\"com\">////////////\t\t\t\t////////////</span><span class=\"pln\">\r\n</span><span class=\"com\">////////////\t\tFunctions \t////////////</span><span class=\"pln\">\r\n</span><span class=\"com\">////////////\t\t\t\t////////////</span><span class=\"pln\">\r\n</span><span class=\"com\">////////////////////////////////////////////////////</span><span class=\"pln\">\r\n</span><span class=\"com\">////////////////////////////////////////////////////</span><span class=\"pln\">\r\n\r\n</span><span class=\"kwd\">function</span><span class=\"pln\"> goToSlide</span><span class=\"pun\">(</span><span class=\"pln\">num</span><span class=\"pun\">,</span><span class=\"pln\"> slideWidth</span><span class=\"pun\">){</span><span class=\"pln\">\r\n\tonSlide </span><span class=\"pun\">=</span><span class=\"pln\"> num</span><span class=\"pun\">;</span><span class=\"pln\">\r\n\t$</span><span class=\"pun\">(</span><span class=\"str\">\".slider-frame\"</span><span class=\"pun\">).</span><span class=\"pln\">css</span><span class=\"pun\">(</span><span class=\"str\">\"left\"</span><span class=\"pun\">,-</span><span class=\"pln\">num</span><span class=\"pun\">*</span><span class=\"pln\">slideWidth</span><span class=\"pun\">);</span><span class=\"pln\">\r\n</span><span class=\"pun\">}</span><span class=\"pln\">\r\n\r\n</span><span class=\"kwd\">function</span><span class=\"pln\"> resetFront</span><span class=\"pun\">(</span><span class=\"pln\">slideWidth</span><span class=\"pun\">){</span><span class=\"pln\">\r\n\t$</span><span class=\"pun\">(</span><span class=\"str\">\".slider-frame\"</span><span class=\"pun\">).</span><span class=\"pln\">css</span><span class=\"pun\">(</span><span class=\"str\">\"left\"</span><span class=\"pun\">,-</span><span class=\"pln\">slideWidth</span><span class=\"pun\">);</span><span class=\"pln\">\t\r\n</span><span class=\"pun\">}</span><span class=\"pln\">\r\n\r\n</span><span class=\"kwd\">function</span><span class=\"pln\"> resetLast</span><span class=\"pun\">(</span><span class=\"pln\">numSlides</span><span class=\"pun\">,</span><span class=\"pln\"> slideWidth</span><span class=\"pun\">){</span><span class=\"pln\">\r\n\t$</span><span class=\"pun\">(</span><span class=\"str\">\".slider-frame\"</span><span class=\"pun\">).</span><span class=\"pln\">css</span><span class=\"pun\">(</span><span class=\"str\">\"left\"</span><span class=\"pun\">,-</span><span class=\"pln\">numSlides</span><span class=\"pun\">*</span><span class=\"pln\">slideWidth</span><span class=\"pun\">);</span><span class=\"pln\">\t\r\n</span><span class=\"pun\">}</span><span class=\"pln\">\r\n</span></pre>\r\n\r\nTo create the infinite scroll effect, you create clones of the first and last slide on the initial page load. So when you scroll from the first slide to the last, you see it move, then BOOM you're taken to the REAL last slide so fast you don't even know it. The same goes for the effect when you're on the last slide... it shows the first slide coming at you then WHAM you get taken to the first slide (which is actually the 2nd slide). Pretty cool right? (Esp with the sound effects).\r\n\r\nAnother little thing that I hear requested a lot is the auto slide. But how annoying is it when you try to control the slider and it goes to the next slide! Gah! It makes you want to shout at the slide show, but fret no more. With TSlider as soon as you take control of the slider, the auto slide stops and you the user have full control.\r\n\r\nSo there you have it, an easy and lightweight image slider.",
        "metafields": [
          {
            "object_type": "authors",
            "edit": 1,
            "value": "5712bb5de9c686d006000013",
            "key": "author",
            "title": "Author",
            "type": "object",
            "children": false
          },
          {
            "edit": 1,
            "value": "",
            "key": "hero",
            "title": "Hero",
            "type": "file",
            "children": false
          },
          {
            "edit": 1,
            "value": "",
            "key": "tag",
            "title": "Tag",
            "type": "text",
            "children": false
          },
          {
            "edit": 1,
            "value": "<p><br></p>",
            "key": "teaser",
            "title": "Teaser",
            "type": "html-textarea",
            "children": false
          },
          {
            "edit": 1,
            "value": "2013-04-13",
            "key": "published",
            "title": "Published",
            "type": "date",
            "children": false
          }
        ],
        "type_slug": "posts",
        "created": "2016-03-20T00:33:02.399Z",
        "user_id": "5357ef811693be2118000001",
        "options": null,
        "order": 26,
        "modified": "2016-04-17T18:34:27.563Z",
        "status": "published"
      },
      {
        "_id": "56edefbee6dcdbb570000010",
        "old_id": "56edefbe952f68b570a025c3",
        "bucket": "56edeedd694d9a5e6f000031",
        "slug": "maintain-css-element-width-percent-with-added-padding",
        "title": "Maintain CSS element width percent with added padding",
        "content": "So I'm working on my band's website...  of course it's all hands on deck and whatever you can do to pull your weight outside of playing your instrument well, making rehearsals and not being wasted before the show, helping out with the day to day tasks of pushing the band forward is always a bonus and helps moves things along, and of course I got delegated with building the website.\r\n\r\nWell I don't want to build just any shlock site for my band.  I want it to KICK ASS.  And it's well on it's way.  Which brings us to this blog break (with scotch in hand).  I just came across something that I wanted to share with you that makes building dynamic websites SO much easier.  \r\n\r\nDon't you hate it when you've built the perfect css container framework for your site for a great dynamic experience only to have it totally screwed up by a little padding?  I know what you're thinking, stop the madness!  Well...\r\n\r\nHere the secret sauce...\r\n<pre class=\"prettyprint prettyprinted\"><span class=\"tag\">&lt;style&gt;</span><span class=\"pln\">\r\n</span><span class=\"pun\">.</span><span class=\"pln\">something</span><span class=\"pun\">-</span><span class=\"pln\">responsive</span><span class=\"pun\">{</span><span class=\"pln\">\r\n  width</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"lit\">65</span><span class=\"pun\">%;</span><span class=\"pln\">  </span><span class=\"com\">/* Whatevs */</span><span class=\"pln\">\r\n  </span><span class=\"pun\">-</span><span class=\"pln\">webkit</span><span class=\"pun\">-</span><span class=\"pln\">box</span><span class=\"pun\">-</span><span class=\"pln\">sizing</span><span class=\"pun\">:</span><span class=\"pln\"> border</span><span class=\"pun\">-</span><span class=\"pln\">box</span><span class=\"pun\">;</span><span class=\"pln\"> </span><span class=\"com\">/* Safari/Chrome, other WebKit */</span><span class=\"pln\">\r\n  </span><span class=\"pun\">-</span><span class=\"pln\">moz</span><span class=\"pun\">-</span><span class=\"pln\">box</span><span class=\"pun\">-</span><span class=\"pln\">sizing</span><span class=\"pun\">:</span><span class=\"pln\"> border</span><span class=\"pun\">-</span><span class=\"pln\">box</span><span class=\"pun\">;</span><span class=\"pln\">    </span><span class=\"com\">/* Firefox, other Gecko */</span><span class=\"pln\">\r\n  box</span><span class=\"pun\">-</span><span class=\"pln\">sizing</span><span class=\"pun\">:</span><span class=\"pln\"> border</span><span class=\"pun\">-</span><span class=\"pln\">box</span><span class=\"pun\">;</span><span class=\"pln\">         </span><span class=\"com\">/* Opera/IE 8+ */</span><span class=\"pln\">\r\n</span><span class=\"pun\">}</span><span class=\"pln\">\r\n</span><span class=\"tag\">&lt;/style&gt;</span></pre>\r\n\r\nAdd this special little piece of styling to your css elements and watch the beauty unfold.  Thanks to the ever-awesome community of good dudes at <a href=\"http://stackoverflow.com/questions/779434/preventing-padding-propety-from-changing-width-or-height-in-css\" target=\"_blank\">stackoverfow</a> for this moment of enlightenment.",
        "metafields": [
          {
            "object_type": "authors",
            "edit": 1,
            "value": "5712bb5de9c686d006000013",
            "key": "author",
            "title": "Author",
            "type": "object",
            "children": false
          },
          {
            "edit": 1,
            "value": "",
            "key": "hero",
            "title": "Hero",
            "type": "file",
            "children": false
          },
          {
            "edit": 1,
            "value": "",
            "key": "tag",
            "title": "Tag",
            "type": "text",
            "children": false
          },
          {
            "edit": 1,
            "value": "<p><br></p>",
            "key": "teaser",
            "title": "Teaser",
            "type": "html-textarea",
            "children": false
          },
          {
            "edit": 1,
            "value": "2013-03-29",
            "key": "published",
            "title": "Published",
            "type": "date",
            "children": false
          }
        ],
        "type_slug": "posts",
        "created": "2016-03-20T00:33:02.399Z",
        "user_id": "5357ef811693be2118000001",
        "options": null,
        "order": 27,
        "modified": "2016-04-17T18:34:49.614Z",
        "status": "published"
      },
      {
        "_id": "56edefbee6dcdbb57000000f",
        "old_id": "56edefbe952f68b570a025c2",
        "bucket": "56edeedd694d9a5e6f000031",
        "slug": "do-you-hate-evil-internet-robots-so-do-i-heres-a-php-script-that-kicks-them-out-of-your-website",
        "title": "Do you hate evil internet robots? So do I.  Here's a PHP script that kicks them out of your website",
        "content": "<pre class=\"prettyprint prettyprinted\"><span class=\"pun\">&lt;?</span><span class=\"pln\">php\r\n</span><span class=\"com\">//// Oh you're a robot?  Take a hike buddy!  Or better yet, go bug google</span><span class=\"pln\">\r\n$offendingParties </span><span class=\"pun\">=</span><span class=\"pln\"> array</span><span class=\"pun\">(</span><span class=\"str\">\"188.443.232.31\"</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"str\">\"172.355.107.268\"</span><span class=\"pun\">);</span><span class=\"pln\">\r\n</span><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"pln\">in_array</span><span class=\"pun\">(</span><span class=\"pln\">$_SERVER</span><span class=\"pun\">[</span><span class=\"str\">'REMOTE_ADDR'</span><span class=\"pun\">],</span><span class=\"pln\"> $offendingParties</span><span class=\"pun\">)){</span><span class=\"pln\">\r\n\t</span><span class=\"com\">///// Later dude</span><span class=\"pln\">\r\n\theader</span><span class=\"pun\">(</span><span class=\"str\">\"Location: http://google.com\"</span><span class=\"pun\">);</span><span class=\"pln\">\r\n\t</span><span class=\"kwd\">die</span><span class=\"pun\">();</span><span class=\"pln\">\r\n</span><span class=\"pun\">}</span><span class=\"pln\">\r\n</span><span class=\"pun\">?&gt;</span></pre>",
        "metafields": [
          {
            "object_type": "authors",
            "edit": 1,
            "value": "5712bb5de9c686d006000013",
            "key": "author",
            "title": "Author",
            "type": "object",
            "children": false
          },
          {
            "edit": 1,
            "value": "",
            "key": "hero",
            "title": "Hero",
            "type": "file",
            "children": false
          },
          {
            "edit": 1,
            "value": "",
            "key": "tag",
            "title": "Tag",
            "type": "text",
            "children": false
          },
          {
            "edit": 1,
            "value": "<p><br></p>",
            "key": "teaser",
            "title": "Teaser",
            "type": "html-textarea",
            "children": false
          },
          {
            "edit": 1,
            "value": "2013-03-21",
            "key": "published",
            "title": "Published",
            "type": "date",
            "children": false
          }
        ],
        "type_slug": "posts",
        "created": "2016-03-20T00:33:02.398Z",
        "user_id": "5357ef811693be2118000001",
        "options": null,
        "order": 28,
        "modified": "2016-04-17T18:35:12.800Z",
        "status": "published"
      },
      {
        "_id": "56edefbee6dcdbb57000000e",
        "old_id": "56edefbe952f68b570a025c1",
        "bucket": "56edeedd694d9a5e6f000031",
        "slug": "easy-mail-function-using-php",
        "title": "Easy Mail Function Using PHP",
        "content": "Hey yall.  For this post, I've got a neat little funtion that's super easy for sending email with PHP.  The <a href=\"/contact\">contact page on this blog</a> uses the exact same function to process incoming messages.  (I always check the user's IP so if need be, I can block out any robots from spamming the form).  Check it out:\r\n\r\n<pre class=\"prettyprint prettyprinted\"><span class=\"pun\">&lt;?</span><span class=\"pln\">php \r\n$fullname </span><span class=\"pun\">=</span><span class=\"pln\"> $_POST</span><span class=\"pun\">[</span><span class=\"str\">'fullname'</span><span class=\"pun\">];</span><span class=\"pln\">\r\n$email </span><span class=\"pun\">=</span><span class=\"pln\"> $_POST</span><span class=\"pun\">[</span><span class=\"str\">'email'</span><span class=\"pun\">];</span><span class=\"pln\">\r\n$message </span><span class=\"pun\">=</span><span class=\"pln\"> $_POST</span><span class=\"pun\">[</span><span class=\"str\">'message'</span><span class=\"pun\">];</span><span class=\"pln\">\r\n$ip </span><span class=\"pun\">=</span><span class=\"pln\"> $_SERVER</span><span class=\"pun\">[</span><span class=\"str\">'REMOTE_ADDR'</span><span class=\"pun\">];</span><span class=\"pln\">\r\n</span><span class=\"kwd\">function</span><span class=\"pln\"> sendMail</span><span class=\"pun\">(</span><span class=\"pln\">$fullname</span><span class=\"pun\">,</span><span class=\"pln\"> $email</span><span class=\"pun\">,</span><span class=\"pln\"> $message</span><span class=\"pun\">,</span><span class=\"pln\"> $ip</span><span class=\"pun\">){</span><span class=\"pln\">\r\n\t$subject </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"str\">\"A user has sent you a message at yourblog.com\"</span><span class=\"pun\">;</span><span class=\"pln\">\r\n\t$message </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"str\">\"$fullname\\n$email\\n$ip\\n\\n$message\"</span><span class=\"pun\">;</span><span class=\"pln\">\r\n\tmail</span><span class=\"pun\">(</span><span class=\"str\">\"youremail@yourblog.com\"</span><span class=\"pun\">,</span><span class=\"pln\"> $subject</span><span class=\"pun\">,</span><span class=\"pln\"> $message</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"str\">\"FROM:$fullname&lt;$email&gt;\"</span><span class=\"pun\">);</span><span class=\"pln\">\r\n</span><span class=\"pun\">}</span><span class=\"pln\"> \r\n</span><span class=\"pun\">?&gt;</span></pre>",
        "metafields": [
          {
            "object_type": "authors",
            "edit": 1,
            "value": "5712bb5de9c686d006000013",
            "key": "author",
            "title": "Author",
            "type": "object",
            "children": false
          },
          {
            "edit": 1,
            "value": "",
            "key": "hero",
            "title": "Hero",
            "type": "file",
            "children": false
          },
          {
            "edit": 1,
            "value": "",
            "key": "tag",
            "title": "Tag",
            "type": "text",
            "children": false
          },
          {
            "edit": 1,
            "value": "<p><br></p>",
            "key": "teaser",
            "title": "Teaser",
            "type": "html-textarea",
            "children": false
          },
          {
            "edit": 1,
            "value": "2013-03-10",
            "key": "published",
            "title": "Published",
            "type": "date",
            "children": false
          }
        ],
        "type_slug": "posts",
        "created": "2016-03-20T00:33:02.366Z",
        "user_id": "5357ef811693be2118000001",
        "options": null,
        "order": 29,
        "modified": "2016-04-17T18:35:29.512Z",
        "status": "published"
      },
      {
        "_id": "56edefbee6dcdbb57000000d",
        "old_id": "56edefbe952f68b570a025c0",
        "bucket": "56edeedd694d9a5e6f000031",
        "slug": "php-function-that-creates-links-from-plain-text",
        "title": "PHP Function That Creates Links From Plain Text",
        "content": "Because I love quick little functions like this, here's a useful way to hunt through plain text and return all urls with links that return with target=\"_blank\":\r\n\r\n<pre class=\"prettyprint prettyprinted\"><span class=\"kwd\">function</span><span class=\"pln\"> get_links</span><span class=\"pun\">(</span><span class=\"pln\">$plain_text</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\r\n  $url_html </span><span class=\"pun\">=</span><span class=\"pln\"> preg_replace</span><span class=\"pun\">(</span><span class=\"pln\">\r\n    </span><span class=\"str\">'/(?&lt;!S)((http(s?):\\/\\/)|(www.))+([\\w.1-9\\&amp;=#?\\-~%;\\/]+)/'</span><span class=\"pun\">,</span><span class=\"pln\">\r\n    </span><span class=\"str\">'&lt;a target=\"_blank\" href=\"http$3://$4$5\"&gt;'</span><span class=\"pln\"> </span><span class=\"pun\">.</span><span class=\"pln\"> substr</span><span class=\"pun\">(</span><span class=\"str\">'http$3://$4$5'</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"lit\">0</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"lit\">20</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">.</span><span class=\"pln\"> </span><span class=\"str\">'&lt;/a&gt;'</span><span class=\"pun\">,</span><span class=\"pln\"> $plain_text</span><span class=\"pun\">);</span><span class=\"pln\">\r\n    $new_url_html </span><span class=\"pun\">=</span><span class=\"pln\"> str_replace </span><span class=\"pun\">(</span><span class=\"str\">\"!#/\"</span><span class=\"pln\"> </span><span class=\"pun\">,</span><span class=\"str\">\"\"</span><span class=\"pun\">,</span><span class=\"pln\"> $url_html</span><span class=\"pun\">);</span><span class=\"pln\">\r\n  </span><span class=\"kwd\">return</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"pln\">$new_url_html</span><span class=\"pun\">);</span><span class=\"pln\">\r\n</span><span class=\"pun\">}</span></pre>",
        "metafields": [
          {
            "object_type": "authors",
            "edit": 1,
            "value": "5712bb5de9c686d006000013",
            "key": "author",
            "title": "Author",
            "type": "object",
            "children": false
          },
          {
            "edit": 1,
            "value": "",
            "key": "hero",
            "title": "Hero",
            "type": "file",
            "children": false
          },
          {
            "edit": 1,
            "value": "",
            "key": "tag",
            "title": "Tag",
            "type": "text",
            "children": false
          },
          {
            "edit": 1,
            "value": "<p><br></p>",
            "key": "teaser",
            "title": "Teaser",
            "type": "html-textarea",
            "children": false
          },
          {
            "edit": 1,
            "value": "2013-05-09",
            "key": "published",
            "title": "Published",
            "type": "date",
            "children": false
          }
        ],
        "type_slug": "posts",
        "created": "2016-03-20T00:33:02.365Z",
        "user_id": "5357ef811693be2118000001",
        "options": null,
        "order": 30,
        "modified": "2016-04-17T18:33:29.924Z",
        "status": "published"
      },
      {
        "_id": "56edefbee6dcdbb57000000c",
        "old_id": "56edefbe952f68b570a025bf",
        "bucket": "56edeedd694d9a5e6f000031",
        "slug": "spyrock-relaunched-finally",
        "title": "Spyrock Relaunched (Finally!)",
        "content": "After about 6 months of coding on and off (which is def not the best way to maintain consistent code) I've finally relaunched my local music web app <a href=\"http://www.thespyrock.com\">Spyrock</a>.\r\n\r\nIt's not that it's done, it's that it's done enough.  Kind of like a song or album that the artist knows could be better, but they'll be much happier letting it go than tweaking and tinkering for another minute.  Of course I'm not going to stop tinkering and improving the site, but at least now this is a better representation of my current coding practice.  I launched this app about two years ago and as with everything and everyone, two years changes a lot of things...  which brings me to the idea for the this post.\r\n\r\nFirst of which, two years ago HTML5 was not as popular of a coding practice as browser support was not quite up to par.  And in that time another awesome development, <a href=\"http://twitter.github.com/bootstrap/\" target=\"_blank\">Bootstrap</a> became available.  And as you will see I made full use of this excellent HTML/CSS/Jquery framework in Spyrock's redesign / relaunch.  \r\n\r\nSo the inspiration behind this post is to let you know an interesting plugin that I found to solve a very important issue around using HTML attributes with form fields.  Adding the \"placeholder\" attribute will only be seen by modern browsers that can handle HTML5.  Well that makes it kind of tough for a lot of users who haven't updated their browser trying to read what to do in the form fields.  So I'm going to share a really cool plugin that I found to solve this present issue:\r\n\r\nCheck out: <a href=\"https://github.com/jamesallardice/Placeholders.js\" target=\"_blank\">Placeholders.js</a>.  This is a great way to solve this problem because it's SO EASY.  Check it out, this is all you have to add to your awesome HTML pages that you want to display correctly in legacy browsers:\r\n\r\n<pre class=\"prettyprint prettyprinted\"><span class=\"tag\">&lt;script</span><span class=\"pln\"> </span><span class=\"atn\">src</span><span class=\"pun\">=</span><span class=\"atv\">\"placeholders.js\"</span><span class=\"tag\">&gt;&lt;/script&gt;</span><span class=\"pln\">\r\n</span><span class=\"tag\">&lt;script&gt;</span><span class=\"pln\">\r\n$</span><span class=\"pun\">(</span><span class=\"pln\">document</span><span class=\"pun\">).</span><span class=\"pln\">ready</span><span class=\"pun\">(</span><span class=\"kwd\">function</span><span class=\"pun\">(){</span><span class=\"pln\">\r\n\t</span><span class=\"typ\">Placeholders</span><span class=\"pun\">.</span><span class=\"pln\">init</span><span class=\"pun\">();</span><span class=\"pln\">\r\n</span><span class=\"pun\">});</span><span class=\"pln\">\r\n</span><span class=\"tag\">&lt;/script&gt;</span></pre>\r\n\r\nAnd there you go!  Welcome to the modern age.  Now go visit <a href=\"http://www.thespyrock.com/\">http://www.thespyrock.com/</a> dust off that old browser and check it out in action.  And catch some local shows while you're at it!",
        "metafields": [
          {
            "object_type": "authors",
            "edit": 1,
            "value": "5712bb5de9c686d006000013",
            "key": "author",
            "title": "Author",
            "type": "object",
            "children": false
          },
          {
            "edit": 1,
            "value": "",
            "key": "hero",
            "title": "Hero",
            "type": "file",
            "children": false
          },
          {
            "edit": 1,
            "value": "",
            "key": "tag",
            "title": "Tag",
            "type": "text",
            "children": false
          },
          {
            "edit": 1,
            "value": "<p><br></p>",
            "key": "teaser",
            "title": "Teaser",
            "type": "html-textarea",
            "children": false
          },
          {
            "edit": 1,
            "value": "2013-02-13",
            "key": "published",
            "title": "Published",
            "type": "date",
            "children": false
          }
        ],
        "type_slug": "posts",
        "created": "2016-03-20T00:33:02.364Z",
        "user_id": "5357ef811693be2118000001",
        "options": null,
        "order": 31,
        "modified": "2016-04-17T18:36:17.897Z",
        "status": "published"
      },
      {
        "_id": "56edefbee6dcdbb57000000b",
        "old_id": "56edefbe952f68b570a025be",
        "bucket": "56edeedd694d9a5e6f000031",
        "slug": "introducing-responsful",
        "title": "Introducing Responsful",
        "content": "After a lot of research, cross-browser testing and LOTS of coffee, <b>Responsful</b> the light-weight, HTML5, CSS3 and cross-browser friendly responsive framework is now available for you to download!  \r\n\r\nTo download this framework and learn more about it's features go to <a href=\"http://responsful.tonyspiro.com\" target=\"_blank\">http://responsful.tonyspiro.com</a>.\r\nor download / add to it on GitHub: <a href=\"https://github.com/tonyspiro/responsful-1.0\" target=\"_blank'\">https://github.com/tonyspiro/responsful-1.0</a>.\r\n\r\nThis blog uses the Responsful Wordpress theme built using HTML5, CSS3 along with a JQuery fall back to help out older, slower browsers (I'm looking at you IE!).  Here's a run down of a typical page:\r\n<pre class=\"code prettyprint prettyprinted\"><span class=\"tag\">&lt;div</span><span class=\"pln\"> </span><span class=\"atn\">class</span><span class=\"pun\">=</span><span class=\"atv\">'page'</span><span class=\"tag\">&gt;</span><span class=\"pln\">\r\n  </span><span class=\"tag\">&lt;div</span><span class=\"pln\"> </span><span class=\"atn\">class</span><span class=\"pun\">=</span><span class=\"atv\">'header'</span><span class=\"tag\">&gt;</span><span class=\"pln\">\r\n    </span><span class=\"tag\">&lt;div</span><span class=\"pln\"> </span><span class=\"atn\">class</span><span class=\"pun\">=</span><span class=\"atv\">'menu'</span><span class=\"tag\">&gt;&lt;/div&gt;</span><span class=\"pln\">\r\n  </span><span class=\"tag\">&lt;/div&gt;</span><span class=\"pln\">\r\n  </span><span class=\"tag\">&lt;div</span><span class=\"pln\"> </span><span class=\"atn\">class</span><span class=\"pun\">=</span><span class=\"atv\">'content'</span><span class=\"tag\">&gt;</span><span class=\"pln\">\r\n    </span><span class=\"tag\">&lt;div</span><span class=\"pln\"> </span><span class=\"atn\">class</span><span class=\"pun\">=</span><span class=\"atv\">'sidebar'</span><span class=\"tag\">&gt;&lt;/div&gt;</span><span class=\"pln\">\r\n  </span><span class=\"tag\">&lt;div</span><span class=\"pln\"> </span><span class=\"atn\">class</span><span class=\"pun\">=</span><span class=\"atv\">'main-content'</span><span class=\"tag\">&gt;&lt;/div&gt;</span><span class=\"pln\">\r\n    </span><span class=\"tag\">&lt;/div&gt;</span><span class=\"pln\">\r\n  </span><span class=\"tag\">&lt;div</span><span class=\"pln\"> </span><span class=\"atn\">class</span><span class=\"pun\">=</span><span class=\"atv\">'footer'</span><span class=\"tag\">&gt;&lt;/div&gt;</span><span class=\"pln\">\r\n</span><span class=\"tag\">&lt;/div&gt;</span></pre>\r\n\r\nYou can use \"span-10\" through \"span-100\" to dictate a grid that spans between 10% and 100% of the containing area.  I also tried to include basic CSS classes that I always add, which hopefully will save you hours off of development time.  These useful CSS classes include:\r\n\r\n- Resetting all browser defaults\r\n- adding \"hidden\" class adds \"display: none;\"\r\n- adding \"left\" floats an element left\r\n- adding \"right\" floats an element right\r\n- adding mt-10, mr-10, mb-10, ml-10 adds margins to an element Top, Right, Bottom and Left.  Pixels options are 10-50\r\n- adding pad-10 adds 10 pixel padding to an element.  Pixel options are 10-50",
        "metafields": [
          {
            "object_type": "authors",
            "edit": 1,
            "value": "5712bb5de9c686d006000013",
            "key": "author",
            "title": "Author",
            "type": "object",
            "children": false
          },
          {
            "edit": 1,
            "value": "",
            "key": "hero",
            "title": "Hero",
            "type": "file",
            "children": false
          },
          {
            "edit": 1,
            "value": "",
            "key": "tag",
            "title": "Tag",
            "type": "text",
            "children": false
          },
          {
            "edit": 1,
            "value": "<p><br></p>",
            "key": "teaser",
            "title": "Teaser",
            "type": "html-textarea",
            "children": false
          },
          {
            "edit": 1,
            "value": "2013-02-10",
            "key": "published",
            "title": "Published",
            "type": "date",
            "children": false
          }
        ],
        "type_slug": "posts",
        "created": "2016-03-20T00:33:02.363Z",
        "user_id": "5357ef811693be2118000001",
        "options": null,
        "order": 32,
        "modified": "2016-04-17T18:36:35.725Z",
        "status": "published"
      },
      {
        "_id": "56edefbee6dcdbb570000007",
        "old_id": "56edefbe952f68b570a025ba",
        "bucket": "56edeedd694d9a5e6f000031",
        "slug": "generate-a-random-string-with-php",
        "title": "Generate a Random String With PHP",
        "content": "This is a really useful function that generates a random string including numbers and letters both upper and lower case. You can also specify the length with the $length variable. \r\n<pre class=\"prettyprint prettyprinted\"><span class=\"pun\">&lt;?</span><span class=\"pln\">php\r\n</span><span class=\"com\">///////////////   Random String   /////////////// </span><span class=\"pln\">\r\n</span><span class=\"kwd\">function</span><span class=\"pln\"> randString</span><span class=\"pun\">(</span><span class=\"pln\">$length</span><span class=\"pun\">,</span><span class=\"pln\"> $charset</span><span class=\"pun\">=</span><span class=\"str\">'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmcqrstuvwxyz0123456789'</span><span class=\"pun\">){</span><span class=\"pln\">\r\n    $str </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"str\">''</span><span class=\"pun\">;</span><span class=\"pln\">\r\n    $count </span><span class=\"pun\">=</span><span class=\"pln\"> strlen</span><span class=\"pun\">(</span><span class=\"pln\">$charset</span><span class=\"pun\">);</span><span class=\"pln\">\r\n    </span><span class=\"kwd\">while</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"pln\">$length</span><span class=\"pun\">--)</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\r\n        $str </span><span class=\"pun\">.=</span><span class=\"pln\"> $charset</span><span class=\"pun\">[</span><span class=\"pln\">mt_rand</span><span class=\"pun\">(</span><span class=\"lit\">0</span><span class=\"pun\">,</span><span class=\"pln\"> $count</span><span class=\"pun\">-</span><span class=\"lit\">1</span><span class=\"pun\">)];</span><span class=\"pln\">\r\n    </span><span class=\"pun\">}</span><span class=\"pln\">\r\n    </span><span class=\"kwd\">return</span><span class=\"pln\"> $str</span><span class=\"pun\">;</span><span class=\"pln\">\r\n</span><span class=\"pun\">}</span><span class=\"pln\">\r\n\r\necho randString</span><span class=\"pun\">(</span><span class=\"lit\">20</span><span class=\"pun\">);</span><span class=\"pln\">\r\n</span><span class=\"com\">/// returns k7MefN6BfghCM45NyrV6 or some other 20 string randomness</span><span class=\"pln\">\r\n</span><span class=\"pun\">?&gt;</span></pre>",
        "metafields": [
          {
            "object_type": "authors",
            "edit": 1,
            "value": "5712bb5de9c686d006000013",
            "key": "author",
            "title": "Author",
            "type": "object",
            "children": false
          },
          {
            "edit": 1,
            "value": "",
            "key": "hero",
            "title": "Hero",
            "type": "file",
            "children": false
          },
          {
            "edit": 1,
            "value": "",
            "key": "tag",
            "title": "Tag",
            "type": "text",
            "children": false
          },
          {
            "edit": 1,
            "value": "<p><br></p>",
            "key": "teaser",
            "title": "Teaser",
            "type": "html-textarea",
            "children": false
          },
          {
            "edit": 1,
            "value": "2013-02-03",
            "key": "published",
            "title": "Published",
            "type": "date",
            "children": false
          }
        ],
        "type_slug": "posts",
        "created": "2016-03-20T00:33:02.359Z",
        "user_id": "5357ef811693be2118000001",
        "options": null,
        "order": 33,
        "modified": "2016-04-17T18:37:39.577Z",
        "status": "published"
      },
      {
        "_id": "56edefbee6dcdbb570000021",
        "old_id": "56edefbe952f68b570a025d4",
        "bucket": "56edeedd694d9a5e6f000031",
        "slug": "getting-started-with-grunt-js-html5-boilerplate",
        "title": "Getting Started With The Grunt.js Twitter Bootstrap HTML5 Boilerplate",
        "content": "<a href=\"https://github.com/tonyspiro/grunt-html5-boilerplate\" target=\"_blank\">Download the repo on github here</a>.\r\n\r\nI'm always looking for ways to streamline and organize my front end workflow and I've found great success in&nbsp;using LESS to organize my CSS and Grunt.js to automate my compiling and minifying tasks and I'd like to share a new starter project that will help you use these tools to your advantage.\r\n\r\nI love the <a href=\"http://www.initializr.com/\" target=\"_blank\">Initializer project</a> which provides a robust boilerplate by including the latest Twitter Bootstrap, JQuery, Modernizer, and Google Analytics code. I thought why not incorporate this great boilerplate with Grunt.js to streamline &nbsp;my workflow&nbsp;to&nbsp;keep my&nbsp;code base more organized, easier to manage, easy to scale and make&nbsp;page load times MUCH faster. And we all know the studies that prove even a fraction of a second faster page load time improves&nbsp;the bottom line. Just ask&nbsp;<a href=\"http://blog.gigaspaces.com/amazon-found-every-100ms-of-latency-cost-them-1-in-sales/\" target=\"_blank\">Amazon</a>.\r\n\r\nSo lets get started in building out our Grunt.js HTML5 Boilerplate project!\r\n\r\nHead over to the Github repo for <a href=\"https://github.com/tonyspiro/grunt-html5-boilerplate\" target=\"_blank\">Grunt.js HTML5 Boilerplate</a> and <a href=\"https://github.com/tonyspiro/grunt-html5-boilerplate/archive/master.zip\" target=\"_blank\">download the zip</a>.\r\n\r\nAfter unpacking it's contents, head to your Terminal and cd into the folder:\r\n<pre class=\"prettyprint prettyprinted\"><span class=\"pln\">cd grunt</span><span class=\"pun\">-</span><span class=\"pln\">html5</span><span class=\"pun\">-</span><span class=\"pln\">boilerplate</span><span class=\"pun\">-</span><span class=\"pln\">master</span></pre>\r\nRun this next command only if you do not have Grunt.js installed on your machine:\r\n<pre class=\"prettyprint prettyprinted\"><span class=\"pln\">npm install </span><span class=\"pun\">-</span><span class=\"pln\">g grunt</span><span class=\"pun\">-</span><span class=\"pln\">cli</span></pre>\r\nAfter grunt is installed globally on your machine you can then begin using Grunt HTML5 Boilerplate. &nbsp;Run the following command to run grunt only once:\r\n<pre class=\"prettyprint prettyprinted\"><span class=\"pln\">grunt</span></pre>\r\nYou'll notice in your terminal, you may see pretty green and blue lights and happy messages like:\r\n<pre class=\"prettyprint prettyprinted\"><span class=\"typ\">Running</span><span class=\"pln\"> </span><span class=\"str\">\"less:production\"</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"pln\">less</span><span class=\"pun\">)</span><span class=\"pln\"> task</span></pre>\r\nand\r\n<pre class=\"prettyprint prettyprinted\"><span class=\"typ\">Done</span><span class=\"pun\">,</span><span class=\"pln\"> without errors</span><span class=\"pun\">.</span></pre>\r\nThis means that grunt is working and you now have a beautiful Bootstrap enabled index.html with just ONE MINIFIED CSS FILE and ONE MINIFIED JAVASCRIPT FILE.\r\n\r\nYou can also have Grunt.js watch your files for edits and process them on the fly. Just run this command, make your edits and Grunt.js will process and compile your changes.\r\n<pre class=\"prettyprint prettyprinted\"><span class=\"pln\">grunt watch</span></pre>\r\nHopefully you found this helpful and will try Grunt.js Initilizer on your next web project.  I think you'll find it will help your project to become more organized, scalable and have faster page load times once deployed live.\r\n\r\nHit me up here in the comments or on Twitter if you have any questions or thoughts: <a href=\"https://twitter.com/tonyspiro\" target=\"_blank\">@tonyspiro</a>",
        "metafields": [
          {
            "object_type": "authors",
            "edit": 1,
            "value": "5712bb5de9c686d006000013",
            "key": "author",
            "title": "Author",
            "type": "object",
            "children": false
          },
          {
            "edit": 1,
            "value": "",
            "key": "hero",
            "title": "Hero",
            "type": "file",
            "children": false
          },
          {
            "edit": 1,
            "value": "",
            "key": "tag",
            "title": "Tag",
            "type": "text",
            "children": false
          },
          {
            "edit": 1,
            "value": "<p><br></p>",
            "key": "teaser",
            "title": "Teaser",
            "type": "html-textarea",
            "children": false
          },
          {
            "edit": 1,
            "value": "2014-09-24",
            "key": "published",
            "title": "Published",
            "type": "date",
            "children": false
          }
        ],
        "type_slug": "posts",
        "created": "2016-03-20T00:33:02.412Z",
        "user_id": "5357ef811693be2118000001",
        "options": null,
        "order": 34,
        "modified": "2016-04-17T18:39:15.356Z",
        "status": "published"
      },
      {
        "_id": "56edefbee6dcdbb570000009",
        "old_id": "56edefbe952f68b570a025bc",
        "bucket": "56edeedd694d9a5e6f000031",
        "slug": "using-php-to-get-a-string-between-two-strings",
        "title": "Using PHP to Get a String Between Two Strings",
        "content": "Here’s a cool function that I use quite often. It looks for two different strings, a beginning and end string, from the original string and returns the middle remainder. Super useful if you do a lot of get_file_contents() and API coding. Check it out:\r\n<pre class=\"prettyprint prettyprinted\"><span class=\"pun\">&lt;?</span><span class=\"pln\">php\r\n</span><span class=\"kwd\">function</span><span class=\"pln\"> getBetween</span><span class=\"pun\">(</span><span class=\"pln\">$content</span><span class=\"pun\">,</span><span class=\"pln\">$start</span><span class=\"pun\">,</span><span class=\"pln\">$end</span><span class=\"pun\">){</span><span class=\"pln\">\r\n    $r </span><span class=\"pun\">=</span><span class=\"pln\"> explode</span><span class=\"pun\">(</span><span class=\"pln\">$start</span><span class=\"pun\">,</span><span class=\"pln\"> $content</span><span class=\"pun\">);</span><span class=\"pln\">\r\n    </span><span class=\"kwd\">if</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"pln\">isset</span><span class=\"pun\">(</span><span class=\"pln\">$r</span><span class=\"pun\">[</span><span class=\"lit\">1</span><span class=\"pun\">])){</span><span class=\"pln\">\r\n        $r </span><span class=\"pun\">=</span><span class=\"pln\"> explode</span><span class=\"pun\">(</span><span class=\"pln\">$end</span><span class=\"pun\">,</span><span class=\"pln\"> $r</span><span class=\"pun\">[</span><span class=\"lit\">1</span><span class=\"pun\">]);</span><span class=\"pln\">\r\n        </span><span class=\"kwd\">return</span><span class=\"pln\"> $r</span><span class=\"pun\">[</span><span class=\"lit\">0</span><span class=\"pun\">];</span><span class=\"pln\">\r\n    </span><span class=\"pun\">}</span><span class=\"pln\">\r\n    </span><span class=\"kwd\">return</span><span class=\"pln\"> </span><span class=\"str\">''</span><span class=\"pun\">;</span><span class=\"pln\">\r\n</span><span class=\"pun\">}</span><span class=\"pln\">\r\n</span><span class=\"pun\">?&gt;</span><span class=\"pln\">\r\n\r\nExample: \r\n</span><span class=\"pun\">&lt;?</span><span class=\"pln\">php \r\n$content </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"str\">\"Try to find the guy in the middle with this function!\"</span><span class=\"pun\">;</span><span class=\"pln\">\r\n$start </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"str\">\"Try to find \"</span><span class=\"pun\">;</span><span class=\"pln\">\r\n$end </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"str\">\" with this function!\"</span><span class=\"pun\">;</span><span class=\"pln\">\r\n$output </span><span class=\"pun\">=</span><span class=\"pln\"> getBetween</span><span class=\"pun\">(</span><span class=\"pln\">$content</span><span class=\"pun\">,</span><span class=\"pln\">$start</span><span class=\"pun\">,</span><span class=\"pln\">$end</span><span class=\"pun\">);</span><span class=\"pln\">\r\necho $output</span><span class=\"pun\">;</span><span class=\"pln\">\r\n</span><span class=\"pun\">?&gt;</span><span class=\"pln\">\r\nThis will return \"the guy in the middle\".</span></pre>",
        "metafields": [
          {
            "object_type": "authors",
            "edit": 1,
            "value": "5712bb5de9c686d006000013",
            "key": "author",
            "title": "Author",
            "type": "object",
            "children": false
          },
          {
            "edit": 1,
            "value": "",
            "key": "hero",
            "title": "Hero",
            "type": "file",
            "children": false
          },
          {
            "edit": 1,
            "value": "",
            "key": "tag",
            "title": "Tag",
            "type": "text",
            "children": false
          },
          {
            "edit": 1,
            "value": "<p><br></p>",
            "key": "teaser",
            "title": "Teaser",
            "type": "html-textarea",
            "children": false
          },
          {
            "edit": 1,
            "value": "2013-02-03",
            "key": "published",
            "title": "Published",
            "type": "date",
            "children": false
          },
          {
            "edit": 1,
            "value": 119,
            "key": "wp-id",
            "title": "WP ID",
            "type": "text",
            "children": false
          }
        ],
        "type_slug": "posts",
        "created": "2016-03-20T00:33:02.362Z",
        "user_id": "5357ef811693be2118000001",
        "options": null,
        "order": 35,
        "modified": "2016-04-18T01:09:23.800Z",
        "status": "published"
      },
      {
        "_id": "56edefbee6dcdbb57000000a",
        "old_id": "56edefbe952f68b570a025bd",
        "bucket": "56edeedd694d9a5e6f000031",
        "slug": "new-blog",
        "title": "New Blog!",
        "content": "If you're reading this then congratulations! you're one of the few who have come across my little blog.  Maybe this is your first visit, if it's not, you'll recognize that something's changed...\r\n\r\nYes, the blog looks different, because it's now running on a new custom theme that I built.  I call the design <b>Responsful</b> and it was built out of a desire to learn more about responsive designs and to learn more about building themes for Wordpress.  Go ahead and resize your browser to see the responsive awesomeness!\r\n\r\nAll in all I'm pretty proud of this little lightweight, responsive theme and hope to release a stable version to the open source community soon.\r\n\r\nPlease have a look around the blog and <a href=\"http:///contact\" target=\"\">hit me up</a> if you have any questions or just want to say hi.&nbsp;<div><br></div><div>Cheers!</div><div><span style=\"line-height: 1.42857;\">Tony</span></div>",
        "metafields": [
          {
            "object_type": "authors",
            "edit": 1,
            "value": "5712bb5de9c686d006000013",
            "key": "author",
            "title": "Author",
            "type": "object",
            "children": false
          },
          {
            "edit": 1,
            "value": "",
            "key": "hero",
            "title": "Hero",
            "type": "file",
            "children": false
          },
          {
            "edit": 1,
            "value": "",
            "key": "tag",
            "title": "Tag",
            "type": "text",
            "children": false
          },
          {
            "edit": 1,
            "value": "<p><br></p>",
            "key": "teaser",
            "title": "Teaser",
            "type": "html-textarea",
            "children": false
          },
          {
            "edit": 1,
            "value": "2013-02-03",
            "key": "published",
            "title": "Published",
            "type": "date",
            "children": false
          }
        ],
        "type_slug": "posts",
        "created": "2016-03-20T00:33:02.363Z",
        "user_id": "5357ef811693be2118000001",
        "options": null,
        "order": 36,
        "modified": "2016-04-17T18:36:53.916Z",
        "status": "published"
      },
      {
        "_id": "56edefbee6dcdbb570000008",
        "old_id": "56edefbe952f68b570a025bb",
        "bucket": "56edeedd694d9a5e6f000031",
        "slug": "using-getbetween-and-curl-to-return-content-from-a-remote-website",
        "title": "Using getBetween and Curl to Return Content From a Remote Website",
        "content": "So here’s an interesting scenario: You need to grab the contents of an external webpage and display the result on your site or store in a database. PHP makes it really easy to do this useful operation. In my previous post about returning a string between two strings with php, I introduced you to the magic of getBetween() to isolate a string by giving two bookend strings and returning the meat in the middle. Now I’ll use this function to grab the title from The New York Times website using Curl.\r\n\r\nHere is the code that I will use to accomplish this:\r\n<pre class=\"prettyprint prettyprinted\"><span class=\"pun\">&lt;?</span><span class=\"pln\">php\r\n\r\n</span><span class=\"kwd\">function</span><span class=\"pln\"> getBetween</span><span class=\"pun\">(</span><span class=\"pln\">$content</span><span class=\"pun\">,</span><span class=\"pln\">$start</span><span class=\"pun\">,</span><span class=\"pln\">$end</span><span class=\"pun\">){</span><span class=\"pln\">\r\n    $r </span><span class=\"pun\">=</span><span class=\"pln\"> explode</span><span class=\"pun\">(</span><span class=\"pln\">$start</span><span class=\"pun\">,</span><span class=\"pln\"> $content</span><span class=\"pun\">);</span><span class=\"pln\">\r\n    </span><span class=\"kwd\">if</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"pln\">isset</span><span class=\"pun\">(</span><span class=\"pln\">$r</span><span class=\"pun\">[</span><span class=\"lit\">1</span><span class=\"pun\">])){</span><span class=\"pln\">\r\n        $r </span><span class=\"pun\">=</span><span class=\"pln\"> explode</span><span class=\"pun\">(</span><span class=\"pln\">$end</span><span class=\"pun\">,</span><span class=\"pln\"> $r</span><span class=\"pun\">[</span><span class=\"lit\">1</span><span class=\"pun\">]);</span><span class=\"pln\">\r\n        </span><span class=\"kwd\">return</span><span class=\"pln\"> $r</span><span class=\"pun\">[</span><span class=\"lit\">0</span><span class=\"pun\">];</span><span class=\"pln\">\r\n    </span><span class=\"pun\">}</span><span class=\"pln\">\r\n    </span><span class=\"kwd\">return</span><span class=\"pln\"> </span><span class=\"str\">''</span><span class=\"pun\">;</span><span class=\"pln\">\r\n</span><span class=\"pun\">}</span><span class=\"pln\">\r\n\r\n</span><span class=\"kwd\">function</span><span class=\"pln\"> curl</span><span class=\"pun\">(</span><span class=\"pln\">$processPage</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\r\n    $ch </span><span class=\"pun\">=</span><span class=\"pln\"> curl_init</span><span class=\"pun\">();</span><span class=\"pln\">\r\n    curl_setopt</span><span class=\"pun\">(</span><span class=\"pln\">$ch</span><span class=\"pun\">,</span><span class=\"pln\"> CURLOPT_URL</span><span class=\"pun\">,</span><span class=\"pln\"> $processPage</span><span class=\"pun\">);</span><span class=\"pln\">\r\n    curl_setopt</span><span class=\"pun\">(</span><span class=\"pln\">$ch</span><span class=\"pun\">,</span><span class=\"pln\"> CURLOPT_RETURNTRANSFER</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"lit\">1</span><span class=\"pun\">);</span><span class=\"pln\">\r\n    curl_setopt</span><span class=\"pun\">(</span><span class=\"pln\">$ch</span><span class=\"pun\">,</span><span class=\"pln\"> CURLOPT_FOLLOWLOCATION</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"lit\">1</span><span class=\"pun\">);</span><span class=\"pln\">\r\n    $buffer </span><span class=\"pun\">=</span><span class=\"pln\"> curl_exec</span><span class=\"pun\">(</span><span class=\"pln\">$ch</span><span class=\"pun\">);</span><span class=\"pln\">\r\n    curl_close</span><span class=\"pun\">(</span><span class=\"pln\">$ch</span><span class=\"pun\">);</span><span class=\"pln\">\r\n    </span><span class=\"kwd\">return</span><span class=\"pln\"> $buffer</span><span class=\"pun\">;</span><span class=\"pln\">\r\n</span><span class=\"pun\">}</span><span class=\"pln\">\r\n\r\n$processPage </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"str\">\"http://newyorktimes.com/\"</span><span class=\"pun\">;</span><span class=\"pln\">\r\n\r\necho getBetween</span><span class=\"pun\">(</span><span class=\"pln\">curl</span><span class=\"pun\">(</span><span class=\"pln\">$processPage</span><span class=\"pun\">),</span><span class=\"pln\"> </span><span class=\"str\">\"</span><title>&lt;span class=\"str\"&gt;\"&lt;/span&gt;&lt;span class=\"pun\"&gt;,&lt;/span&gt;&lt;span class=\"str\"&gt;\"&lt;/span&gt;</title><span class=\"str\">\"</span><span class=\"pun\">);</span><span class=\"pln\">\r\n\r\n</span><span class=\"com\">///// returns The New York Times - Breaking News, World News &amp; Multimedia</span><span class=\"pln\">\r\n\r\n</span><span class=\"pun\">?&gt;</span></pre>",
        "metafields": [
          {
            "object_type": "authors",
            "edit": 1,
            "value": "5712bb5de9c686d006000013",
            "key": "author",
            "title": "Author",
            "type": "object",
            "children": false
          },
          {
            "edit": 1,
            "value": "",
            "key": "hero",
            "title": "Hero",
            "type": "file",
            "children": false
          },
          {
            "edit": 1,
            "value": "",
            "key": "tag",
            "title": "Tag",
            "type": "text",
            "children": false
          },
          {
            "edit": 1,
            "value": "<p><br></p>",
            "key": "teaser",
            "title": "Teaser",
            "type": "html-textarea",
            "children": false
          },
          {
            "edit": 1,
            "value": "2013-02-03",
            "key": "published",
            "title": "Published",
            "type": "date",
            "children": false
          }
        ],
        "type_slug": "posts",
        "created": "2016-03-20T00:33:02.360Z",
        "user_id": "5357ef811693be2118000001",
        "options": null,
        "order": 37,
        "modified": "2016-04-17T18:37:56.628Z",
        "status": "published"
      }
    ],
    "media": [
      {
        "_id": "56edefbfe6dcdbb570000031",
        "name": "4e6fa2f0-ee33-11e5-9838-d35c110ee128.png",
        "original_name": "index.png",
        "type": "image/png",
        "location": "https://cosmicjs.com/uploads",
        "bucket": "56edeedd694d9a5e6f000031",
        "size": 94494
      },
      {
        "_id": "56edefbfe6dcdbb570000032",
        "name": "4e7d5e90-ee33-11e5-9838-d35c110ee128.jpg",
        "original_name": "1.jpg",
        "type": "image/jpeg",
        "location": "https://cosmicjs.com/uploads",
        "bucket": "56edeedd694d9a5e6f000031",
        "size": 90355
      },
      {
        "_id": "56edefbfe6dcdbb570000033",
        "name": "4e868650-ee33-11e5-9838-d35c110ee128.jpg",
        "original_name": "css3.jpg",
        "type": "image/jpeg",
        "location": "https://cosmicjs.com/uploads",
        "bucket": "56edeedd694d9a5e6f000031",
        "size": 6125
      },
      {
        "_id": "56edefbfe6dcdbb570000034",
        "name": "4e8d1600-ee33-11e5-9838-d35c110ee128.jpg",
        "original_name": "evil_robot_by_b_maze.jpg",
        "type": "image/jpeg",
        "location": "https://cosmicjs.com/uploads",
        "bucket": "56edeedd694d9a5e6f000031",
        "size": 48627
      },
      {
        "_id": "56edefbfe6dcdbb570000035",
        "name": "4e950540-ee33-11e5-9838-d35c110ee128.jpg",
        "original_name": "memcached_banner75.jpg",
        "type": "image/jpeg",
        "location": "https://cosmicjs.com/uploads",
        "bucket": "56edeedd694d9a5e6f000031",
        "size": 37859
      },
      {
        "_id": "56edefbfe6dcdbb570000036",
        "name": "4e98d5d0-ee33-11e5-9838-d35c110ee128.png",
        "original_name": "free-cloud-database-on-rackspace1.png",
        "type": "image/png",
        "location": "https://cosmicjs.com/uploads",
        "bucket": "56edeedd694d9a5e6f000031",
        "size": 55789
      },
      {
        "_id": "56edefbfe6dcdbb570000037",
        "name": "4e9c7f50-ee33-11e5-9838-d35c110ee128.jpg",
        "original_name": "BLACKJACK.jpg",
        "type": "image/jpeg",
        "location": "https://cosmicjs.com/uploads",
        "bucket": "56edeedd694d9a5e6f000031",
        "size": 66249
      },
      {
        "_id": "56edefbfe6dcdbb570000038",
        "name": "4ea38430-ee33-11e5-9838-d35c110ee128.jpg",
        "original_name": "images.jpg",
        "type": "image/jpeg",
        "location": "https://cosmicjs.com/uploads",
        "bucket": "56edeedd694d9a5e6f000031",
        "size": 9955
      },
      {
        "_id": "56edefbfe6dcdbb570000039",
        "name": "4ea5ce20-ee33-11e5-9838-d35c110ee128.jpg",
        "original_name": "1.jpg",
        "type": "image/jpeg",
        "location": "https://cosmicjs.com/uploads",
        "bucket": "56edeedd694d9a5e6f000031",
        "size": 92649
      },
      {
        "_id": "56edefbfe6dcdbb57000003a",
        "name": "4ead4830-ee33-11e5-9838-d35c110ee128.jpg",
        "original_name": "dw.jpg",
        "type": "image/jpeg",
        "location": "https://cosmicjs.com/uploads",
        "bucket": "56edeedd694d9a5e6f000031",
        "size": 62117
      },
      {
        "_id": "56edefbfe6dcdbb57000003b",
        "name": "4eb1dc10-ee33-11e5-9838-d35c110ee128.jpg",
        "original_name": "gretch.jpg",
        "type": "image/jpeg",
        "location": "https://cosmicjs.com/uploads",
        "bucket": "56edeedd694d9a5e6f000031",
        "size": 297852
      },
      {
        "_id": "56edefc0e6dcdbb57000003c",
        "name": "4ef303c0-ee33-11e5-9838-d35c110ee128.png",
        "original_name": "screenshot-1.png",
        "type": "image/png",
        "location": "https://cosmicjs.com/uploads",
        "bucket": "56edeedd694d9a5e6f000031",
        "size": 58617
      },
      {
        "_id": "56edefc0e6dcdbb57000003d",
        "name": "4efca0b0-ee33-11e5-9838-d35c110ee128.png",
        "original_name": "screenshot-2.png",
        "type": "image/png",
        "location": "https://cosmicjs.com/uploads",
        "bucket": "56edeedd694d9a5e6f000031",
        "size": 39767
      },
      {
        "_id": "56edefc0e6dcdbb57000003e",
        "name": "4f1f43e0-ee33-11e5-9838-d35c110ee128.gif",
        "original_name": "TONY.gif",
        "type": "image/gif",
        "location": "https://cosmicjs.com/uploads",
        "bucket": "56edeedd694d9a5e6f000031",
        "size": 92061
      },
      {
        "_id": "56edefc0e6dcdbb57000003f",
        "name": "4f4a99a0-ee33-11e5-9838-d35c110ee128.jpg",
        "original_name": "Screen-Shot-2014-10-15-at-9.52.59-PM.jpg",
        "type": "image/jpeg",
        "location": "https://cosmicjs.com/uploads",
        "bucket": "56edeedd694d9a5e6f000031",
        "size": 341016
      },
      {
        "_id": "56edefc0e6dcdbb570000040",
        "name": "4f5bb0a0-ee33-11e5-9838-d35c110ee128.zip",
        "original_name": "301-redirects.zip",
        "type": "application/zip",
        "location": "https://cosmicjs.com/uploads",
        "bucket": "56edeedd694d9a5e6f000031",
        "size": 237705
      },
      {
        "_id": "56edefc1e6dcdbb570000041",
        "name": "4f8076b0-ee33-11e5-9838-d35c110ee128.png",
        "original_name": "onec1ty.png",
        "type": "image/png",
        "location": "https://cosmicjs.com/uploads",
        "bucket": "56edeedd694d9a5e6f000031",
        "size": 872589
      },
      {
        "_id": "56edefc1e6dcdbb570000042",
        "name": "4fba2450-ee33-11e5-9838-d35c110ee128.jpg",
        "original_name": "logo-w-brand.jpg",
        "type": "image/jpeg",
        "location": "https://cosmicjs.com/uploads",
        "bucket": "56edeedd694d9a5e6f000031",
        "size": 11833
      },
      {
        "_id": "56edefc1e6dcdbb570000043",
        "name": "4ff69110-ee33-11e5-9838-d35c110ee128.png",
        "original_name": "download.png",
        "type": "image/png",
        "location": "https://cosmicjs.com/uploads",
        "bucket": "56edeedd694d9a5e6f000031",
        "size": 40716
      },
      {
        "_id": "5712ba1ee9c686d006000012",
        "name": "183fe010-0421-11e6-8e50-dd42082f9224-avatar.jpg",
        "original_name": "avatar.jpg",
        "size": 28046,
        "type": "image/jpeg",
        "bucket": "56edeedd694d9a5e6f000031",
        "created": "2016-04-16T22:18:06.896Z",
        "folder": null,
        "location": "https://cosmicjs.com/uploads"
      },
      {
        "_id": "5712f4dde9c686d006000014",
        "name": "1c3f8170-0444-11e6-8e50-dd42082f9224-space-buddy.jpg",
        "original_name": "space-buddy.jpg",
        "size": 89711,
        "type": "image/jpeg",
        "bucket": "56edeedd694d9a5e6f000031",
        "created": "2016-04-17T02:28:45.968Z",
        "folder": null,
        "location": "https://cosmicjs.com/uploads"
      },
      {
        "_id": "5713924ce9c686d006000017",
        "name": "f249d6f0-04a1-11e6-8e50-dd42082f9224-Screen Shot 2016-04-17 at 8.40.13 AM.png",
        "original_name": "Screen Shot 2016-04-17 at 8.40.13 AM.png",
        "size": 29705,
        "type": "image/png",
        "bucket": "56edeedd694d9a5e6f000031",
        "created": "2016-04-17T13:40:28.260Z",
        "folder": null,
        "location": "https://cosmicjs.com/uploads"
      },
      {
        "_id": "5713a02ae9c686d006000018",
        "name": "362f74d0-04aa-11e6-8e50-dd42082f9224-Screen Shot 2016-04-17 at 9.39.19 AM.png",
        "original_name": "Screen Shot 2016-04-17 at 9.39.19 AM.png",
        "size": 18498,
        "type": "image/png",
        "bucket": "56edeedd694d9a5e6f000031",
        "created": "2016-04-17T14:39:38.181Z",
        "folder": null,
        "location": "https://cosmicjs.com/uploads"
      },
      {
        "_id": "5713a65fe9c686d006000019",
        "name": "e97e4a40-04ad-11e6-8e50-dd42082f9224-Screen Shot 2016-04-17 at 10.05.41 AM.png",
        "original_name": "Screen Shot 2016-04-17 at 10.05.41 AM.png",
        "size": 18743,
        "type": "image/png",
        "bucket": "56edeedd694d9a5e6f000031",
        "created": "2016-04-17T15:06:07.461Z",
        "folder": null,
        "location": "https://cosmicjs.com/uploads"
      },
      {
        "_id": "5713f53de9c686d00600001c",
        "name": "eb87ca80-04dc-11e6-8e50-dd42082f9224-Screen Shot 2016-04-17 at 3.42.12 PM.png",
        "original_name": "Screen Shot 2016-04-17 at 3.42.12 PM.png",
        "size": 14828,
        "type": "image/png",
        "bucket": "56edeedd694d9a5e6f000031",
        "created": "2016-04-17T20:42:37.230Z",
        "folder": null,
        "location": "https://cosmicjs.com/uploads"
      },
      {
        "_id": "5713f5b4e9c686d00600001d",
        "name": "32d01500-04dd-11e6-8e50-dd42082f9224-Screen Shot 2016-04-17 at 3.44.14 PM.png",
        "original_name": "Screen Shot 2016-04-17 at 3.44.14 PM.png",
        "size": 17288,
        "type": "image/png",
        "bucket": "56edeedd694d9a5e6f000031",
        "created": "2016-04-17T20:44:36.842Z",
        "folder": null,
        "location": "https://cosmicjs.com/uploads"
      },
      {
        "_id": "5713f687e9c686d00600001e",
        "name": "b0783410-04dd-11e6-8e50-dd42082f9224-logo1_new.png",
        "original_name": "logo1_new.png",
        "size": 5068,
        "type": "image/png",
        "bucket": "56edeedd694d9a5e6f000031",
        "created": "2016-04-17T20:48:07.634Z",
        "folder": null,
        "location": "https://cosmicjs.com/uploads"
      },
      {
        "_id": "5713f6b4e9c686d00600001f",
        "name": "cb06c1c0-04dd-11e6-8e50-dd42082f9224-Screen Shot 2016-04-17 at 3.48.31 PM.png",
        "original_name": "Screen Shot 2016-04-17 at 3.48.31 PM.png",
        "size": 22996,
        "type": "image/png",
        "bucket": "56edeedd694d9a5e6f000031",
        "created": "2016-04-17T20:48:52.189Z",
        "folder": null,
        "location": "https://cosmicjs.com/uploads"
      },
      {
        "_id": "5713f77be9c686d006000021",
        "name": "41aa00d0-04de-11e6-8e50-dd42082f9224-ball.png",
        "original_name": "ball.png",
        "size": 543850,
        "type": "image/png",
        "bucket": "56edeedd694d9a5e6f000031",
        "created": "2016-04-17T20:52:11.266Z",
        "folder": null,
        "location": "https://cosmicjs.com/uploads"
      },
      {
        "_id": "57140569e9c686d006000022",
        "name": "8f5413e0-04e6-11e6-8e50-dd42082f9224-Screen-Shot-2014-08-11-at-9.51.15-PM.png",
        "original_name": "Screen-Shot-2014-08-11-at-9.51.15-PM.png",
        "size": 68580,
        "type": "image/png",
        "bucket": "56edeedd694d9a5e6f000031",
        "created": "2016-04-17T21:51:37.509Z",
        "folder": null,
        "location": "https://cosmicjs.com/uploads"
      },
      {
        "_id": "5714056de9c686d006000023",
        "name": "91f87ff0-04e6-11e6-8e50-dd42082f9224-Screen-Shot-2014-02-12-at-9.27.57-PM.png",
        "original_name": "Screen-Shot-2014-02-12-at-9.27.57-PM.png",
        "size": 646240,
        "type": "image/png",
        "bucket": "56edeedd694d9a5e6f000031",
        "created": "2016-04-17T21:51:41.977Z",
        "folder": null,
        "location": "https://cosmicjs.com/uploads"
      },
      {
        "_id": "5714056ee9c686d006000024",
        "name": "926b8d10-04e6-11e6-8e50-dd42082f9224-Screen-Shot-2015-06-16-at-7.39.11-PM.png",
        "original_name": "Screen-Shot-2015-06-16-at-7.39.11-PM.png",
        "size": 592497,
        "type": "image/png",
        "bucket": "56edeedd694d9a5e6f000031",
        "created": "2016-04-17T21:51:42.704Z",
        "folder": null,
        "location": "https://cosmicjs.com/uploads"
      },
      {
        "_id": "5714056fe9c686d006000025",
        "name": "929f9560-04e6-11e6-8e50-dd42082f9224-Screen-Shot-2015-04-12-at-9.19.49-AM.png",
        "original_name": "Screen-Shot-2015-04-12-at-9.19.49-AM.png",
        "size": 609155,
        "type": "image/png",
        "bucket": "56edeedd694d9a5e6f000031",
        "created": "2016-04-17T21:51:43.045Z",
        "folder": null,
        "location": "https://cosmicjs.com/uploads"
      },
      {
        "_id": "57140570e9c686d006000026",
        "name": "9363a8b0-04e6-11e6-8e50-dd42082f9224-Screen-Shot-2015-08-29-at-5.37.52-PM1.png",
        "original_name": "Screen-Shot-2015-08-29-at-5.37.52-PM1.png",
        "size": 756425,
        "type": "image/png",
        "bucket": "56edeedd694d9a5e6f000031",
        "created": "2016-04-17T21:51:44.357Z",
        "folder": null,
        "location": "https://cosmicjs.com/uploads"
      },
      {
        "_id": "57140572e9c686d006000027",
        "name": "94a1ce00-04e6-11e6-8e50-dd42082f9224-Screen-Shot-2014-04-22-at-6.48.27-PM.png",
        "original_name": "Screen-Shot-2014-04-22-at-6.48.27-PM.png",
        "size": 1048572,
        "type": "image/png",
        "bucket": "56edeedd694d9a5e6f000031",
        "created": "2016-04-17T21:51:46.413Z",
        "folder": null,
        "location": "https://cosmicjs.com/uploads"
      },
      {
        "_id": "5714068be9c686d006000028",
        "name": "3c2ae760-04e7-11e6-8e50-dd42082f9224-Screen-Shot-2014-10-15-at-9.52.59-PM.jpg",
        "original_name": "Screen-Shot-2014-10-15-at-9.52.59-PM.jpg",
        "size": 341016,
        "type": "image/jpeg",
        "bucket": "56edeedd694d9a5e6f000031",
        "created": "2016-04-17T21:56:27.486Z",
        "folder": null,
        "location": "https://cosmicjs.com/uploads"
      },
      {
        "_id": "571408fae9c686d006000029",
        "name": "af4f9190-04e8-11e6-8e50-dd42082f9224-Screen Shot 2016-04-17 at 5.06.13 PM.png",
        "original_name": "Screen Shot 2016-04-17 at 5.06.13 PM.png",
        "size": 286167,
        "type": "image/png",
        "bucket": "56edeedd694d9a5e6f000031",
        "created": "2016-04-17T22:06:50.157Z",
        "folder": null,
        "location": "https://cosmicjs.com/uploads"
      },
      {
        "_id": "57140966e9c686d00600002b",
        "name": "efe561d0-04e8-11e6-8e50-dd42082f9224-Screen Shot 2016-04-17 at 5.08.25 PM.png",
        "original_name": "Screen Shot 2016-04-17 at 5.08.25 PM.png",
        "size": 13630,
        "type": "image/png",
        "bucket": "56edeedd694d9a5e6f000031",
        "created": "2016-04-17T22:08:38.511Z",
        "folder": null,
        "location": "https://cosmicjs.com/uploads"
      },
      {
        "_id": "57140a55e9c686d00600002c",
        "name": "7e97fdc0-04e9-11e6-8e50-dd42082f9224-Screen Shot 2016-04-17 at 5.12.21 PM.png",
        "original_name": "Screen Shot 2016-04-17 at 5.12.21 PM.png",
        "size": 13467,
        "type": "image/png",
        "bucket": "56edeedd694d9a5e6f000031",
        "created": "2016-04-17T22:12:37.917Z",
        "folder": null,
        "location": "https://cosmicjs.com/uploads"
      },
      {
        "_id": "57140a96e9c686d00600002d",
        "name": "a5414cb0-04e9-11e6-8e50-dd42082f9224-Screen Shot 2016-04-17 at 5.12.58 PM.png",
        "original_name": "Screen Shot 2016-04-17 at 5.12.58 PM.png",
        "size": 405110,
        "type": "image/png",
        "bucket": "56edeedd694d9a5e6f000031",
        "created": "2016-04-17T22:13:42.784Z",
        "folder": null,
        "location": "https://cosmicjs.com/uploads"
      },
      {
        "_id": "571414dae9c686d00600002f",
        "name": "c381d720-04ef-11e6-8e50-dd42082f9224-cosmicjs.png",
        "original_name": "cosmicjs.png",
        "size": 24704,
        "type": "image/png",
        "bucket": "56edeedd694d9a5e6f000031",
        "created": "2016-04-17T22:57:30.516Z",
        "folder": null,
        "location": "https://cosmicjs.com/uploads"
      },
      {
        "_id": "57203662303fc3c437000003",
        "name": "cdd0c5f0-0c2a-11e6-8b51-a94dba6d5176-freedom.png",
        "original_name": "freedom.png",
        "size": 263401,
        "type": "image/png",
        "bucket": "56edeedd694d9a5e6f000031",
        "created": "2016-04-27T03:47:46.267Z",
        "folder": null,
        "location": "https://cosmicjs.com/uploads"
      },
      {
        "_id": "576ad141229db02131000075",
        "name": "9e7da2b0-38a2-11e6-b9c1-cd06b34cd6eb-17475736.png",
        "original_name": "17475736.png",
        "size": 45169,
        "type": "image/png",
        "bucket": "56edeedd694d9a5e6f000031",
        "created": "2016-06-22T17:56:17.676Z",
        "folder": null,
        "location": "https://cosmicjs.com/uploads"
      },
      {
        "_id": "576ad199229db02131000076",
        "name": "d2f15eb0-38a2-11e6-b9c1-cd06b34cd6eb-state-of-chaos.png",
        "original_name": "state-of-chaos.png",
        "size": 1254888,
        "type": "image/png",
        "bucket": "56edeedd694d9a5e6f000031",
        "created": "2016-06-22T17:57:45.707Z",
        "folder": null,
        "location": "https://cosmicjs.com/uploads"
      }
    ],
    "media_folders": null,
    "plugins": null
  }
}